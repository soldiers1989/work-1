<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper  
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"  
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.aif.rpt.biz.aml.processing.server.AMLSecondMakeupCheckSql">

	<!-- AML第二次补录大额信息的查询 -->
	<select id="selectAMLSecondMakeupCheck" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		${pageBegin}
		select
		AML_ANALYSISRESULT.WORK_DATE,
		AML_DATASOURCE.REF_NO,
		AML_DATASOURCE.ORIG_REF_NO,
		AML_DATASOURCE.DEPART_ID,
		AML_DATASOURCE.SEQ_NO,
		AML_DATASOURCE.DEPART_NAME,
		AML_DATASOURCE.DEPART_TYPE,
		AML_DATASOURCE.DEPART_AREACODE,
		AML_DATASOURCE.CLIENT_ID,
		AML_DATASOURCE.PCODE,
		AML_DATASOURCE.CLIENT_NAME,
		AML_DATASOURCE.CLIENT_TYPE,
		AML_DATASOURCE.CLIENT_IC_TYPE,
		AML_DATASOURCE.CLIENT_IC_TYPE_MEMO,
		AML_DATASOURCE.CLIENT_IC_NO,
		AML_DATASOURCE.CLIENT_NATIONALITY,
		AML_DATASOURCE.PHONE,
		AML_DATASOURCE.ADDRESS,
		AML_DATASOURCE.OTHER_CONTACT,
		AML_DATASOURCE.INDUSTRY_TYPE,
		AML_DATASOURCE.REGISTERED_CAPITAL,
		AML_DATASOURCE.REP_NAME,
		AML_DATASOURCE.REP_IC_TYPE,
		AML_DATASOURCE.REP_IC_TYPE_MEMO,
		AML_DATASOURCE.REP_IC_NO,
		AML_DATASOURCE.AGENT_NAME,
		AML_DATASOURCE.AGENT_IC_NO,
		AML_DATASOURCE.AGENT_IC_TYPE,
		AML_DATASOURCE.AGENT_IC_TYPE_MEMO,
		AML_DATASOURCE.AGENT_NATIONALITY,
		AML_DATASOURCE.ACCT_ID,
		AML_DATASOURCE.ACCT_TYPE,
		AML_DATASOURCE.PBOC_NUM_ACCT,
		substring(AML_DATASOURCE.ACCT_OPEN_TIME,1,8) AS
		ACCT_OPEN_TIME,
		substring(AML_DATASOURCE.ACCT_CLOSE_TIME,1,8) AS
		ACCT_CLOSE_TIME,
		AML_DATASOURCE.TRADE_DATE,
		AML_DATASOURCE.TRADE_TIME,
		AML_DATASOURCE.VALUE_DATE,
		AML_DATASOURCE.TRADE_VENUE_COUNTRY,
		AML_DATASOURCE.TRADE_VENUE_REGION,
		AML_DATASOURCE.TRADE_MODE,
		AML_DATASOURCE.DEBIT_CREDIT,
		AML_DATASOURCE.TRADE_COUNTRY,
		AML_DATASOURCE.TRADE_REGION,
		AML_DATASOURCE.TRADE_CODE,
		AML_DATASOURCE.FUND_USAGE,
		AML_DATASOURCE.CURRENCY,
		AML_DATASOURCE.AMT,
		AML_DATASOURCE.DOLLAR_AMT,
		AML_DATASOURCE.CTPY_FI_CODE,
		AML_DATASOURCE.CTPY_FI_PCODE,
		AML_DATASOURCE.CTPY_FI_NAME,
		AML_DATASOURCE.CTPY_FI_TYPE,
		AML_DATASOURCE.CTPY_FI_COUNTRY,
		AML_DATASOURCE.CTPY_FI_REGION_CODE,
		AML_DATASOURCE.CTPY_NAME,
		AML_DATASOURCE.CTPY_TYPE,
		AML_DATASOURCE.CTPY_NATIONALITY,
		AML_DATASOURCE.CTPY_IC_CODE,
		AML_DATASOURCE.CTPY_IC_TYPE,
		AML_DATASOURCE.CTPY_IC_TYPE_MEMO,
		AML_DATASOURCE.CTPY_ACCT_ID,
		AML_DATASOURCE.CTPY_ACCT_TYPE,
		AML_DATASOURCE.TRADE_TYPE,
		AML_DATASOURCE.REPAYMENT_DATE,
		AML_DATASOURCE.LOAN_REPAYMENT_TYPE,
		AML_DATASOURCE.IS_SWAP,
		AML_DATASOURCE.SWAP_CODE,
		AML_DATASOURCE.CLIENT_IC_OTHER_TYPE,
		AML_DATASOURCE.BANK_RELATIONSHIP,
		AML_DATASOURCE.REP_IC_OTHER_TYPE,
		AML_DATASOURCE.AGENT_IC_OTHER_TYPE,
		AML_DATASOURCE.REC_PAY_TYPE,
		AML_DATASOURCE.REC_PAY_NO,
		AML_DATASOURCE.TRADE_UNCOUNTER_TYPE,
		AML_DATASOURCE.TRADE_UNCOUNTER_OTHER_TYPE,
		AML_DATASOURCE.TRADE_UNCOUNTER_NO,
		AML_DATASOURCE.TRADE_BPTC,
		AML_DATASOURCE.RMB_AMT,
		AML_DATASOURCE.REMARK1,
		AML_DATASOURCE.REMARK2,
		AML_ANALYSISRESULT.MAKE_STATUS,
		AML_ANALYSISRESULT.MAKER,
		AML_ANALYSISRESULT.MAKE_TIME,
		AML_ANALYSISRESULT.CHECK_STATUS,
		AML_ANALYSISRESULT.CHECKER,
		AML_ANALYSISRESULT.CHECK_TIME,
		AML_ANALYSISRESULT.CHECK_INFO,
		AML_ANALYSISRESULT.IS_DEL,
		AML_ANALYSISRESULT.DEL_INFO,
		AML_DATASOURCE.STATUS,
		AML_ANALYSISRESULT.BATCH_NO,
		AML_ANALYSISRESULT.RULE_CODE,
		AML_ANALYSISRESULT.RULE_TYPE,
		AML_ANALYSISRESULT.UNIT_NAME,
		AML_ANALYSISRESULT.UNIT_CODE,
		AML_ANALYSISRESULT.RELATION_TYPE,
		AML_ANALYSISRESULT.REPORT_DATE,
		AML_ANALYSISRESULT.SHADINESS_LEVEL,
		AML_ANALYSISRESULT.SHADINESS_DESC,
		AML_ANALYSISRESULT.ACTION_MEASURE,
		AML_ANALYSISRESULT.ORIG_BATCH_NO,
		AML_ANALYSISRESULT.ORIG_WORK_DATE,
		AML_ANALYSISRESULT.ORIG_CLIENT_ID,
		AML_ANALYSISRESULT.ORIG_TRADE_DATE,
		AML_ANALYSISRESULT.ORIG_RULE_CODE,
		AML_ANALYSISRESULT.REPORT_TYPE,
		AML_ANALYSISRESULT.IF_RPT,
		AML_ANALYSISRESULT.RPT_STATUS,
		AML_ANALYSISRESULT.FINAL_RPT_STATUS,
		AML_ANALYSISRESULT.RET_MSE,
		AML_ANALYSISRESULT.REPORTER,
		AML_ANALYSISRESULT.RPT_FILE,
		AML_ANALYSISRESULT.RPT_ZIP,
		AML_ANALYSISRESULT.SERIAL_NUM_1,
		AML_ANALYSISRESULT.SERIAL_NUM_2,
		AML_ANALYSISRESULT.SERIAL_NUM_3,
		TB_ANALYSISRULES.RULE_NOTES,
		TB_ANALYSISRULES.RULE_ANALYSE_METHOD,
		CASE WHEN
		AML_DATASOURCE.TRADE_REGION='000000' or len(TRADE_REGION) = 2 THEN
		AML_DATASOURCE.TRADE_COUNTRY ELSE AML_DATASOURCE.TRADE_REGION END WHITHER,
		AML_DATASOURCE.IS_CROSSBORDER
		from TB_ANALYSISRULES, AML_ANALYSISRESULT, AML_DATASOURCE
		where
		AML_ANALYSISRESULT.REF_NO = AML_DATASOURCE.REF_NO
		and AML_ANALYSISRESULT.DEPART_ID = AML_DATASOURCE.DEPART_ID
		and
		AML_ANALYSISRESULT.RULE_CODE= TB_ANALYSISRULES.RULE_CODE
		and
		AML_ANALYSISRESULT.RULE_TYPE = TB_ANALYSISRULES.RULE_TYPE
		and AML_ANALYSISRESULT.RULE_TYPE='01'
		and 1=1
		<if test="WORK_DATE!=null  &amp;&amp; !&quot;&quot;.equals(WORK_DATE.trim())">
			and AML_ANALYSISRESULT.WORK_DATE like '%'+#{WORK_DATE}+'%'
		</if>
		<if test="REF_NO!=null  &amp;&amp; !&quot;&quot;.equals(REF_NO.trim())">
			and AML_ANALYSISRESULT.REF_NO like '%'+#{REF_NO}+'%'
		</if>
		<if test="CHECK_STATUS!=null  &amp;&amp; !&quot;&quot;.equals(CHECK_STATUS.trim())">
			and AML_ANALYSISRESULT.CHECK_STATUS like '%'+#{CHECK_STATUS}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
		${pageEnd}
	</select>

	<select id="selectAMLSecondMakeupCheck_totalCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*)
		from TB_ANALYSISRULES, AML_ANALYSISRESULT, AML_DATASOURCE
		where  AML_ANALYSISRESULT.REF_NO = AML_DATASOURCE.REF_NO
		and AML_ANALYSISRESULT.DEPART_ID = AML_DATASOURCE.DEPART_ID
		and AML_ANALYSISRESULT.RULE_CODE= TB_ANALYSISRULES.RULE_CODE
		and AML_ANALYSISRESULT.RULE_TYPE = TB_ANALYSISRULES.RULE_TYPE
		and AML_ANALYSISRESULT.RULE_TYPE='01'
		and 1=1
		<if test="WORK_DATE!=null  &amp;&amp; !&quot;&quot;.equals(WORK_DATE.trim())">
			and AML_ANALYSISRESULT.WORK_DATE like '%'+#{WORK_DATE}+'%'
		</if>
		<if test="REF_NO!=null  &amp;&amp; !&quot;&quot;.equals(REF_NO.trim())">
			and AML_ANALYSISRESULT.REF_NO like '%'+#{REF_NO}+'%'
		</if>
		<if test="CHECK_STATUS!=null  &amp;&amp; !&quot;&quot;.equals(CHECK_STATUS.trim())">
			and AML_ANALYSISRESULT.CHECK_STATUS like '%'+#{CHECK_STATUS}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
	</select>
	
		<!-- AML第二次补录信息的可疑补录查询   -->
		<!-- 此处有union语句，更改时要注意！！！ -->
	<select id="selectAMLSecondMakeupSuspiciousCheck" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		${pageBegin}
		select
		AML_ANALYSISRESULT.WORK_DATE,
		AML_DATASOURCE.REF_NO,
		AML_DATASOURCE.ORIG_REF_NO,
		AML_DATASOURCE.DEPART_ID,
		AML_DATASOURCE.SEQ_NO,
		AML_DATASOURCE.DEPART_NAME,
		AML_DATASOURCE.DEPART_TYPE,
		AML_DATASOURCE.DEPART_AREACODE,
		AML_DATASOURCE.CLIENT_ID,
		AML_DATASOURCE.PCODE,
		AML_DATASOURCE.CLIENT_NAME,
		AML_DATASOURCE.CLIENT_TYPE,
		AML_DATASOURCE.CLIENT_IC_TYPE,
		AML_DATASOURCE.CLIENT_IC_TYPE_MEMO,
		AML_DATASOURCE.CLIENT_IC_NO,
		AML_DATASOURCE.CLIENT_NATIONALITY,
		AML_DATASOURCE.PHONE,
		AML_DATASOURCE.ADDRESS,
		AML_DATASOURCE.OTHER_CONTACT,
		AML_DATASOURCE.INDUSTRY_TYPE,
		AML_DATASOURCE.REGISTERED_CAPITAL,
		AML_DATASOURCE.REP_NAME,
		AML_DATASOURCE.REP_IC_TYPE,
		AML_DATASOURCE.REP_IC_TYPE_MEMO,
		AML_DATASOURCE.REP_IC_NO,
		AML_DATASOURCE.AGENT_NAME,
		AML_DATASOURCE.AGENT_IC_NO,
		AML_DATASOURCE.AGENT_IC_TYPE,
		AML_DATASOURCE.AGENT_IC_TYPE_MEMO,
		AML_DATASOURCE.AGENT_NATIONALITY,
		AML_DATASOURCE.ACCT_ID,
		AML_DATASOURCE.ACCT_TYPE,
		AML_DATASOURCE.PBOC_NUM_ACCT,
		substring(AML_DATASOURCE.ACCT_OPEN_TIME,1,8) AS
		ACCT_OPEN_TIME,
		substring(AML_DATASOURCE.ACCT_CLOSE_TIME,1,8) AS
		ACCT_CLOSE_TIME,
		AML_DATASOURCE.TRADE_DATE,
		AML_DATASOURCE.TRADE_TIME,
		AML_DATASOURCE.VALUE_DATE,
		AML_DATASOURCE.TRADE_VENUE_COUNTRY,
		AML_DATASOURCE.TRADE_VENUE_REGION,
		AML_DATASOURCE.TRADE_MODE,
		AML_DATASOURCE.DEBIT_CREDIT,
		AML_DATASOURCE.TRADE_COUNTRY,
		AML_DATASOURCE.TRADE_REGION,
		AML_DATASOURCE.TRADE_CODE,
		AML_DATASOURCE.FUND_USAGE,
		AML_DATASOURCE.CURRENCY,
		AML_DATASOURCE.AMT,
		AML_DATASOURCE.DOLLAR_AMT,
		AML_DATASOURCE.CTPY_FI_CODE,
		AML_DATASOURCE.CTPY_FI_PCODE,
		AML_DATASOURCE.CTPY_FI_NAME,
		AML_DATASOURCE.CTPY_FI_TYPE,
		AML_DATASOURCE.CTPY_FI_COUNTRY,
		AML_DATASOURCE.CTPY_FI_REGION_CODE,
		AML_DATASOURCE.CTPY_NAME,
		AML_DATASOURCE.CTPY_TYPE,
		AML_DATASOURCE.CTPY_NATIONALITY,
		AML_DATASOURCE.CTPY_IC_CODE,
		AML_DATASOURCE.CTPY_IC_TYPE,
		AML_DATASOURCE.CTPY_IC_TYPE_MEMO,
		AML_DATASOURCE.CTPY_ACCT_ID,
		AML_DATASOURCE.CTPY_ACCT_TYPE,
		AML_DATASOURCE.TRADE_TYPE,
		AML_DATASOURCE.REPAYMENT_DATE,
		AML_DATASOURCE.LOAN_REPAYMENT_TYPE,
		AML_DATASOURCE.IS_SWAP,
		AML_DATASOURCE.SWAP_CODE,
		AML_DATASOURCE.CLIENT_IC_OTHER_TYPE,
		AML_DATASOURCE.BANK_RELATIONSHIP,
		AML_DATASOURCE.REP_IC_OTHER_TYPE,
		AML_DATASOURCE.AGENT_IC_OTHER_TYPE,
		AML_DATASOURCE.REC_PAY_TYPE,
		AML_DATASOURCE.REC_PAY_NO,
		AML_DATASOURCE.TRADE_UNCOUNTER_TYPE,
		AML_DATASOURCE.TRADE_UNCOUNTER_OTHER_TYPE,
		AML_DATASOURCE.TRADE_UNCOUNTER_NO,
		AML_DATASOURCE.TRADE_BPTC,
		AML_DATASOURCE.RMB_AMT,
		AML_DATASOURCE.REMARK1,
		AML_DATASOURCE.REMARK2,
		AML_ANALYSISRESULT.MAKE_STATUS,
		AML_ANALYSISRESULT.MAKER,
		AML_ANALYSISRESULT.MAKE_TIME,
		AML_ANALYSISRESULT.CHECK_STATUS,
		AML_ANALYSISRESULT.CHECKER,
		AML_ANALYSISRESULT.CHECK_TIME,
		AML_ANALYSISRESULT.CHECK_INFO,
		AML_ANALYSISRESULT.IS_DEL,
		AML_ANALYSISRESULT.DEL_INFO,
		AML_DATASOURCE.STATUS,
		AML_ANALYSISRESULT.BATCH_NO,
		AML_ANALYSISRESULT.RULE_CODE,
		AML_ANALYSISRESULT.RULE_TYPE,
		AML_ANALYSISRESULT.UNIT_NAME,
		AML_ANALYSISRESULT.UNIT_CODE,
		AML_ANALYSISRESULT.RELATION_TYPE,
		AML_ANALYSISRESULT.REPORT_DATE,
		AML_ANALYSISRESULT.SHADINESS_LEVEL,
		AML_ANALYSISRESULT.SHADINESS_DESC,
		AML_ANALYSISRESULT.ACTION_MEASURE,
		AML_ANALYSISRESULT.ORIG_BATCH_NO,
		AML_ANALYSISRESULT.ORIG_WORK_DATE,
		AML_ANALYSISRESULT.ORIG_CLIENT_ID,
		AML_ANALYSISRESULT.ORIG_TRADE_DATE,
		AML_ANALYSISRESULT.ORIG_RULE_CODE,
		AML_ANALYSISRESULT.REPORT_TYPE,
		AML_ANALYSISRESULT.IF_RPT,
		AML_ANALYSISRESULT.RPT_STATUS,
		AML_ANALYSISRESULT.FINAL_RPT_STATUS,
		AML_ANALYSISRESULT.RET_MSE,
		AML_ANALYSISRESULT.REPORTER,
		AML_ANALYSISRESULT.RPT_FILE,
		AML_ANALYSISRESULT.RPT_ZIP,
		AML_ANALYSISRESULT.SERIAL_NUM_1,
		AML_ANALYSISRESULT.SERIAL_NUM_2,
		AML_ANALYSISRESULT.SERIAL_NUM_3,
		AML_ANALYSISRESULT.IF_DELAY_RPT,
		AML_ANALYSISRESULT.DELAY_DATE,
		AML_ANALYSISRESULT.BS_DETR,
		AML_ANALYSISRESULT.BS_DORP,
		AML_ANALYSISRESULT.BS_ODRP,
		AML_ANALYSISRESULT.BS_TPTR,
		AML_ANALYSISRESULT.BS_OTPR,
		AML_ANALYSISRESULT.BS_STCB,
		AML_ANALYSISRESULT.BS_AOSP,
		AML_ANALYSISRESULT.BS_TOSC,
		AML_ANALYSISRESULT.BS_MIRS,
		TB_ANALYSISRULES.RULE_NOTES,
		TB_ANALYSISRULES.RULE_ANALYSE_METHOD,
		CASE WHEN
		AML_DATASOURCE.TRADE_REGION='000000' or len(TRADE_REGION) = 2 THEN
		AML_DATASOURCE.TRADE_COUNTRY ELSE AML_DATASOURCE.TRADE_REGION END WHITHER,
		AML_DATASOURCE.IS_CROSSBORDER
		from TB_ANALYSISRULES, AML_ANALYSISRESULT, AML_DATASOURCE
		where
		AML_ANALYSISRESULT.REF_NO = AML_DATASOURCE.REF_NO
		and AML_ANALYSISRESULT.DEPART_ID = AML_DATASOURCE.DEPART_ID
		and
		AML_ANALYSISRESULT.RULE_CODE= TB_ANALYSISRULES.RULE_CODE
		and
		AML_ANALYSISRESULT.RULE_TYPE = TB_ANALYSISRULES.RULE_TYPE
		and AML_ANALYSISRESULT.RULE_TYPE='02'
		and 1=1
		<if test="WORK_DATE!=null  &amp;&amp; !&quot;&quot;.equals(WORK_DATE.trim())">
			and AML_ANALYSISRESULT.WORK_DATE like '%'+#{WORK_DATE}+'%'
		</if>
		<if test="REF_NO!=null  &amp;&amp; !&quot;&quot;.equals(REF_NO.trim())">
			and AML_ANALYSISRESULT.REF_NO like '%'+#{REF_NO}+'%'
		</if>
		<if test="CHECK_STATUS!=null  &amp;&amp; !&quot;&quot;.equals(CHECK_STATUS.trim())">
			and AML_ANALYSISRESULT.CHECK_STATUS like '%'+#{CHECK_STATUS}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
		union 
		select
		AML_ANALYSISRESULT.WORK_DATE,
		AML_DATASOURCE.REF_NO,
		AML_DATASOURCE.ORIG_REF_NO,
		AML_DATASOURCE.DEPART_ID,
		AML_DATASOURCE.SEQ_NO,
		AML_DATASOURCE.DEPART_NAME,
		AML_DATASOURCE.DEPART_TYPE,
		AML_DATASOURCE.DEPART_AREACODE,
		AML_DATASOURCE.CLIENT_ID,
		AML_DATASOURCE.PCODE,
		AML_DATASOURCE.CLIENT_NAME,
		AML_DATASOURCE.CLIENT_TYPE,
		AML_DATASOURCE.CLIENT_IC_TYPE,
		AML_DATASOURCE.CLIENT_IC_TYPE_MEMO,
		AML_DATASOURCE.CLIENT_IC_NO,
		AML_DATASOURCE.CLIENT_NATIONALITY,
		AML_DATASOURCE.PHONE,
		AML_DATASOURCE.ADDRESS,
		AML_DATASOURCE.OTHER_CONTACT,
		AML_DATASOURCE.INDUSTRY_TYPE,
		AML_DATASOURCE.REGISTERED_CAPITAL,
		AML_DATASOURCE.REP_NAME,
		AML_DATASOURCE.REP_IC_TYPE,
		AML_DATASOURCE.REP_IC_TYPE_MEMO,
		AML_DATASOURCE.REP_IC_NO,
		AML_DATASOURCE.AGENT_NAME,
		AML_DATASOURCE.AGENT_IC_NO,
		AML_DATASOURCE.AGENT_IC_TYPE,
		AML_DATASOURCE.AGENT_IC_TYPE_MEMO,
		AML_DATASOURCE.AGENT_NATIONALITY,
		AML_DATASOURCE.ACCT_ID,
		AML_DATASOURCE.ACCT_TYPE,
		AML_DATASOURCE.PBOC_NUM_ACCT,
		substring(AML_DATASOURCE.ACCT_OPEN_TIME,1,8) AS
		ACCT_OPEN_TIME,
		substring(AML_DATASOURCE.ACCT_CLOSE_TIME,1,8) AS
		ACCT_CLOSE_TIME,
		AML_DATASOURCE.TRADE_DATE,
		AML_DATASOURCE.TRADE_TIME,
		AML_DATASOURCE.VALUE_DATE,
		AML_DATASOURCE.TRADE_VENUE_COUNTRY,
		AML_DATASOURCE.TRADE_VENUE_REGION,
		AML_DATASOURCE.TRADE_MODE,
		AML_DATASOURCE.DEBIT_CREDIT,
		AML_DATASOURCE.TRADE_COUNTRY,
		AML_DATASOURCE.TRADE_REGION,
		AML_DATASOURCE.TRADE_CODE,
		AML_DATASOURCE.FUND_USAGE,
		AML_DATASOURCE.CURRENCY,
		AML_DATASOURCE.AMT,
		AML_DATASOURCE.DOLLAR_AMT,
		AML_DATASOURCE.CTPY_FI_CODE,
		AML_DATASOURCE.CTPY_FI_PCODE,
		AML_DATASOURCE.CTPY_FI_NAME,
		AML_DATASOURCE.CTPY_FI_TYPE,
		AML_DATASOURCE.CTPY_FI_COUNTRY,
		AML_DATASOURCE.CTPY_FI_REGION_CODE,
		AML_DATASOURCE.CTPY_NAME,
		AML_DATASOURCE.CTPY_TYPE,
		AML_DATASOURCE.CTPY_NATIONALITY,
		AML_DATASOURCE.CTPY_IC_CODE,
		AML_DATASOURCE.CTPY_IC_TYPE,
		AML_DATASOURCE.CTPY_IC_TYPE_MEMO,
		AML_DATASOURCE.CTPY_ACCT_ID,
		AML_DATASOURCE.CTPY_ACCT_TYPE,
		AML_DATASOURCE.TRADE_TYPE,
		AML_DATASOURCE.REPAYMENT_DATE,
		AML_DATASOURCE.LOAN_REPAYMENT_TYPE,
		AML_DATASOURCE.IS_SWAP,
		AML_DATASOURCE.SWAP_CODE,
		AML_DATASOURCE.CLIENT_IC_OTHER_TYPE,
		AML_DATASOURCE.BANK_RELATIONSHIP,
		AML_DATASOURCE.REP_IC_OTHER_TYPE,
		AML_DATASOURCE.AGENT_IC_OTHER_TYPE,
		AML_DATASOURCE.REC_PAY_TYPE,
		AML_DATASOURCE.REC_PAY_NO,
		AML_DATASOURCE.TRADE_UNCOUNTER_TYPE,
		AML_DATASOURCE.TRADE_UNCOUNTER_OTHER_TYPE,
		AML_DATASOURCE.TRADE_UNCOUNTER_NO,
		AML_DATASOURCE.TRADE_BPTC,
		AML_DATASOURCE.RMB_AMT,
		AML_DATASOURCE.REMARK1,
		AML_DATASOURCE.REMARK2,
		AML_ANALYSISRESULT.MAKE_STATUS,
		AML_ANALYSISRESULT.MAKER,
		AML_ANALYSISRESULT.MAKE_TIME,
		AML_ANALYSISRESULT.IF_DELAY_RPT AS CHECK_STATUS,
		AML_ANALYSISRESULT.CHECKER,
		AML_ANALYSISRESULT.CHECK_TIME,
		AML_ANALYSISRESULT.CHECK_INFO,
		AML_ANALYSISRESULT.IS_DEL,
		AML_ANALYSISRESULT.DEL_INFO,
		AML_DATASOURCE.STATUS,
		AML_ANALYSISRESULT.BATCH_NO,
		AML_ANALYSISRESULT.RULE_CODE,
		AML_ANALYSISRESULT.RULE_TYPE,
		AML_ANALYSISRESULT.UNIT_NAME,
		AML_ANALYSISRESULT.UNIT_CODE,
		AML_ANALYSISRESULT.RELATION_TYPE,
		AML_ANALYSISRESULT.REPORT_DATE,
		AML_ANALYSISRESULT.SHADINESS_LEVEL,
		AML_ANALYSISRESULT.SHADINESS_DESC,
		AML_ANALYSISRESULT.ACTION_MEASURE,
		AML_ANALYSISRESULT.ORIG_BATCH_NO,
		AML_ANALYSISRESULT.ORIG_WORK_DATE,
		AML_ANALYSISRESULT.ORIG_CLIENT_ID,
		AML_ANALYSISRESULT.ORIG_TRADE_DATE,
		AML_ANALYSISRESULT.ORIG_RULE_CODE,
		AML_ANALYSISRESULT.REPORT_TYPE,
		AML_ANALYSISRESULT.IF_RPT,
		AML_ANALYSISRESULT.RPT_STATUS,
		AML_ANALYSISRESULT.FINAL_RPT_STATUS,
		AML_ANALYSISRESULT.RET_MSE,
		AML_ANALYSISRESULT.REPORTER,
		AML_ANALYSISRESULT.RPT_FILE,
		AML_ANALYSISRESULT.RPT_ZIP,
		AML_ANALYSISRESULT.SERIAL_NUM_1,
		AML_ANALYSISRESULT.SERIAL_NUM_2,
		AML_ANALYSISRESULT.SERIAL_NUM_3,
		AML_ANALYSISRESULT.IF_DELAY_RPT,
		AML_ANALYSISRESULT.DELAY_DATE,
		AML_ANALYSISRESULT.BS_DETR,
		AML_ANALYSISRESULT.BS_DORP,
		AML_ANALYSISRESULT.BS_ODRP,
		AML_ANALYSISRESULT.BS_TPTR,
		AML_ANALYSISRESULT.BS_OTPR,
		AML_ANALYSISRESULT.BS_STCB,
		AML_ANALYSISRESULT.BS_AOSP,
		AML_ANALYSISRESULT.BS_TOSC,
		AML_ANALYSISRESULT.BS_MIRS,
		TB_ANALYSISRULES.RULE_NOTES,
		TB_ANALYSISRULES.RULE_ANALYSE_METHOD,
		CASE WHEN
		AML_DATASOURCE.TRADE_REGION='000000' or len(TRADE_REGION) = 2 THEN
		AML_DATASOURCE.TRADE_COUNTRY ELSE AML_DATASOURCE.TRADE_REGION END WHITHER,
		AML_DATASOURCE.IS_CROSSBORDER
		from TB_ANALYSISRULES, AML_ANALYSISRESULT, AML_DATASOURCE
		where
		AML_ANALYSISRESULT.REF_NO = AML_DATASOURCE.REF_NO
		and AML_ANALYSISRESULT.DEPART_ID = AML_DATASOURCE.DEPART_ID
		and
		AML_ANALYSISRESULT.RULE_CODE= TB_ANALYSISRULES.RULE_CODE
		and
		AML_ANALYSISRESULT.RULE_TYPE = TB_ANALYSISRULES.RULE_TYPE
		and AML_ANALYSISRESULT.RULE_TYPE='02'
		and 1=1
		<if test="nextDay!=null  &amp;&amp; !&quot;&quot;.equals(nextDay.trim())">
			and AML_ANALYSISRESULT.WORK_DATE like '%'+#{nextDay}+'%' and AML_ANALYSISRESULT.DELAY_DATE like '%'+#{nextDay}+'%'
		</if>
		<if test="REF_NO!=null  &amp;&amp; !&quot;&quot;.equals(REF_NO.trim())">
			and AML_ANALYSISRESULT.REF_NO like '%'+#{REF_NO}+'%'
		</if>
		<if test="CHECK_STATUS!=null  &amp;&amp; !&quot;&quot;.equals(CHECK_STATUS.trim())">
			and AML_ANALYSISRESULT.CHECK_STATUS like '%'+#{CHECK_STATUS}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
		${pageEnd}
	</select>
	
	<!-- 此处有union语句，更改时要注意！！！ -->
	<select id="selectAMLSecondMakeupSuspiciousCheck_totalCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select sum(abc.num) from(
		select count(*) as num
		from TB_ANALYSISRULES, AML_ANALYSISRESULT, AML_DATASOURCE
		where  AML_ANALYSISRESULT.REF_NO = AML_DATASOURCE.REF_NO
		and AML_ANALYSISRESULT.DEPART_ID = AML_DATASOURCE.DEPART_ID
		and AML_ANALYSISRESULT.RULE_CODE= TB_ANALYSISRULES.RULE_CODE
		and AML_ANALYSISRESULT.RULE_TYPE = TB_ANALYSISRULES.RULE_TYPE
		and AML_ANALYSISRESULT.RULE_TYPE='02'
		and 1=1
		<if test="WORK_DATE!=null  &amp;&amp; !&quot;&quot;.equals(WORK_DATE.trim())">
			and AML_ANALYSISRESULT.WORK_DATE like '%'+#{WORK_DATE}+'%'
		</if>
		<if test="REF_NO!=null  &amp;&amp; !&quot;&quot;.equals(REF_NO.trim())">
			and AML_ANALYSISRESULT.REF_NO like '%'+#{REF_NO}+'%'
		</if>
		<if test="CHECK_STATUS!=null  &amp;&amp; !&quot;&quot;.equals(CHECK_STATUS.trim())">
			and AML_ANALYSISRESULT.CHECK_STATUS like '%'+#{CHECK_STATUS}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
		union 
		select count(*) as num
		from TB_ANALYSISRULES, AML_ANALYSISRESULT, AML_DATASOURCE
		where  AML_ANALYSISRESULT.REF_NO = AML_DATASOURCE.REF_NO
		and AML_ANALYSISRESULT.DEPART_ID = AML_DATASOURCE.DEPART_ID
		and AML_ANALYSISRESULT.RULE_CODE= TB_ANALYSISRULES.RULE_CODE
		and AML_ANALYSISRESULT.RULE_TYPE = TB_ANALYSISRULES.RULE_TYPE
		and AML_ANALYSISRESULT.RULE_TYPE='02'
		and 1=1
		<if test="nextDay!=null  &amp;&amp; !&quot;&quot;.equals(nextDay.trim())">
			and AML_ANALYSISRESULT.WORK_DATE like '%'+#{nextDay}+'%' and AML_ANALYSISRESULT.DELAY_DATE like '%'+#{nextDay}+'%'
		</if>
		<if test="REF_NO!=null  &amp;&amp; !&quot;&quot;.equals(REF_NO.trim())">
			and AML_ANALYSISRESULT.REF_NO like '%'+#{REF_NO}+'%'
		</if>
		<if test="CHECK_STATUS!=null  &amp;&amp; !&quot;&quot;.equals(CHECK_STATUS.trim())">
			and AML_ANALYSISRESULT.CHECK_STATUS like '%'+#{CHECK_STATUS}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
		) as abc
	</select>
	

	<!-- AML审核通过 -->
	<update id="checkAML2" parameterType="java.util.HashMap">
		update AML_ANALYSISRESULT set
		<choose>
			<when test="DelayDate!=null  &amp;&amp; !&quot;&quot;.equals(DelayDate.trim()) &amp;&amp; !DelayDate.equals(WorkDate)">
				WORK_DATE = #{DelayDate}
			</when>
			<otherwise>
				CHECK_INFO = #{CHECK_INFO,jdbcType=VARCHAR},CHECK_STATUS = '1', CHECK_TIME = #{checkTime}, CHECKER = #{checkUser}
			</otherwise>
		</choose>
		
		where 
		WORK_DATE = #{WorkDate} and 
		REF_NO = #{RefNo} and	
		RULE_CODE = #{ruleCode} and
		DEPART_ID = #{departId} and
		BATCH_NO = #{batchNo}
	</update>

	<!-- AML审核拒绝 -->
	<update id="checkRefuseAML2" parameterType="java.util.HashMap">
		update AML_ANALYSISRESULT set
		<choose>
			<when test="DelayDate!=null  &amp;&amp; !&quot;&quot;.equals(DelayDate.trim()) &amp;&amp; !DelayDate.equals(WorkDate)">
				IF_DELAY_RPT = '0',
				DELAY_DATE = NULL
				where
				WORK_DATE = #{WorkDate} and 
				RULE_CODE = #{ruleCode} and
				BATCH_NO = #{batchNo}
			</when>
			<otherwise>
				CHECK_INFO = #{CHECK_INFO,jdbcType=VARCHAR}, CHECK_STATUS = '2', CHECK_TIME = #{checkTime}, CHECKER = #{checkUser}
				where 
				WORK_DATE = #{WorkDate} and 
				REF_NO = #{RefNo} and	
				RULE_CODE = #{ruleCode} and
				DEPART_ID = #{departId} and
				BATCH_NO = #{batchNo}
			</otherwise>
		</choose>
	</update>


	<!-- AML取消审核 -->
	<update id="unCheckAML2" parameterType="java.util.HashMap">
		update AML_ANALYSISRESULT set
		<choose>
			<when test="DelayDate!=null  &amp;&amp; !&quot;&quot;.equals(DelayDate.trim()) &amp;&amp; DelayDate.equals(WorkDate)">
				IF_DELAY_RPT = '0',
				DELAY_DATE = NULL,
				WORK_DATE = #{preWorkDay}
				where
				WORK_DATE = #{WorkDate} and 
				REF_NO = #{RefNo} and	
				RULE_CODE = #{ruleCode} and
				DEPART_ID = #{departId} and
				BATCH_NO = #{batchNo}
			</when>
			<otherwise>
				CHECK_INFO = NULL , CHECK_STATUS = '0', CHECK_TIME = #{checkTime}, CHECKER = #{checkUser}
				where 
				WORK_DATE = #{WorkDate} and 
				REF_NO = #{RefNo} and	
				RULE_CODE = #{ruleCode} and
				DEPART_ID = #{departId} and
				BATCH_NO = #{batchNo}
			</otherwise>
		</choose>
	</update>

</mapper>