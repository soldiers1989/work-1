package com.aif.rpt.analysis.client;

import java.util.ArrayList;
import java.util.List;

import com.allinfinance.yak.uface.core.client.config.BaseConfig;
import com.allinfinance.yak.uface.core.client.config.PageViewConfig;
import com.allinfinance.yak.uface.core.shared.annotations.reflection.ClassForNameAble;
import com.allinfinance.yak.uface.data.client.command.DatasetCommand;
import com.allinfinance.yak.uface.data.client.dataset.ViewDataset;
import com.allinfinance.yak.uface.ui.component.client.basic.UButton;
import com.allinfinance.yak.uface.ui.component.client.form.UDynamicForm;
import com.allinfinance.yak.uface.ui.component.client.form.fields.USectionItem;
import com.allinfinance.yak.uface.ui.component.client.form.fields.UDateItem;
import com.allinfinance.yak.uface.ui.component.client.form.fields.UMoneyItem;
import com.allinfinance.yak.uface.ui.component.client.form.fields.USelectItem;
import com.allinfinance.yak.uface.ui.component.client.form.fields.UTextAreaItem;
import com.allinfinance.yak.uface.ui.component.client.form.fields.UTextItem;
import com.allinfinance.yak.uface.ui.component.client.form.fields.UCheckboxItem;
import com.allinfinance.yak.uface.ui.component.client.form.fields.UPasswordItem;
import com.allinfinance.yak.uface.ui.component.client.grid.UTable;
import com.allinfinance.yak.uface.ui.component.client.basic.UWindow;
import com.allinfinance.yak.uface.ui.component.client.tabset.UTabset;
import com.allinfinance.yak.uface.ui.component.client.tree.UTreeGrid;
import com.allinfinance.yak.uface.ui.component.client.label.ULabel;
import com.allinfinance.yak.uface.ui.component.client.calendar.UCalendar;
import com.allinfinance.yak.uface.ui.component.client.upload.UBaseUploader;
import com.allinfinance.yak.uface.ui.component.client.view.CommonPageView;

@ClassForNameAble
public class AnalysisExec extends CommonPageView {

	protected ViewDataset dsQuery;
	protected ViewDataset dsResult;
	protected ViewDataset dsDepartList;
	protected ViewDataset dscomSource;
	protected ViewDataset dsuncomSource;
	protected DatasetCommand queryRuleCmd;
	protected DatasetCommand AnalysisExecCmd;
	protected DatasetCommand queryDepartCmd;
	protected DatasetCommand queryDefaultCmd;
	protected DatasetCommand checkCmd;
	protected DatasetCommand comfirmQryCmd;
	protected DatasetCommand uncomfirmQryCmd;
	protected DatasetCommand comfirmCmd;
	protected DatasetCommand uncomfirmCmd;
	protected UDynamicForm queryForm;
	protected UDateItem editorWORK_DATE;
	protected USelectItem editorDEPART_ID;
	protected UButton btnQuery;
	protected UButton btnExec;
	protected UButton btconfirm;
	protected UButton btcancel;
	protected UTable tableResult;
	protected UWindow comsourceWindow;
	protected UTable comsourceTbl;
	protected UButton btOk;
	protected UButton btReturn;
	protected UWindow uncomsourceWindow;
	protected UTable uncomsourceTbl;
	protected UButton btOk2;
	protected UButton btReturn2;

	@Override
	protected void afterInitDatasets() {
		super.afterInitDatasets();
	}

	@Override
	protected PageViewConfig initConfig() {
		PageViewConfig config = super.initConfig();
		BaseConfig render = config.getRenderConfig();
		super.afterInitControls();

		//datasets init begin
		BaseConfig dataset = config.getDatasetsConfig();

		//dataset dsQuery
		dataset.put("dsQuery", sub_ds_dsQuery());

		//dataset dsResult
		dataset.put("dsResult", sub_ds_dsResult());

		//dataset dsDepartList
		dataset.put("dsDepartList", sub_ds_dsDepartList());

		//dataset dscomSource
		dataset.put("dscomSource", sub_ds_dscomSource());

		//dataset dsuncomSource
		dataset.put("dsuncomSource", sub_ds_dsuncomSource());
		//datasets init end

		//commands init begin
		BaseConfig command = config.getCommandsConfig();

		//command queryRuleCmd
		command.put("queryRuleCmd", sub_cmd_queryRuleCmd());

		//command AnalysisExecCmd
		command.put("AnalysisExecCmd", sub_cmd_AnalysisExecCmd());

		//command queryDepartCmd
		command.put("queryDepartCmd", sub_cmd_queryDepartCmd());

		//command queryDefaultCmd
		command.put("queryDefaultCmd", sub_cmd_queryDefaultCmd());

		//command checkCmd
		command.put("checkCmd", sub_cmd_checkCmd());

		//command comfirmQryCmd
		command.put("comfirmQryCmd", sub_cmd_comfirmQryCmd());

		//command uncomfirmQryCmd
		command.put("uncomfirmQryCmd", sub_cmd_uncomfirmQryCmd());

		//command comfirmCmd
		command.put("comfirmCmd", sub_cmd_comfirmCmd());

		//command uncomfirmCmd
		command.put("uncomfirmCmd", sub_cmd_uncomfirmCmd());
		//commands init end

		//renders init begin
		BaseConfig outerlayout = sub_control_outerlayout();
		render.put("outerlayout", outerlayout);
		BaseConfig comsourceWindow = sub_control_comsourceWindow();
		render.put("comsourceWindow", comsourceWindow);
		BaseConfig uncomsourceWindow = sub_control_uncomsourceWindow();
		render.put("uncomsourceWindow", uncomsourceWindow);

		//renders init end
		return config;
	}

	private BaseConfig sub_ds_dsQuery(){
		BaseConfig dsQuery = new BaseConfig();
		List<BaseConfig> fieldsdsQuery = new ArrayList<BaseConfig>();
		BaseConfig dsQuery_WORK_DATE = new BaseConfig();
		dsQuery_WORK_DATE.put("name", "WORK_DATE");
		dsQuery_WORK_DATE.put("type", "Base");
		dsQuery_WORK_DATE.put("title","工作日期");
		dsQuery_WORK_DATE.put("dataType", "date");
		dsQuery_WORK_DATE.put("precision", "38");
		dsQuery_WORK_DATE.put("scale", "0");
		dsQuery_WORK_DATE.put("leverage", "0");
		dsQuery_WORK_DATE.put("defaultValue", "");
		dsQuery_WORK_DATE.put("format", "");
		dsQuery_WORK_DATE.put("moduleid", "");
		dsQuery_WORK_DATE.put("bizCode", "");
		dsQuery_WORK_DATE.put("isPrimaryKey", "false");
		dsQuery_WORK_DATE.put("isForeignKey", "false");
		dsQuery_WORK_DATE.put("dropdown", "");
		dsQuery_WORK_DATE.put("nullable", "false");
		dsQuery_WORK_DATE.put("nullableError", "");
		dsQuery_WORK_DATE.put("lengthRange", "");
		dsQuery_WORK_DATE.put("lengthRangeError", "");
		dsQuery_WORK_DATE.put("readOnly", "false");
		dsQuery_WORK_DATE.put("msgAlign", "right");
		dsQuery_WORK_DATE.put("charset", "");
		dsQuery_WORK_DATE.put("charsetError", "");
		fieldsdsQuery.add(dsQuery_WORK_DATE);
		BaseConfig dsQuery_DEPART_ID = new BaseConfig();
		dsQuery_DEPART_ID.put("name", "DEPART_ID");
		dsQuery_DEPART_ID.put("type", "Base");
		dsQuery_DEPART_ID.put("title","机构代码");
		dsQuery_DEPART_ID.put("dataType", "string");
		dsQuery_DEPART_ID.put("precision", "38");
		dsQuery_DEPART_ID.put("scale", "0");
		dsQuery_DEPART_ID.put("leverage", "0");
		dsQuery_DEPART_ID.put("defaultValue", "");
		dsQuery_DEPART_ID.put("format", "");
		dsQuery_DEPART_ID.put("moduleid", "");
		dsQuery_DEPART_ID.put("bizCode", "");
		dsQuery_DEPART_ID.put("isPrimaryKey", "false");
		dsQuery_DEPART_ID.put("isForeignKey", "false");
		dsQuery_DEPART_ID.put("dropdown", "");
		dsQuery_DEPART_ID.put("nullable", "false");
		dsQuery_DEPART_ID.put("nullableError", "");
		dsQuery_DEPART_ID.put("lengthRange", "");
		dsQuery_DEPART_ID.put("lengthRangeError", "");
		dsQuery_DEPART_ID.put("readOnly", "false");
		dsQuery_DEPART_ID.put("msgAlign", "right");
		dsQuery_DEPART_ID.put("charset", "");
		dsQuery_DEPART_ID.put("charsetError", "");
		fieldsdsQuery.add(dsQuery_DEPART_ID);
		dsQuery.put("fields", fieldsdsQuery);
		return dsQuery;
	}

	private BaseConfig sub_ds_dsResult(){
		BaseConfig dsResult = new BaseConfig();
		List<BaseConfig> fieldsdsResult = new ArrayList<BaseConfig>();
		dsResult.put("selectField", "SELECT_FLAG");
		BaseConfig dsResult_WORK_DATE = new BaseConfig();
		dsResult_WORK_DATE.put("name", "WORK_DATE");
		dsResult_WORK_DATE.put("type", "Base");
		dsResult_WORK_DATE.put("title","工作日期");
		dsResult_WORK_DATE.put("dataType", "date");
		dsResult_WORK_DATE.put("precision", "38");
		dsResult_WORK_DATE.put("scale", "0");
		dsResult_WORK_DATE.put("leverage", "0");
		dsResult_WORK_DATE.put("defaultValue", "");
		dsResult_WORK_DATE.put("format", "");
		dsResult_WORK_DATE.put("moduleid", "");
		dsResult_WORK_DATE.put("bizCode", "");
		dsResult_WORK_DATE.put("isPrimaryKey", "false");
		dsResult_WORK_DATE.put("isForeignKey", "false");
		dsResult_WORK_DATE.put("dropdown", "");
		dsResult_WORK_DATE.put("nullable", "true");
		dsResult_WORK_DATE.put("nullableError", "");
		dsResult_WORK_DATE.put("lengthRange", "");
		dsResult_WORK_DATE.put("lengthRangeError", "");
		dsResult_WORK_DATE.put("readOnly", "false");
		dsResult_WORK_DATE.put("msgAlign", "right");
		dsResult_WORK_DATE.put("charset", "");
		dsResult_WORK_DATE.put("charsetError", "");
		fieldsdsResult.add(dsResult_WORK_DATE);
		BaseConfig dsResult_DEPART_ID = new BaseConfig();
		dsResult_DEPART_ID.put("name", "DEPART_ID");
		dsResult_DEPART_ID.put("type", "Base");
		dsResult_DEPART_ID.put("title","机构代码");
		dsResult_DEPART_ID.put("dataType", "string");
		dsResult_DEPART_ID.put("precision", "38");
		dsResult_DEPART_ID.put("scale", "0");
		dsResult_DEPART_ID.put("leverage", "0");
		dsResult_DEPART_ID.put("defaultValue", "");
		dsResult_DEPART_ID.put("format", "");
		dsResult_DEPART_ID.put("moduleid", "");
		dsResult_DEPART_ID.put("bizCode", "");
		dsResult_DEPART_ID.put("isPrimaryKey", "false");
		dsResult_DEPART_ID.put("isForeignKey", "false");
		dsResult_DEPART_ID.put("dropdown", "");
		dsResult_DEPART_ID.put("nullable", "true");
		dsResult_DEPART_ID.put("nullableError", "");
		dsResult_DEPART_ID.put("lengthRange", "");
		dsResult_DEPART_ID.put("lengthRangeError", "");
		dsResult_DEPART_ID.put("readOnly", "false");
		dsResult_DEPART_ID.put("msgAlign", "right");
		dsResult_DEPART_ID.put("charset", "");
		dsResult_DEPART_ID.put("charsetError", "");
		fieldsdsResult.add(dsResult_DEPART_ID);
		BaseConfig dsResult_RULE_CODE = new BaseConfig();
		dsResult_RULE_CODE.put("name", "RULE_CODE");
		dsResult_RULE_CODE.put("type", "Base");
		dsResult_RULE_CODE.put("title","规则代码");
		dsResult_RULE_CODE.put("dataType", "string");
		dsResult_RULE_CODE.put("precision", "38");
		dsResult_RULE_CODE.put("scale", "0");
		dsResult_RULE_CODE.put("leverage", "0");
		dsResult_RULE_CODE.put("defaultValue", "");
		dsResult_RULE_CODE.put("format", "");
		dsResult_RULE_CODE.put("moduleid", "");
		dsResult_RULE_CODE.put("bizCode", "");
		dsResult_RULE_CODE.put("isPrimaryKey", "false");
		dsResult_RULE_CODE.put("isForeignKey", "false");
		dsResult_RULE_CODE.put("dropdown", "");
		dsResult_RULE_CODE.put("nullable", "true");
		dsResult_RULE_CODE.put("nullableError", "");
		dsResult_RULE_CODE.put("lengthRange", "");
		dsResult_RULE_CODE.put("lengthRangeError", "");
		dsResult_RULE_CODE.put("readOnly", "false");
		dsResult_RULE_CODE.put("msgAlign", "right");
		dsResult_RULE_CODE.put("charset", "");
		dsResult_RULE_CODE.put("charsetError", "");
		fieldsdsResult.add(dsResult_RULE_CODE);
		BaseConfig dsResult_RULE_TYPE = new BaseConfig();
		dsResult_RULE_TYPE.put("name", "RULE_TYPE");
		dsResult_RULE_TYPE.put("type", "Base");
		dsResult_RULE_TYPE.put("title","规则类型");
		dsResult_RULE_TYPE.put("dataType", "string");
		dsResult_RULE_TYPE.put("precision", "38");
		dsResult_RULE_TYPE.put("scale", "0");
		dsResult_RULE_TYPE.put("leverage", "0");
		dsResult_RULE_TYPE.put("defaultValue", "");
		dsResult_RULE_TYPE.put("format", "");
		dsResult_RULE_TYPE.put("moduleid", "");
		dsResult_RULE_TYPE.put("bizCode", "");
		dsResult_RULE_TYPE.put("isPrimaryKey", "false");
		dsResult_RULE_TYPE.put("isForeignKey", "false");
		dsResult_RULE_TYPE.put("dropdown", "");
		dsResult_RULE_TYPE.put("nullable", "true");
		dsResult_RULE_TYPE.put("nullableError", "");
		dsResult_RULE_TYPE.put("lengthRange", "");
		dsResult_RULE_TYPE.put("lengthRangeError", "");
		dsResult_RULE_TYPE.put("readOnly", "false");
		dsResult_RULE_TYPE.put("msgAlign", "right");
		dsResult_RULE_TYPE.put("charset", "");
		dsResult_RULE_TYPE.put("charsetError", "");
		fieldsdsResult.add(dsResult_RULE_TYPE);
		BaseConfig dsResult_RULE_NOTES = new BaseConfig();
		dsResult_RULE_NOTES.put("name", "RULE_NOTES");
		dsResult_RULE_NOTES.put("type", "Base");
		dsResult_RULE_NOTES.put("title","规则描述");
		dsResult_RULE_NOTES.put("dataType", "string");
		dsResult_RULE_NOTES.put("precision", "38");
		dsResult_RULE_NOTES.put("scale", "0");
		dsResult_RULE_NOTES.put("leverage", "0");
		dsResult_RULE_NOTES.put("defaultValue", "");
		dsResult_RULE_NOTES.put("format", "");
		dsResult_RULE_NOTES.put("moduleid", "");
		dsResult_RULE_NOTES.put("bizCode", "");
		dsResult_RULE_NOTES.put("isPrimaryKey", "false");
		dsResult_RULE_NOTES.put("isForeignKey", "false");
		dsResult_RULE_NOTES.put("dropdown", "");
		dsResult_RULE_NOTES.put("nullable", "true");
		dsResult_RULE_NOTES.put("nullableError", "");
		dsResult_RULE_NOTES.put("lengthRange", "");
		dsResult_RULE_NOTES.put("lengthRangeError", "");
		dsResult_RULE_NOTES.put("readOnly", "false");
		dsResult_RULE_NOTES.put("msgAlign", "right");
		dsResult_RULE_NOTES.put("charset", "");
		dsResult_RULE_NOTES.put("charsetError", "");
		fieldsdsResult.add(dsResult_RULE_NOTES);
		BaseConfig dsResult_ERR_FLAG = new BaseConfig();
		dsResult_ERR_FLAG.put("name", "ERR_FLAG");
		dsResult_ERR_FLAG.put("type", "Base");
		dsResult_ERR_FLAG.put("title","执行状态");
		dsResult_ERR_FLAG.put("dataType", "string");
		dsResult_ERR_FLAG.put("precision", "38");
		dsResult_ERR_FLAG.put("scale", "0");
		dsResult_ERR_FLAG.put("leverage", "0");
		dsResult_ERR_FLAG.put("defaultValue", "");
		dsResult_ERR_FLAG.put("format", "");
		dsResult_ERR_FLAG.put("moduleid", "");
		dsResult_ERR_FLAG.put("bizCode", "");
		dsResult_ERR_FLAG.put("isPrimaryKey", "false");
		dsResult_ERR_FLAG.put("isForeignKey", "false");
		dsResult_ERR_FLAG.put("dropdown", "");
		dsResult_ERR_FLAG.put("nullable", "true");
		dsResult_ERR_FLAG.put("nullableError", "");
		dsResult_ERR_FLAG.put("lengthRange", "");
		dsResult_ERR_FLAG.put("lengthRangeError", "");
		dsResult_ERR_FLAG.put("readOnly", "false");
		dsResult_ERR_FLAG.put("msgAlign", "right");
		dsResult_ERR_FLAG.put("charset", "");
		dsResult_ERR_FLAG.put("charsetError", "");
		fieldsdsResult.add(dsResult_ERR_FLAG);
		BaseConfig dsResult_ERR_CONTENT = new BaseConfig();
		dsResult_ERR_CONTENT.put("name", "ERR_CONTENT");
		dsResult_ERR_CONTENT.put("type", "Base");
		dsResult_ERR_CONTENT.put("title","执行信息");
		dsResult_ERR_CONTENT.put("dataType", "string");
		dsResult_ERR_CONTENT.put("precision", "38");
		dsResult_ERR_CONTENT.put("scale", "0");
		dsResult_ERR_CONTENT.put("leverage", "0");
		dsResult_ERR_CONTENT.put("defaultValue", "");
		dsResult_ERR_CONTENT.put("format", "");
		dsResult_ERR_CONTENT.put("moduleid", "");
		dsResult_ERR_CONTENT.put("bizCode", "");
		dsResult_ERR_CONTENT.put("isPrimaryKey", "false");
		dsResult_ERR_CONTENT.put("isForeignKey", "false");
		dsResult_ERR_CONTENT.put("dropdown", "");
		dsResult_ERR_CONTENT.put("nullable", "true");
		dsResult_ERR_CONTENT.put("nullableError", "");
		dsResult_ERR_CONTENT.put("lengthRange", "");
		dsResult_ERR_CONTENT.put("lengthRangeError", "");
		dsResult_ERR_CONTENT.put("readOnly", "false");
		dsResult_ERR_CONTENT.put("msgAlign", "right");
		dsResult_ERR_CONTENT.put("charset", "");
		dsResult_ERR_CONTENT.put("charsetError", "");
		fieldsdsResult.add(dsResult_ERR_CONTENT);
		BaseConfig dsResult_BEGIN_TIME = new BaseConfig();
		dsResult_BEGIN_TIME.put("name", "BEGIN_TIME");
		dsResult_BEGIN_TIME.put("type", "Base");
		dsResult_BEGIN_TIME.put("title","开始时间");
		dsResult_BEGIN_TIME.put("dataType", "timestr");
		dsResult_BEGIN_TIME.put("precision", "38");
		dsResult_BEGIN_TIME.put("scale", "0");
		dsResult_BEGIN_TIME.put("leverage", "0");
		dsResult_BEGIN_TIME.put("defaultValue", "");
		dsResult_BEGIN_TIME.put("format", "");
		dsResult_BEGIN_TIME.put("moduleid", "");
		dsResult_BEGIN_TIME.put("bizCode", "");
		dsResult_BEGIN_TIME.put("isPrimaryKey", "false");
		dsResult_BEGIN_TIME.put("isForeignKey", "false");
		dsResult_BEGIN_TIME.put("dropdown", "");
		dsResult_BEGIN_TIME.put("nullable", "true");
		dsResult_BEGIN_TIME.put("nullableError", "");
		dsResult_BEGIN_TIME.put("lengthRange", "");
		dsResult_BEGIN_TIME.put("lengthRangeError", "");
		dsResult_BEGIN_TIME.put("readOnly", "false");
		dsResult_BEGIN_TIME.put("msgAlign", "right");
		dsResult_BEGIN_TIME.put("charset", "");
		dsResult_BEGIN_TIME.put("charsetError", "");
		fieldsdsResult.add(dsResult_BEGIN_TIME);
		BaseConfig dsResult_END_TIME = new BaseConfig();
		dsResult_END_TIME.put("name", "END_TIME");
		dsResult_END_TIME.put("type", "Base");
		dsResult_END_TIME.put("title","结束时间");
		dsResult_END_TIME.put("dataType", "timestr");
		dsResult_END_TIME.put("precision", "38");
		dsResult_END_TIME.put("scale", "0");
		dsResult_END_TIME.put("leverage", "0");
		dsResult_END_TIME.put("defaultValue", "");
		dsResult_END_TIME.put("format", "");
		dsResult_END_TIME.put("moduleid", "");
		dsResult_END_TIME.put("bizCode", "");
		dsResult_END_TIME.put("isPrimaryKey", "false");
		dsResult_END_TIME.put("isForeignKey", "false");
		dsResult_END_TIME.put("dropdown", "");
		dsResult_END_TIME.put("nullable", "true");
		dsResult_END_TIME.put("nullableError", "");
		dsResult_END_TIME.put("lengthRange", "");
		dsResult_END_TIME.put("lengthRangeError", "");
		dsResult_END_TIME.put("readOnly", "false");
		dsResult_END_TIME.put("msgAlign", "right");
		dsResult_END_TIME.put("charset", "");
		dsResult_END_TIME.put("charsetError", "");
		fieldsdsResult.add(dsResult_END_TIME);
		BaseConfig dsResult_RULE_ANALYSE_METHOD = new BaseConfig();
		dsResult_RULE_ANALYSE_METHOD.put("name", "RULE_ANALYSE_METHOD");
		dsResult_RULE_ANALYSE_METHOD.put("type", "Base");
		dsResult_RULE_ANALYSE_METHOD.put("title","分析方法");
		dsResult_RULE_ANALYSE_METHOD.put("dataType", "string");
		dsResult_RULE_ANALYSE_METHOD.put("precision", "38");
		dsResult_RULE_ANALYSE_METHOD.put("scale", "0");
		dsResult_RULE_ANALYSE_METHOD.put("leverage", "0");
		dsResult_RULE_ANALYSE_METHOD.put("defaultValue", "");
		dsResult_RULE_ANALYSE_METHOD.put("format", "");
		dsResult_RULE_ANALYSE_METHOD.put("moduleid", "");
		dsResult_RULE_ANALYSE_METHOD.put("bizCode", "");
		dsResult_RULE_ANALYSE_METHOD.put("isPrimaryKey", "false");
		dsResult_RULE_ANALYSE_METHOD.put("isForeignKey", "false");
		dsResult_RULE_ANALYSE_METHOD.put("dropdown", "");
		dsResult_RULE_ANALYSE_METHOD.put("nullable", "true");
		dsResult_RULE_ANALYSE_METHOD.put("nullableError", "");
		dsResult_RULE_ANALYSE_METHOD.put("lengthRange", "");
		dsResult_RULE_ANALYSE_METHOD.put("lengthRangeError", "");
		dsResult_RULE_ANALYSE_METHOD.put("readOnly", "false");
		dsResult_RULE_ANALYSE_METHOD.put("msgAlign", "right");
		dsResult_RULE_ANALYSE_METHOD.put("charset", "");
		dsResult_RULE_ANALYSE_METHOD.put("charsetError", "");
		fieldsdsResult.add(dsResult_RULE_ANALYSE_METHOD);
		BaseConfig dsResult_SELECT_FLAG = new BaseConfig();
		dsResult_SELECT_FLAG.put("name", "SELECT_FLAG");
		dsResult_SELECT_FLAG.put("type", "Base");
		dsResult_SELECT_FLAG.put("title","");
		dsResult_SELECT_FLAG.put("dataType", "string");
		dsResult_SELECT_FLAG.put("precision", "38");
		dsResult_SELECT_FLAG.put("scale", "0");
		dsResult_SELECT_FLAG.put("leverage", "0");
		dsResult_SELECT_FLAG.put("defaultValue", "");
		dsResult_SELECT_FLAG.put("format", "");
		dsResult_SELECT_FLAG.put("moduleid", "");
		dsResult_SELECT_FLAG.put("bizCode", "");
		dsResult_SELECT_FLAG.put("isPrimaryKey", "false");
		dsResult_SELECT_FLAG.put("isForeignKey", "false");
		dsResult_SELECT_FLAG.put("dropdown", "");
		dsResult_SELECT_FLAG.put("nullable", "true");
		dsResult_SELECT_FLAG.put("nullableError", "");
		dsResult_SELECT_FLAG.put("lengthRange", "");
		dsResult_SELECT_FLAG.put("lengthRangeError", "");
		dsResult_SELECT_FLAG.put("readOnly", "false");
		dsResult_SELECT_FLAG.put("msgAlign", "right");
		dsResult_SELECT_FLAG.put("charset", "");
		dsResult_SELECT_FLAG.put("charsetError", "");
		fieldsdsResult.add(dsResult_SELECT_FLAG);
		dsResult.put("fields", fieldsdsResult);
		return dsResult;
	}

	private BaseConfig sub_ds_dsDepartList(){
		BaseConfig dsDepartList = new BaseConfig();
		List<BaseConfig> fieldsdsDepartList = new ArrayList<BaseConfig>();
		BaseConfig dsDepartList_depart_id = new BaseConfig();
		dsDepartList_depart_id.put("name", "depart_id");
		dsDepartList_depart_id.put("type", "Base");
		dsDepartList_depart_id.put("title","");
		dsDepartList_depart_id.put("dataType", "string");
		dsDepartList_depart_id.put("precision", "38");
		dsDepartList_depart_id.put("scale", "0");
		dsDepartList_depart_id.put("leverage", "0");
		dsDepartList_depart_id.put("defaultValue", "");
		dsDepartList_depart_id.put("format", "");
		dsDepartList_depart_id.put("moduleid", "");
		dsDepartList_depart_id.put("bizCode", "");
		dsDepartList_depart_id.put("isPrimaryKey", "false");
		dsDepartList_depart_id.put("isForeignKey", "false");
		dsDepartList_depart_id.put("dropdown", "");
		dsDepartList_depart_id.put("nullable", "true");
		dsDepartList_depart_id.put("nullableError", "");
		dsDepartList_depart_id.put("lengthRange", "");
		dsDepartList_depart_id.put("lengthRangeError", "");
		dsDepartList_depart_id.put("readOnly", "false");
		dsDepartList_depart_id.put("msgAlign", "right");
		dsDepartList_depart_id.put("charset", "");
		dsDepartList_depart_id.put("charsetError", "");
		fieldsdsDepartList.add(dsDepartList_depart_id);
		BaseConfig dsDepartList_depart_name = new BaseConfig();
		dsDepartList_depart_name.put("name", "depart_name");
		dsDepartList_depart_name.put("type", "Base");
		dsDepartList_depart_name.put("title","");
		dsDepartList_depart_name.put("dataType", "string");
		dsDepartList_depart_name.put("precision", "38");
		dsDepartList_depart_name.put("scale", "0");
		dsDepartList_depart_name.put("leverage", "0");
		dsDepartList_depart_name.put("defaultValue", "");
		dsDepartList_depart_name.put("format", "");
		dsDepartList_depart_name.put("moduleid", "");
		dsDepartList_depart_name.put("bizCode", "");
		dsDepartList_depart_name.put("isPrimaryKey", "false");
		dsDepartList_depart_name.put("isForeignKey", "false");
		dsDepartList_depart_name.put("dropdown", "");
		dsDepartList_depart_name.put("nullable", "true");
		dsDepartList_depart_name.put("nullableError", "");
		dsDepartList_depart_name.put("lengthRange", "");
		dsDepartList_depart_name.put("lengthRangeError", "");
		dsDepartList_depart_name.put("readOnly", "false");
		dsDepartList_depart_name.put("msgAlign", "right");
		dsDepartList_depart_name.put("charset", "");
		dsDepartList_depart_name.put("charsetError", "");
		fieldsdsDepartList.add(dsDepartList_depart_name);
		dsDepartList.put("fields", fieldsdsDepartList);
		return dsDepartList;
	}

	private BaseConfig sub_ds_dscomSource(){
		BaseConfig dscomSource = new BaseConfig();
		List<BaseConfig> fieldsdscomSource = new ArrayList<BaseConfig>();
		dscomSource.put("selectField", "SelectId");
		BaseConfig dscomSource_source_name = new BaseConfig();
		dscomSource_source_name.put("name", "source_name");
		dscomSource_source_name.put("type", "Base");
		dscomSource_source_name.put("title","数据源");
		dscomSource_source_name.put("dataType", "string");
		dscomSource_source_name.put("precision", "38");
		dscomSource_source_name.put("scale", "0");
		dscomSource_source_name.put("leverage", "0");
		dscomSource_source_name.put("defaultValue", "");
		dscomSource_source_name.put("format", "");
		dscomSource_source_name.put("moduleid", "");
		dscomSource_source_name.put("bizCode", "");
		dscomSource_source_name.put("isPrimaryKey", "false");
		dscomSource_source_name.put("isForeignKey", "false");
		dscomSource_source_name.put("dropdown", "");
		dscomSource_source_name.put("nullable", "true");
		dscomSource_source_name.put("nullableError", "");
		dscomSource_source_name.put("lengthRange", "");
		dscomSource_source_name.put("lengthRangeError", "");
		dscomSource_source_name.put("readOnly", "false");
		dscomSource_source_name.put("msgAlign", "right");
		dscomSource_source_name.put("charset", "");
		dscomSource_source_name.put("charsetError", "");
		fieldsdscomSource.add(dscomSource_source_name);
		BaseConfig dscomSource_source_id = new BaseConfig();
		dscomSource_source_id.put("name", "source_id");
		dscomSource_source_id.put("type", "Base");
		dscomSource_source_id.put("title","");
		dscomSource_source_id.put("dataType", "string");
		dscomSource_source_id.put("precision", "38");
		dscomSource_source_id.put("scale", "0");
		dscomSource_source_id.put("leverage", "0");
		dscomSource_source_id.put("defaultValue", "");
		dscomSource_source_id.put("format", "");
		dscomSource_source_id.put("moduleid", "");
		dscomSource_source_id.put("bizCode", "");
		dscomSource_source_id.put("isPrimaryKey", "false");
		dscomSource_source_id.put("isForeignKey", "false");
		dscomSource_source_id.put("dropdown", "");
		dscomSource_source_id.put("nullable", "true");
		dscomSource_source_id.put("nullableError", "");
		dscomSource_source_id.put("lengthRange", "");
		dscomSource_source_id.put("lengthRangeError", "");
		dscomSource_source_id.put("readOnly", "false");
		dscomSource_source_id.put("msgAlign", "right");
		dscomSource_source_id.put("charset", "");
		dscomSource_source_id.put("charsetError", "");
		fieldsdscomSource.add(dscomSource_source_id);
		BaseConfig dscomSource_SelectId = new BaseConfig();
		dscomSource_SelectId.put("name", "SelectId");
		dscomSource_SelectId.put("type", "Base");
		dscomSource_SelectId.put("title","");
		dscomSource_SelectId.put("dataType", "boolean");
		dscomSource_SelectId.put("precision", "38");
		dscomSource_SelectId.put("scale", "0");
		dscomSource_SelectId.put("leverage", "0");
		dscomSource_SelectId.put("defaultValue", "");
		dscomSource_SelectId.put("format", "");
		dscomSource_SelectId.put("moduleid", "");
		dscomSource_SelectId.put("bizCode", "");
		dscomSource_SelectId.put("isPrimaryKey", "false");
		dscomSource_SelectId.put("isForeignKey", "false");
		dscomSource_SelectId.put("dropdown", "");
		dscomSource_SelectId.put("nullable", "true");
		dscomSource_SelectId.put("nullableError", "");
		dscomSource_SelectId.put("lengthRange", "");
		dscomSource_SelectId.put("lengthRangeError", "");
		dscomSource_SelectId.put("readOnly", "false");
		dscomSource_SelectId.put("msgAlign", "right");
		dscomSource_SelectId.put("charset", "");
		dscomSource_SelectId.put("charsetError", "");
		fieldsdscomSource.add(dscomSource_SelectId);
		dscomSource.put("fields", fieldsdscomSource);
		return dscomSource;
	}

	private BaseConfig sub_ds_dsuncomSource(){
		BaseConfig dsuncomSource = new BaseConfig();
		List<BaseConfig> fieldsdsuncomSource = new ArrayList<BaseConfig>();
		dsuncomSource.put("selectField", "SelectId");
		BaseConfig dsuncomSource_source_name = new BaseConfig();
		dsuncomSource_source_name.put("name", "source_name");
		dsuncomSource_source_name.put("type", "Base");
		dsuncomSource_source_name.put("title","数据源");
		dsuncomSource_source_name.put("dataType", "string");
		dsuncomSource_source_name.put("precision", "38");
		dsuncomSource_source_name.put("scale", "0");
		dsuncomSource_source_name.put("leverage", "0");
		dsuncomSource_source_name.put("defaultValue", "");
		dsuncomSource_source_name.put("format", "");
		dsuncomSource_source_name.put("moduleid", "");
		dsuncomSource_source_name.put("bizCode", "");
		dsuncomSource_source_name.put("isPrimaryKey", "false");
		dsuncomSource_source_name.put("isForeignKey", "false");
		dsuncomSource_source_name.put("dropdown", "");
		dsuncomSource_source_name.put("nullable", "true");
		dsuncomSource_source_name.put("nullableError", "");
		dsuncomSource_source_name.put("lengthRange", "");
		dsuncomSource_source_name.put("lengthRangeError", "");
		dsuncomSource_source_name.put("readOnly", "false");
		dsuncomSource_source_name.put("msgAlign", "right");
		dsuncomSource_source_name.put("charset", "");
		dsuncomSource_source_name.put("charsetError", "");
		fieldsdsuncomSource.add(dsuncomSource_source_name);
		BaseConfig dsuncomSource_source_id = new BaseConfig();
		dsuncomSource_source_id.put("name", "source_id");
		dsuncomSource_source_id.put("type", "Base");
		dsuncomSource_source_id.put("title","");
		dsuncomSource_source_id.put("dataType", "string");
		dsuncomSource_source_id.put("precision", "38");
		dsuncomSource_source_id.put("scale", "0");
		dsuncomSource_source_id.put("leverage", "0");
		dsuncomSource_source_id.put("defaultValue", "");
		dsuncomSource_source_id.put("format", "");
		dsuncomSource_source_id.put("moduleid", "");
		dsuncomSource_source_id.put("bizCode", "");
		dsuncomSource_source_id.put("isPrimaryKey", "false");
		dsuncomSource_source_id.put("isForeignKey", "false");
		dsuncomSource_source_id.put("dropdown", "");
		dsuncomSource_source_id.put("nullable", "true");
		dsuncomSource_source_id.put("nullableError", "");
		dsuncomSource_source_id.put("lengthRange", "");
		dsuncomSource_source_id.put("lengthRangeError", "");
		dsuncomSource_source_id.put("readOnly", "false");
		dsuncomSource_source_id.put("msgAlign", "right");
		dsuncomSource_source_id.put("charset", "");
		dsuncomSource_source_id.put("charsetError", "");
		fieldsdsuncomSource.add(dsuncomSource_source_id);
		BaseConfig dsuncomSource_SelectId = new BaseConfig();
		dsuncomSource_SelectId.put("name", "SelectId");
		dsuncomSource_SelectId.put("type", "Base");
		dsuncomSource_SelectId.put("title","");
		dsuncomSource_SelectId.put("dataType", "boolean");
		dsuncomSource_SelectId.put("precision", "38");
		dsuncomSource_SelectId.put("scale", "0");
		dsuncomSource_SelectId.put("leverage", "0");
		dsuncomSource_SelectId.put("defaultValue", "");
		dsuncomSource_SelectId.put("format", "");
		dsuncomSource_SelectId.put("moduleid", "");
		dsuncomSource_SelectId.put("bizCode", "");
		dsuncomSource_SelectId.put("isPrimaryKey", "false");
		dsuncomSource_SelectId.put("isForeignKey", "false");
		dsuncomSource_SelectId.put("dropdown", "");
		dsuncomSource_SelectId.put("nullable", "true");
		dsuncomSource_SelectId.put("nullableError", "");
		dsuncomSource_SelectId.put("lengthRange", "");
		dsuncomSource_SelectId.put("lengthRangeError", "");
		dsuncomSource_SelectId.put("readOnly", "false");
		dsuncomSource_SelectId.put("msgAlign", "right");
		dsuncomSource_SelectId.put("charset", "");
		dsuncomSource_SelectId.put("charsetError", "");
		fieldsdsuncomSource.add(dsuncomSource_SelectId);
		dsuncomSource.put("fields", fieldsdsuncomSource);
		return dsuncomSource;
	}

	private BaseConfig sub_cmd_queryRuleCmd(){
		BaseConfig queryRuleCmd = new BaseConfig();
		List<BaseConfig> fieldsqueryRuleCmd = new ArrayList<BaseConfig>();
		BaseConfig queryRuleCmd_queryRuleItem = new BaseConfig();
		queryRuleCmd_queryRuleItem.put("id", "queryRuleItem");
		queryRuleCmd_queryRuleItem.put("type", "Dataset");
		queryRuleCmd_queryRuleItem.put("bizType", "Query");
		queryRuleCmd_queryRuleItem.put("ref", "");
		queryRuleCmd_queryRuleItem.put("callbackFields", "");
		queryRuleCmd_queryRuleItem.put("backfillFields", "");
		queryRuleCmd_queryRuleItem.put("flushDataOnSuccess", "false");
		queryRuleCmd_queryRuleItem.put("clearOriginalData", "false");
		queryRuleCmd_queryRuleItem.put("bank", "");
		queryRuleCmd_queryRuleItem.put("application", "");
		queryRuleCmd_queryRuleItem.put("pkgId", "");
		queryRuleCmd_queryRuleItem.put("datascope", "Current");
		queryRuleCmd_queryRuleItem.put("sqlId", "");
		queryRuleCmd_queryRuleItem.put("optType", "selectList");
		queryRuleCmd_queryRuleItem.put("entityDataset", "dsResult");
		queryRuleCmd_queryRuleItem.put("conditionDataset", "dsQuery");
		queryRuleCmd_queryRuleItem.put("validForm", "");
		queryRuleCmd_queryRuleItem.put("templateTable", "");
		queryRuleCmd_queryRuleItem.put("ifNoneResultNotification", "true");
		fieldsqueryRuleCmd.add(queryRuleCmd_queryRuleItem);
		queryRuleCmd.put("items", fieldsqueryRuleCmd);
		return queryRuleCmd;
	}

	private BaseConfig sub_cmd_AnalysisExecCmd(){
		BaseConfig AnalysisExecCmd = new BaseConfig();
		List<BaseConfig> fieldsAnalysisExecCmd = new ArrayList<BaseConfig>();
		BaseConfig AnalysisExecCmd_AnalysisExecItem = new BaseConfig();
		AnalysisExecCmd_AnalysisExecItem.put("id", "AnalysisExecItem");
		AnalysisExecCmd_AnalysisExecItem.put("type", "Dataset");
		AnalysisExecCmd_AnalysisExecItem.put("bizType", "Commit");
		AnalysisExecCmd_AnalysisExecItem.put("ref", "");
		AnalysisExecCmd_AnalysisExecItem.put("callbackFields", "");
		AnalysisExecCmd_AnalysisExecItem.put("backfillFields", "");
		AnalysisExecCmd_AnalysisExecItem.put("flushDataOnSuccess", "false");
		AnalysisExecCmd_AnalysisExecItem.put("clearOriginalData", "false");
		AnalysisExecCmd_AnalysisExecItem.put("bank", "");
		AnalysisExecCmd_AnalysisExecItem.put("application", "");
		AnalysisExecCmd_AnalysisExecItem.put("pkgId", "");
		AnalysisExecCmd_AnalysisExecItem.put("datascope", "ALL");
		AnalysisExecCmd_AnalysisExecItem.put("sqlId", "");
		AnalysisExecCmd_AnalysisExecItem.put("optType", "selectList");
		AnalysisExecCmd_AnalysisExecItem.put("entityDataset", "dsResult");
		AnalysisExecCmd_AnalysisExecItem.put("conditionDataset", "");
		AnalysisExecCmd_AnalysisExecItem.put("validForm", "");
		AnalysisExecCmd_AnalysisExecItem.put("templateTable", "");
		AnalysisExecCmd_AnalysisExecItem.put("ifNoneResultNotification", "true");
		fieldsAnalysisExecCmd.add(AnalysisExecCmd_AnalysisExecItem);
		AnalysisExecCmd.put("items", fieldsAnalysisExecCmd);
		return AnalysisExecCmd;
	}

	private BaseConfig sub_cmd_queryDepartCmd(){
		BaseConfig queryDepartCmd = new BaseConfig();
		List<BaseConfig> fieldsqueryDepartCmd = new ArrayList<BaseConfig>();
		BaseConfig queryDepartCmd_queryDepartItem = new BaseConfig();
		queryDepartCmd_queryDepartItem.put("id", "queryDepartItem");
		queryDepartCmd_queryDepartItem.put("type", "Dataset");
		queryDepartCmd_queryDepartItem.put("bizType", "Query");
		queryDepartCmd_queryDepartItem.put("ref", "");
		queryDepartCmd_queryDepartItem.put("callbackFields", "");
		queryDepartCmd_queryDepartItem.put("backfillFields", "");
		queryDepartCmd_queryDepartItem.put("flushDataOnSuccess", "false");
		queryDepartCmd_queryDepartItem.put("clearOriginalData", "false");
		queryDepartCmd_queryDepartItem.put("bank", "");
		queryDepartCmd_queryDepartItem.put("application", "");
		queryDepartCmd_queryDepartItem.put("pkgId", "");
		queryDepartCmd_queryDepartItem.put("datascope", "Current");
		queryDepartCmd_queryDepartItem.put("sqlId", "");
		queryDepartCmd_queryDepartItem.put("optType", "selectList");
		queryDepartCmd_queryDepartItem.put("entityDataset", "dsDepartList");
		queryDepartCmd_queryDepartItem.put("conditionDataset", "dsDepartList");
		queryDepartCmd_queryDepartItem.put("validForm", "");
		queryDepartCmd_queryDepartItem.put("templateTable", "");
		queryDepartCmd_queryDepartItem.put("ifNoneResultNotification", "true");
		fieldsqueryDepartCmd.add(queryDepartCmd_queryDepartItem);
		queryDepartCmd.put("items", fieldsqueryDepartCmd);
		return queryDepartCmd;
	}

	private BaseConfig sub_cmd_queryDefaultCmd(){
		BaseConfig queryDefaultCmd = new BaseConfig();
		List<BaseConfig> fieldsqueryDefaultCmd = new ArrayList<BaseConfig>();
		BaseConfig queryDefaultCmd_queryDefaultItem = new BaseConfig();
		queryDefaultCmd_queryDefaultItem.put("id", "queryDefaultItem");
		queryDefaultCmd_queryDefaultItem.put("type", "Dataset");
		queryDefaultCmd_queryDefaultItem.put("bizType", "Query");
		queryDefaultCmd_queryDefaultItem.put("ref", "");
		queryDefaultCmd_queryDefaultItem.put("callbackFields", "");
		queryDefaultCmd_queryDefaultItem.put("backfillFields", "");
		queryDefaultCmd_queryDefaultItem.put("flushDataOnSuccess", "false");
		queryDefaultCmd_queryDefaultItem.put("clearOriginalData", "false");
		queryDefaultCmd_queryDefaultItem.put("bank", "");
		queryDefaultCmd_queryDefaultItem.put("application", "");
		queryDefaultCmd_queryDefaultItem.put("pkgId", "");
		queryDefaultCmd_queryDefaultItem.put("datascope", "Current");
		queryDefaultCmd_queryDefaultItem.put("sqlId", "");
		queryDefaultCmd_queryDefaultItem.put("optType", "selectList");
		queryDefaultCmd_queryDefaultItem.put("entityDataset", "dsQuery");
		queryDefaultCmd_queryDefaultItem.put("conditionDataset", "");
		queryDefaultCmd_queryDefaultItem.put("validForm", "");
		queryDefaultCmd_queryDefaultItem.put("templateTable", "");
		queryDefaultCmd_queryDefaultItem.put("ifNoneResultNotification", "true");
		fieldsqueryDefaultCmd.add(queryDefaultCmd_queryDefaultItem);
		queryDefaultCmd.put("items", fieldsqueryDefaultCmd);
		return queryDefaultCmd;
	}

	private BaseConfig sub_cmd_checkCmd(){
		BaseConfig checkCmd = new BaseConfig();
		List<BaseConfig> fieldscheckCmd = new ArrayList<BaseConfig>();
		BaseConfig checkCmd_checkCmdItem = new BaseConfig();
		checkCmd_checkCmdItem.put("id", "checkCmdItem");
		checkCmd_checkCmdItem.put("type", "Dataset");
		checkCmd_checkCmdItem.put("bizType", "Commit");
		checkCmd_checkCmdItem.put("ref", "");
		checkCmd_checkCmdItem.put("callbackFields", "");
		checkCmd_checkCmdItem.put("backfillFields", "");
		checkCmd_checkCmdItem.put("flushDataOnSuccess", "false");
		checkCmd_checkCmdItem.put("clearOriginalData", "false");
		checkCmd_checkCmdItem.put("bank", "");
		checkCmd_checkCmdItem.put("application", "");
		checkCmd_checkCmdItem.put("pkgId", "");
		checkCmd_checkCmdItem.put("datascope", "Current");
		checkCmd_checkCmdItem.put("sqlId", "");
		checkCmd_checkCmdItem.put("optType", "selectList");
		checkCmd_checkCmdItem.put("entityDataset", "dsQuery");
		checkCmd_checkCmdItem.put("conditionDataset", "");
		checkCmd_checkCmdItem.put("validForm", "");
		checkCmd_checkCmdItem.put("templateTable", "");
		checkCmd_checkCmdItem.put("ifNoneResultNotification", "true");
		fieldscheckCmd.add(checkCmd_checkCmdItem);
		checkCmd.put("items", fieldscheckCmd);
		return checkCmd;
	}

	private BaseConfig sub_cmd_comfirmQryCmd(){
		BaseConfig comfirmQryCmd = new BaseConfig();
		List<BaseConfig> fieldscomfirmQryCmd = new ArrayList<BaseConfig>();
		BaseConfig comfirmQryCmd_comfirmSourceList = new BaseConfig();
		comfirmQryCmd_comfirmSourceList.put("id", "comfirmSourceList");
		comfirmQryCmd_comfirmSourceList.put("type", "Dataset");
		comfirmQryCmd_comfirmSourceList.put("bizType", "Query");
		comfirmQryCmd_comfirmSourceList.put("ref", "");
		comfirmQryCmd_comfirmSourceList.put("callbackFields", "");
		comfirmQryCmd_comfirmSourceList.put("backfillFields", "");
		comfirmQryCmd_comfirmSourceList.put("flushDataOnSuccess", "false");
		comfirmQryCmd_comfirmSourceList.put("clearOriginalData", "false");
		comfirmQryCmd_comfirmSourceList.put("bank", "");
		comfirmQryCmd_comfirmSourceList.put("application", "");
		comfirmQryCmd_comfirmSourceList.put("pkgId", "");
		comfirmQryCmd_comfirmSourceList.put("datascope", "Current");
		comfirmQryCmd_comfirmSourceList.put("sqlId", "");
		comfirmQryCmd_comfirmSourceList.put("optType", "selectList");
		comfirmQryCmd_comfirmSourceList.put("entityDataset", "dscomSource");
		comfirmQryCmd_comfirmSourceList.put("conditionDataset", "dsQuery");
		comfirmQryCmd_comfirmSourceList.put("validForm", "");
		comfirmQryCmd_comfirmSourceList.put("templateTable", "");
		comfirmQryCmd_comfirmSourceList.put("ifNoneResultNotification", "true");
		fieldscomfirmQryCmd.add(comfirmQryCmd_comfirmSourceList);
		comfirmQryCmd.put("items", fieldscomfirmQryCmd);
		return comfirmQryCmd;
	}

	private BaseConfig sub_cmd_uncomfirmQryCmd(){
		BaseConfig uncomfirmQryCmd = new BaseConfig();
		List<BaseConfig> fieldsuncomfirmQryCmd = new ArrayList<BaseConfig>();
		BaseConfig uncomfirmQryCmd_uncomfirmSourceList = new BaseConfig();
		uncomfirmQryCmd_uncomfirmSourceList.put("id", "uncomfirmSourceList");
		uncomfirmQryCmd_uncomfirmSourceList.put("type", "Dataset");
		uncomfirmQryCmd_uncomfirmSourceList.put("bizType", "Query");
		uncomfirmQryCmd_uncomfirmSourceList.put("ref", "");
		uncomfirmQryCmd_uncomfirmSourceList.put("callbackFields", "");
		uncomfirmQryCmd_uncomfirmSourceList.put("backfillFields", "");
		uncomfirmQryCmd_uncomfirmSourceList.put("flushDataOnSuccess", "false");
		uncomfirmQryCmd_uncomfirmSourceList.put("clearOriginalData", "false");
		uncomfirmQryCmd_uncomfirmSourceList.put("bank", "");
		uncomfirmQryCmd_uncomfirmSourceList.put("application", "");
		uncomfirmQryCmd_uncomfirmSourceList.put("pkgId", "");
		uncomfirmQryCmd_uncomfirmSourceList.put("datascope", "Current");
		uncomfirmQryCmd_uncomfirmSourceList.put("sqlId", "");
		uncomfirmQryCmd_uncomfirmSourceList.put("optType", "selectList");
		uncomfirmQryCmd_uncomfirmSourceList.put("entityDataset", "dsuncomSource");
		uncomfirmQryCmd_uncomfirmSourceList.put("conditionDataset", "dsQuery");
		uncomfirmQryCmd_uncomfirmSourceList.put("validForm", "");
		uncomfirmQryCmd_uncomfirmSourceList.put("templateTable", "");
		uncomfirmQryCmd_uncomfirmSourceList.put("ifNoneResultNotification", "true");
		fieldsuncomfirmQryCmd.add(uncomfirmQryCmd_uncomfirmSourceList);
		uncomfirmQryCmd.put("items", fieldsuncomfirmQryCmd);
		return uncomfirmQryCmd;
	}

	private BaseConfig sub_cmd_comfirmCmd(){
		BaseConfig comfirmCmd = new BaseConfig();
		List<BaseConfig> fieldscomfirmCmd = new ArrayList<BaseConfig>();
		BaseConfig comfirmCmd_comfirmSource = new BaseConfig();
		comfirmCmd_comfirmSource.put("id", "comfirmSource");
		comfirmCmd_comfirmSource.put("type", "Dataset");
		comfirmCmd_comfirmSource.put("bizType", "Commit");
		comfirmCmd_comfirmSource.put("ref", "");
		comfirmCmd_comfirmSource.put("callbackFields", "");
		comfirmCmd_comfirmSource.put("backfillFields", "");
		comfirmCmd_comfirmSource.put("flushDataOnSuccess", "false");
		comfirmCmd_comfirmSource.put("clearOriginalData", "false");
		comfirmCmd_comfirmSource.put("bank", "");
		comfirmCmd_comfirmSource.put("application", "");
		comfirmCmd_comfirmSource.put("pkgId", "");
		comfirmCmd_comfirmSource.put("datascope", "ALL");
		comfirmCmd_comfirmSource.put("sqlId", "");
		comfirmCmd_comfirmSource.put("optType", "selectList");
		comfirmCmd_comfirmSource.put("entityDataset", "dscomSource");
		comfirmCmd_comfirmSource.put("conditionDataset", "");
		comfirmCmd_comfirmSource.put("validForm", "");
		comfirmCmd_comfirmSource.put("templateTable", "");
		comfirmCmd_comfirmSource.put("ifNoneResultNotification", "true");
		fieldscomfirmCmd.add(comfirmCmd_comfirmSource);
		comfirmCmd.put("items", fieldscomfirmCmd);
		return comfirmCmd;
	}

	private BaseConfig sub_cmd_uncomfirmCmd(){
		BaseConfig uncomfirmCmd = new BaseConfig();
		List<BaseConfig> fieldsuncomfirmCmd = new ArrayList<BaseConfig>();
		BaseConfig uncomfirmCmd_uncomfirmSource = new BaseConfig();
		uncomfirmCmd_uncomfirmSource.put("id", "uncomfirmSource");
		uncomfirmCmd_uncomfirmSource.put("type", "Dataset");
		uncomfirmCmd_uncomfirmSource.put("bizType", "Commit");
		uncomfirmCmd_uncomfirmSource.put("ref", "");
		uncomfirmCmd_uncomfirmSource.put("callbackFields", "");
		uncomfirmCmd_uncomfirmSource.put("backfillFields", "");
		uncomfirmCmd_uncomfirmSource.put("flushDataOnSuccess", "false");
		uncomfirmCmd_uncomfirmSource.put("clearOriginalData", "false");
		uncomfirmCmd_uncomfirmSource.put("bank", "");
		uncomfirmCmd_uncomfirmSource.put("application", "");
		uncomfirmCmd_uncomfirmSource.put("pkgId", "");
		uncomfirmCmd_uncomfirmSource.put("datascope", "Current");
		uncomfirmCmd_uncomfirmSource.put("sqlId", "");
		uncomfirmCmd_uncomfirmSource.put("optType", "selectList");
		uncomfirmCmd_uncomfirmSource.put("entityDataset", "dsuncomSource");
		uncomfirmCmd_uncomfirmSource.put("conditionDataset", "");
		uncomfirmCmd_uncomfirmSource.put("validForm", "");
		uncomfirmCmd_uncomfirmSource.put("templateTable", "");
		uncomfirmCmd_uncomfirmSource.put("ifNoneResultNotification", "true");
		fieldsuncomfirmCmd.add(uncomfirmCmd_uncomfirmSource);
		uncomfirmCmd.put("items", fieldsuncomfirmCmd);
		return uncomfirmCmd;
	}

	private BaseConfig sub_control_queryForm() {
		BaseConfig queryForm = new BaseConfig();
		queryForm.setXmlTag("Form");
		queryForm.put("id", "queryForm");
		queryForm.put("fragmentId", "");
		queryForm.put("type", "Auto");
		queryForm.put("title", "手工分析");
		queryForm.put("dataset", "dsQuery");
		queryForm.put("width", "");
		queryForm.put("height", "");
		queryForm.put("enable", "true");
		queryForm.put("readOnly", "false");
		queryForm.put("visible", "true");
		queryForm.put("expandRatio", "");
		queryForm.put("numCols", "4");
		List<BaseConfig> queryFormItemList = new ArrayList<BaseConfig>();
		BaseConfig queryForm_editorWORK_DATE = new BaseConfig();
		queryForm_editorWORK_DATE.setXmlTag("FormItem");
		queryForm_editorWORK_DATE.put("required", "true");
		queryForm_editorWORK_DATE.put("requiredMessage", "");
		queryForm_editorWORK_DATE.put("id", "editorWORK_DATE");
		queryForm_editorWORK_DATE.put("fragmentId", "");
		queryForm_editorWORK_DATE.put("type", "Date");
		queryForm_editorWORK_DATE.put("leftMedian", "");
		queryForm_editorWORK_DATE.put("rightMedian", "");
		queryForm_editorWORK_DATE.put("title", "工作日期");
		queryForm_editorWORK_DATE.put("dataset", "dsQuery");
		queryForm_editorWORK_DATE.put("name", "WORK_DATE");
		queryForm_editorWORK_DATE.put("resolution", "");
		queryForm_editorWORK_DATE.put("format", "");
		queryForm_editorWORK_DATE.put("picker", "");
		queryForm_editorWORK_DATE.put("componentAlignment", "Middle_Left");
		queryForm_editorWORK_DATE.put("labelAlignment", "Middle_Right");
		queryForm_editorWORK_DATE.put("columnStart", "1");
		queryForm_editorWORK_DATE.put("columnEnd", "4");
		queryForm_editorWORK_DATE.put("rowStart", "1");
		queryForm_editorWORK_DATE.put("rowEnd", "1");
		queryForm_editorWORK_DATE.put("columns", "");
		queryForm_editorWORK_DATE.put("rows", "");
		queryForm_editorWORK_DATE.put("colSpan", "");
		queryForm_editorWORK_DATE.put("rowSpan", "");
		queryForm_editorWORK_DATE.put("width", "100%");
		queryForm_editorWORK_DATE.put("height", "");
		queryForm_editorWORK_DATE.put("symbol", "");
		queryForm_editorWORK_DATE.put("maxLength", "");
		queryForm_editorWORK_DATE.put("labelWidth", "");
		queryForm_editorWORK_DATE.put("enable", "true");
		queryForm_editorWORK_DATE.put("readOnly", "false");
		queryForm_editorWORK_DATE.put("visible", "true");
		queryForm_editorWORK_DATE.put("dbcshortcut", "");
		queryFormItemList.add(queryForm_editorWORK_DATE);
		BaseConfig queryForm_editorDEPART_ID = new BaseConfig();
		queryForm_editorDEPART_ID.setXmlTag("FormItem");
		queryForm_editorDEPART_ID.put("required", "true");
		queryForm_editorDEPART_ID.put("requiredMessage", "");
		queryForm_editorDEPART_ID.put("id", "editorDEPART_ID");
		queryForm_editorDEPART_ID.put("fragmentId", "");
		queryForm_editorDEPART_ID.put("type", "ComboBox");
		queryForm_editorDEPART_ID.put("title", "机构代码");
		queryForm_editorDEPART_ID.put("dataset", "dsQuery");
		queryForm_editorDEPART_ID.put("name", "DEPART_ID");
		queryForm_editorDEPART_ID.put("moduleid", "");
		queryForm_editorDEPART_ID.put("bizCode", "");
		queryForm_editorDEPART_ID.put("dropdownDataset", "dsDepartList");
		queryForm_editorDEPART_ID.put("valueField", "depart_id");
		queryForm_editorDEPART_ID.put("displayField", "depart_name");
		queryForm_editorDEPART_ID.put("allowNull", "true");
		queryForm_editorDEPART_ID.put("nullSelectionAllowed", "true");
		queryForm_editorDEPART_ID.put("switchMode", "true");
		queryForm_editorDEPART_ID.put("componentAlignment", "Middle_Left");
		queryForm_editorDEPART_ID.put("columnStart", "5");
		queryForm_editorDEPART_ID.put("columnEnd", "8");
		queryForm_editorDEPART_ID.put("rowStart", "1");
		queryForm_editorDEPART_ID.put("rowEnd", "1");
		queryForm_editorDEPART_ID.put("colSpan", "");
		queryForm_editorDEPART_ID.put("rowSpan", "");
		queryForm_editorDEPART_ID.put("width", "100%");
		queryForm_editorDEPART_ID.put("height", "");
		queryForm_editorDEPART_ID.put("labelWidth", "");
		queryForm_editorDEPART_ID.put("enable", "true");
		queryForm_editorDEPART_ID.put("readOnly", "false");
		queryForm_editorDEPART_ID.put("visible", "true");
		queryForm_editorDEPART_ID.put("expandRatio", "");
		queryForm_editorDEPART_ID.put("filteringMode", "Contains");
		queryForm_editorDEPART_ID.put("attachComboBox", "");
		queryForm_editorDEPART_ID.put("attachFieldName", "");
		queryForm_editorDEPART_ID.put("leftColumnCaption", "");
		queryForm_editorDEPART_ID.put("rightColumnCaption", "");
		queryForm_editorDEPART_ID.put("isMultiSelect", "true");
		queryForm_editorDEPART_ID.put("orientation", "vertical");
		queryFormItemList.add(queryForm_editorDEPART_ID);
		queryForm.put("formItemList",queryFormItemList);
		return queryForm;
	}

	private BaseConfig sub_control_btnQuery() {
		BaseConfig btnQuery = new BaseConfig();
		btnQuery.setXmlTag("Button");
		btnQuery.put("id", "btnQuery");
		btnQuery.put("fragmentId", "");
		btnQuery.put("type", "Base");
		btnQuery.put("title", "查询");
		btnQuery.put("width", "");
		btnQuery.put("height", "");
		btnQuery.put("componentAlignment", "");
		btnQuery.put("command", "");
		btnQuery.put("callbackCommand", "");
		btnQuery.put("columnStart", "");
		btnQuery.put("columnEnd", "");
		btnQuery.put("rowStart", "");
		btnQuery.put("rowEnd", "");
		btnQuery.put("enable", "true");
		btnQuery.put("readOnly", "false");
		btnQuery.put("visible", "true");
		btnQuery.put("expandRatio", "");
		btnQuery.put("shortcut", "");
		return btnQuery;
	}

	private BaseConfig sub_control_btnExec() {
		BaseConfig btnExec = new BaseConfig();
		btnExec.setXmlTag("Button");
		btnExec.put("id", "btnExec");
		btnExec.put("fragmentId", "");
		btnExec.put("type", "Base");
		btnExec.put("title", "分析");
		btnExec.put("width", "");
		btnExec.put("height", "");
		btnExec.put("componentAlignment", "");
		btnExec.put("command", "");
		btnExec.put("callbackCommand", "");
		btnExec.put("columnStart", "");
		btnExec.put("columnEnd", "");
		btnExec.put("rowStart", "");
		btnExec.put("rowEnd", "");
		btnExec.put("enable", "true");
		btnExec.put("readOnly", "false");
		btnExec.put("visible", "true");
		btnExec.put("expandRatio", "");
		btnExec.put("shortcut", "");
		return btnExec;
	}

	private BaseConfig sub_control_btconfirm() {
		BaseConfig btconfirm = new BaseConfig();
		btconfirm.setXmlTag("Button");
		btconfirm.put("id", "btconfirm");
		btconfirm.put("fragmentId", "");
		btconfirm.put("type", "Base");
		btconfirm.put("title", "完成确认");
		btconfirm.put("width", "");
		btconfirm.put("height", "");
		btconfirm.put("componentAlignment", "");
		btconfirm.put("command", "");
		btconfirm.put("callbackCommand", "");
		btconfirm.put("columnStart", "");
		btconfirm.put("columnEnd", "");
		btconfirm.put("rowStart", "");
		btconfirm.put("rowEnd", "");
		btconfirm.put("enable", "true");
		btconfirm.put("readOnly", "false");
		btconfirm.put("visible", "true");
		btconfirm.put("expandRatio", "");
		btconfirm.put("shortcut", "");
		return btconfirm;
	}

	private BaseConfig sub_control_btcancel() {
		BaseConfig btcancel = new BaseConfig();
		btcancel.setXmlTag("Button");
		btcancel.put("id", "btcancel");
		btcancel.put("fragmentId", "");
		btcancel.put("type", "Base");
		btcancel.put("title", "取消完成确认");
		btcancel.put("width", "");
		btcancel.put("height", "");
		btcancel.put("componentAlignment", "");
		btcancel.put("command", "");
		btcancel.put("callbackCommand", "");
		btcancel.put("columnStart", "");
		btcancel.put("columnEnd", "");
		btcancel.put("rowStart", "");
		btcancel.put("rowEnd", "");
		btcancel.put("enable", "true");
		btcancel.put("readOnly", "false");
		btcancel.put("visible", "true");
		btcancel.put("expandRatio", "");
		btcancel.put("shortcut", "");
		return btcancel;
	}

	private BaseConfig sub_control_queryBtnLayout() {
		BaseConfig queryBtnLayout = new BaseConfig();
		queryBtnLayout.setXmlTag("Layout");
		queryBtnLayout.put("id", "queryBtnLayout");
		queryBtnLayout.put("fragmentId", "");
		queryBtnLayout.put("type", "HFlow");
		queryBtnLayout.put("row", "");
		queryBtnLayout.put("column", "");
		queryBtnLayout.put("labelAlign", "left");
		queryBtnLayout.put("componentAlignment", "Top_Left");
		queryBtnLayout.put("margin", "false");
		queryBtnLayout.put("spacing", "false");
		queryBtnLayout.put("columnExpandRatio", "");
		queryBtnLayout.put("width", "");
		queryBtnLayout.put("height", "");
		queryBtnLayout.put("enable", "true");
		queryBtnLayout.put("readOnly", "false");
		queryBtnLayout.put("visible", "true");
		List<BaseConfig> queryBtnLayoutList = new ArrayList<BaseConfig>();
		queryBtnLayout.put("queryBtnLayoutList",queryBtnLayoutList);
		BaseConfig btnQuery = sub_control_btnQuery();
		queryBtnLayoutList.add(btnQuery);
		BaseConfig btnExec = sub_control_btnExec();
		queryBtnLayoutList.add(btnExec);
		BaseConfig btconfirm = sub_control_btconfirm();
		queryBtnLayoutList.add(btconfirm);
		BaseConfig btcancel = sub_control_btcancel();
		queryBtnLayoutList.add(btcancel);
		return queryBtnLayout;
	}

	private BaseConfig sub_control_tableResult() {
		BaseConfig tableResult = new BaseConfig();
		tableResult.setXmlTag("Table");
		tableResult.put("id", "tableResult");
		tableResult.put("fragmentId", "");
		tableResult.put("type", "Select");
		tableResult.put("caption", "");
		tableResult.put("hightLight", "true");
		tableResult.put("dataset", "dsResult");
		tableResult.put("width", "100%");
		tableResult.put("height", "405px");
		tableResult.put("enable", "true");
		tableResult.put("readOnly", "false");
		tableResult.put("visible", "true");
		tableResult.put("selectField", "");
		tableResult.put("reorderingAllowed", "false");
		tableResult.put("collapsingAllowed", "false");
		tableResult.put("expandRatio", "");
		List<BaseConfig> tableResultFieldList = new ArrayList<BaseConfig>();
		BaseConfig editWORK_DATE = new BaseConfig();
		editWORK_DATE.setXmlTag("ListGridField");
		editWORK_DATE.put("type", "Base");
		editWORK_DATE.put("name", "WORK_DATE");
		editWORK_DATE.put("id", "editWORK_DATE");
		editWORK_DATE.put("field", "WORK_DATE");
		editWORK_DATE.put("title", "工作日期");
		editWORK_DATE.put("moduleid", "");
		editWORK_DATE.put("bizCode", "");
		editWORK_DATE.put("dropdown", "");
		editWORK_DATE.put("dateFormat", "");
		editWORK_DATE.put("moneyFormat", "");
		editWORK_DATE.put("width", "80");
		editWORK_DATE.put("columnAlignment", "Align_left");
		editWORK_DATE.put("enable", "true");
		editWORK_DATE.put("readOnly", "false");
		editWORK_DATE.put("visible", "true");
		editWORK_DATE.put("addUp", "false");
		tableResultFieldList.add(editWORK_DATE);
		BaseConfig editDEPART_ID = new BaseConfig();
		editDEPART_ID.setXmlTag("ListGridField");
		editDEPART_ID.put("type", "Base");
		editDEPART_ID.put("name", "DEPART_ID");
		editDEPART_ID.put("id", "editDEPART_ID");
		editDEPART_ID.put("field", "DEPART_ID");
		editDEPART_ID.put("title", "机构代码");
		editDEPART_ID.put("moduleid", "");
		editDEPART_ID.put("bizCode", "");
		editDEPART_ID.put("dropdown", "");
		editDEPART_ID.put("dateFormat", "");
		editDEPART_ID.put("moneyFormat", "");
		editDEPART_ID.put("width", "100");
		editDEPART_ID.put("columnAlignment", "Align_left");
		editDEPART_ID.put("enable", "true");
		editDEPART_ID.put("readOnly", "false");
		editDEPART_ID.put("visible", "true");
		editDEPART_ID.put("addUp", "false");
		tableResultFieldList.add(editDEPART_ID);
		BaseConfig editRULE_CODE = new BaseConfig();
		editRULE_CODE.setXmlTag("ListGridField");
		editRULE_CODE.put("type", "Base");
		editRULE_CODE.put("name", "RULE_CODE");
		editRULE_CODE.put("id", "editRULE_CODE");
		editRULE_CODE.put("field", "RULE_CODE");
		editRULE_CODE.put("title", "规则代码");
		editRULE_CODE.put("moduleid", "");
		editRULE_CODE.put("bizCode", "");
		editRULE_CODE.put("dropdown", "");
		editRULE_CODE.put("dateFormat", "");
		editRULE_CODE.put("moneyFormat", "");
		editRULE_CODE.put("width", "80");
		editRULE_CODE.put("columnAlignment", "Align_left");
		editRULE_CODE.put("enable", "true");
		editRULE_CODE.put("readOnly", "false");
		editRULE_CODE.put("visible", "true");
		editRULE_CODE.put("addUp", "false");
		tableResultFieldList.add(editRULE_CODE);
		BaseConfig editRULE_TYPE = new BaseConfig();
		editRULE_TYPE.setXmlTag("ListGridField");
		editRULE_TYPE.put("type", "Base");
		editRULE_TYPE.put("name", "RULE_TYPE");
		editRULE_TYPE.put("id", "editRULE_TYPE");
		editRULE_TYPE.put("field", "RULE_TYPE");
		editRULE_TYPE.put("title", "规则类型");
		editRULE_TYPE.put("moduleid", "RPT1501");
		editRULE_TYPE.put("bizCode", "0000");
		editRULE_TYPE.put("dropdown", "");
		editRULE_TYPE.put("dateFormat", "");
		editRULE_TYPE.put("moneyFormat", "");
		editRULE_TYPE.put("width", "80");
		editRULE_TYPE.put("columnAlignment", "Align_left");
		editRULE_TYPE.put("enable", "true");
		editRULE_TYPE.put("readOnly", "false");
		editRULE_TYPE.put("visible", "true");
		editRULE_TYPE.put("addUp", "false");
		tableResultFieldList.add(editRULE_TYPE);
		BaseConfig editRULE_NOTES = new BaseConfig();
		editRULE_NOTES.setXmlTag("ListGridField");
		editRULE_NOTES.put("type", "Base");
		editRULE_NOTES.put("name", "RULE_NOTES");
		editRULE_NOTES.put("id", "editRULE_NOTES");
		editRULE_NOTES.put("field", "RULE_NOTES");
		editRULE_NOTES.put("title", "规则描述");
		editRULE_NOTES.put("moduleid", "");
		editRULE_NOTES.put("bizCode", "");
		editRULE_NOTES.put("dropdown", "");
		editRULE_NOTES.put("dateFormat", "");
		editRULE_NOTES.put("moneyFormat", "");
		editRULE_NOTES.put("width", "150");
		editRULE_NOTES.put("columnAlignment", "Align_left");
		editRULE_NOTES.put("enable", "true");
		editRULE_NOTES.put("readOnly", "false");
		editRULE_NOTES.put("visible", "true");
		editRULE_NOTES.put("addUp", "false");
		tableResultFieldList.add(editRULE_NOTES);
		BaseConfig editERR_FLAG = new BaseConfig();
		editERR_FLAG.setXmlTag("ListGridField");
		editERR_FLAG.put("type", "Base");
		editERR_FLAG.put("name", "ERR_FLAG");
		editERR_FLAG.put("id", "editERR_FLAG");
		editERR_FLAG.put("field", "ERR_FLAG");
		editERR_FLAG.put("title", "执行状态");
		editERR_FLAG.put("moduleid", "RPT1502");
		editERR_FLAG.put("bizCode", "0000");
		editERR_FLAG.put("dropdown", "");
		editERR_FLAG.put("dateFormat", "");
		editERR_FLAG.put("moneyFormat", "");
		editERR_FLAG.put("width", "80");
		editERR_FLAG.put("columnAlignment", "Align_left");
		editERR_FLAG.put("enable", "true");
		editERR_FLAG.put("readOnly", "false");
		editERR_FLAG.put("visible", "true");
		editERR_FLAG.put("addUp", "false");
		tableResultFieldList.add(editERR_FLAG);
		BaseConfig editERR_CONTENT = new BaseConfig();
		editERR_CONTENT.setXmlTag("ListGridField");
		editERR_CONTENT.put("type", "Base");
		editERR_CONTENT.put("name", "ERR_CONTENT");
		editERR_CONTENT.put("id", "editERR_CONTENT");
		editERR_CONTENT.put("field", "ERR_CONTENT");
		editERR_CONTENT.put("title", "执行信息");
		editERR_CONTENT.put("moduleid", "");
		editERR_CONTENT.put("bizCode", "");
		editERR_CONTENT.put("dropdown", "");
		editERR_CONTENT.put("dateFormat", "");
		editERR_CONTENT.put("moneyFormat", "");
		editERR_CONTENT.put("width", "200");
		editERR_CONTENT.put("columnAlignment", "Align_left");
		editERR_CONTENT.put("enable", "true");
		editERR_CONTENT.put("readOnly", "false");
		editERR_CONTENT.put("visible", "true");
		editERR_CONTENT.put("addUp", "false");
		tableResultFieldList.add(editERR_CONTENT);
		BaseConfig editBEGIN_TIME = new BaseConfig();
		editBEGIN_TIME.setXmlTag("ListGridField");
		editBEGIN_TIME.put("type", "Base");
		editBEGIN_TIME.put("name", "BEGIN_TIME");
		editBEGIN_TIME.put("id", "editBEGIN_TIME");
		editBEGIN_TIME.put("field", "BEGIN_TIME");
		editBEGIN_TIME.put("title", "开始时间");
		editBEGIN_TIME.put("moduleid", "");
		editBEGIN_TIME.put("bizCode", "");
		editBEGIN_TIME.put("dropdown", "");
		editBEGIN_TIME.put("dateFormat", "");
		editBEGIN_TIME.put("moneyFormat", "");
		editBEGIN_TIME.put("width", "120");
		editBEGIN_TIME.put("columnAlignment", "Align_left");
		editBEGIN_TIME.put("enable", "true");
		editBEGIN_TIME.put("readOnly", "false");
		editBEGIN_TIME.put("visible", "true");
		editBEGIN_TIME.put("addUp", "false");
		tableResultFieldList.add(editBEGIN_TIME);
		BaseConfig editEND_TIME = new BaseConfig();
		editEND_TIME.setXmlTag("ListGridField");
		editEND_TIME.put("type", "Base");
		editEND_TIME.put("name", "END_TIME");
		editEND_TIME.put("id", "editEND_TIME");
		editEND_TIME.put("field", "END_TIME");
		editEND_TIME.put("title", "结束时间");
		editEND_TIME.put("moduleid", "");
		editEND_TIME.put("bizCode", "");
		editEND_TIME.put("dropdown", "");
		editEND_TIME.put("dateFormat", "");
		editEND_TIME.put("moneyFormat", "");
		editEND_TIME.put("width", "120");
		editEND_TIME.put("columnAlignment", "Align_left");
		editEND_TIME.put("enable", "true");
		editEND_TIME.put("readOnly", "false");
		editEND_TIME.put("visible", "true");
		editEND_TIME.put("addUp", "false");
		tableResultFieldList.add(editEND_TIME);
		tableResult.put("tableFieldConfigList",tableResultFieldList);
		return tableResult;
	}

	private BaseConfig sub_control_outerlayout() {
		BaseConfig outerlayout = new BaseConfig();
		outerlayout.setXmlTag("Layout");
		outerlayout.put("id", "outerlayout");
		outerlayout.put("fragmentId", "");
		outerlayout.put("type", "VFlow");
		outerlayout.put("row", "");
		outerlayout.put("column", "");
		outerlayout.put("labelAlign", "left");
		outerlayout.put("componentAlignment", "Middle_Left");
		outerlayout.put("margin", "false");
		outerlayout.put("spacing", "false");
		outerlayout.put("columnExpandRatio", "");
		outerlayout.put("width", "");
		outerlayout.put("height", "");
		outerlayout.put("enable", "true");
		outerlayout.put("readOnly", "false");
		outerlayout.put("visible", "true");
		List<BaseConfig> outerlayoutList = new ArrayList<BaseConfig>();
		outerlayout.put("outerlayoutList",outerlayoutList);
		BaseConfig queryForm = sub_control_queryForm();
		outerlayoutList.add(queryForm);
		BaseConfig queryBtnLayout = sub_control_queryBtnLayout();
		outerlayoutList.add(queryBtnLayout);
		BaseConfig tableResult = sub_control_tableResult();
		outerlayoutList.add(tableResult);
		return outerlayout;
	}

	private BaseConfig sub_control_comsourceTbl() {
		BaseConfig comsourceTbl = new BaseConfig();
		comsourceTbl.setXmlTag("Table");
		comsourceTbl.put("id", "comsourceTbl");
		comsourceTbl.put("fragmentId", "");
		comsourceTbl.put("type", "Select");
		comsourceTbl.put("caption", "");
		comsourceTbl.put("hightLight", "true");
		comsourceTbl.put("dataset", "dscomSource");
		comsourceTbl.put("width", "300px");
		comsourceTbl.put("height", "300px");
		comsourceTbl.put("enable", "true");
		comsourceTbl.put("readOnly", "false");
		comsourceTbl.put("visible", "true");
		comsourceTbl.put("selectField", "SelectId");
		comsourceTbl.put("reorderingAllowed", "false");
		comsourceTbl.put("collapsingAllowed", "false");
		comsourceTbl.put("expandRatio", "");
		List<BaseConfig> comsourceTblFieldList = new ArrayList<BaseConfig>();
		BaseConfig colSourceName = new BaseConfig();
		colSourceName.setXmlTag("ListGridField");
		colSourceName.put("type", "Base");
		colSourceName.put("name", "source_name");
		colSourceName.put("id", "colSourceName");
		colSourceName.put("field", "source_name");
		colSourceName.put("title", "数据源");
		colSourceName.put("moduleid", "");
		colSourceName.put("bizCode", "");
		colSourceName.put("dropdown", "");
		colSourceName.put("dateFormat", "");
		colSourceName.put("moneyFormat", "");
		colSourceName.put("width", "");
		colSourceName.put("columnAlignment", "Align_left");
		colSourceName.put("enable", "true");
		colSourceName.put("readOnly", "false");
		colSourceName.put("visible", "true");
		colSourceName.put("addUp", "false");
		comsourceTblFieldList.add(colSourceName);
		comsourceTbl.put("tableFieldConfigList",comsourceTblFieldList);
		return comsourceTbl;
	}

	private BaseConfig sub_control_slLayout() {
		BaseConfig slLayout = new BaseConfig();
		slLayout.setXmlTag("Layout");
		slLayout.put("id", "slLayout");
		slLayout.put("fragmentId", "");
		slLayout.put("type", "HFlow");
		slLayout.put("row", "");
		slLayout.put("column", "");
		slLayout.put("labelAlign", "left");
		slLayout.put("componentAlignment", "Top_Left");
		slLayout.put("margin", "false");
		slLayout.put("spacing", "false");
		slLayout.put("columnExpandRatio", "");
		slLayout.put("width", "");
		slLayout.put("height", "");
		slLayout.put("enable", "true");
		slLayout.put("readOnly", "false");
		slLayout.put("visible", "true");
		List<BaseConfig> slLayoutList = new ArrayList<BaseConfig>();
		slLayout.put("slLayoutList",slLayoutList);
		BaseConfig comsourceTbl = sub_control_comsourceTbl();
		slLayoutList.add(comsourceTbl);
		return slLayout;
	}

	private BaseConfig sub_control_btOk() {
		BaseConfig btOk = new BaseConfig();
		btOk.setXmlTag("Button");
		btOk.put("id", "btOk");
		btOk.put("fragmentId", "");
		btOk.put("type", "Base");
		btOk.put("title", "确定");
		btOk.put("width", "");
		btOk.put("height", "");
		btOk.put("componentAlignment", "Middle_Center");
		btOk.put("command", "");
		btOk.put("callbackCommand", "");
		btOk.put("columnStart", "");
		btOk.put("columnEnd", "");
		btOk.put("rowStart", "");
		btOk.put("rowEnd", "");
		btOk.put("enable", "true");
		btOk.put("readOnly", "false");
		btOk.put("visible", "true");
		btOk.put("expandRatio", "");
		btOk.put("shortcut", "");
		return btOk;
	}

	private BaseConfig sub_control_btReturn() {
		BaseConfig btReturn = new BaseConfig();
		btReturn.setXmlTag("Button");
		btReturn.put("id", "btReturn");
		btReturn.put("fragmentId", "");
		btReturn.put("type", "Base");
		btReturn.put("title", "返回");
		btReturn.put("width", "");
		btReturn.put("height", "");
		btReturn.put("componentAlignment", "Middle_Center");
		btReturn.put("command", "");
		btReturn.put("callbackCommand", "");
		btReturn.put("columnStart", "");
		btReturn.put("columnEnd", "");
		btReturn.put("rowStart", "");
		btReturn.put("rowEnd", "");
		btReturn.put("enable", "true");
		btReturn.put("readOnly", "false");
		btReturn.put("visible", "true");
		btReturn.put("expandRatio", "");
		btReturn.put("shortcut", "");
		return btReturn;
	}

	private BaseConfig sub_control_slbtLayout4() {
		BaseConfig slbtLayout4 = new BaseConfig();
		slbtLayout4.setXmlTag("Layout");
		slbtLayout4.put("id", "slbtLayout4");
		slbtLayout4.put("fragmentId", "");
		slbtLayout4.put("type", "HFlow");
		slbtLayout4.put("row", "");
		slbtLayout4.put("column", "");
		slbtLayout4.put("labelAlign", "left");
		slbtLayout4.put("componentAlignment", "Middle_Center");
		slbtLayout4.put("margin", "true");
		slbtLayout4.put("spacing", "false");
		slbtLayout4.put("columnExpandRatio", "");
		slbtLayout4.put("width", "100%");
		slbtLayout4.put("height", "");
		slbtLayout4.put("enable", "true");
		slbtLayout4.put("readOnly", "false");
		slbtLayout4.put("visible", "true");
		List<BaseConfig> slbtLayout4List = new ArrayList<BaseConfig>();
		slbtLayout4.put("slbtLayout4List",slbtLayout4List);
		BaseConfig btOk = sub_control_btOk();
		slbtLayout4List.add(btOk);
		BaseConfig btReturn = sub_control_btReturn();
		slbtLayout4List.add(btReturn);
		return slbtLayout4;
	}

	private BaseConfig sub_control_comsourceWindow() {
		BaseConfig comsourceWindow = new BaseConfig();
		comsourceWindow.setXmlTag("Window");
		comsourceWindow.put("id", "comsourceWindow");
		comsourceWindow.put("fragmentId", "");
		comsourceWindow.put("type", "Sub");
		comsourceWindow.put("title", "待确认的数据源");
		comsourceWindow.put("closeable", "true");
		comsourceWindow.put("draggable", "false");
		comsourceWindow.put("resizeable", "false");
		comsourceWindow.put("shortcut", "");
		comsourceWindow.put("modal", "false");
		comsourceWindow.put("autoCenter", "true");
		comsourceWindow.put("autoSize", "");
		comsourceWindow.put("positionX", "0");
		comsourceWindow.put("positionY", "0");
		comsourceWindow.put("border", "1");
		comsourceWindow.put("width", "");
		comsourceWindow.put("height", "");
		comsourceWindow.put("enable", "true");
		comsourceWindow.put("readOnly", "false");
		comsourceWindow.put("visible", "true");
		List<BaseConfig> comsourceWindowList = new ArrayList<BaseConfig>();
		comsourceWindow.put("comsourceWindowList",comsourceWindowList);
		BaseConfig slLayout = sub_control_slLayout();
		comsourceWindowList.add(slLayout);
		BaseConfig slbtLayout4 = sub_control_slbtLayout4();
		comsourceWindowList.add(slbtLayout4);
		return comsourceWindow;
	}

	private BaseConfig sub_control_uncomsourceTbl() {
		BaseConfig uncomsourceTbl = new BaseConfig();
		uncomsourceTbl.setXmlTag("Table");
		uncomsourceTbl.put("id", "uncomsourceTbl");
		uncomsourceTbl.put("fragmentId", "");
		uncomsourceTbl.put("type", "Select");
		uncomsourceTbl.put("caption", "");
		uncomsourceTbl.put("hightLight", "true");
		uncomsourceTbl.put("dataset", "dsuncomSource");
		uncomsourceTbl.put("width", "300px");
		uncomsourceTbl.put("height", "300px");
		uncomsourceTbl.put("enable", "true");
		uncomsourceTbl.put("readOnly", "false");
		uncomsourceTbl.put("visible", "true");
		uncomsourceTbl.put("selectField", "SelectId");
		uncomsourceTbl.put("reorderingAllowed", "false");
		uncomsourceTbl.put("collapsingAllowed", "false");
		uncomsourceTbl.put("expandRatio", "");
		List<BaseConfig> uncomsourceTblFieldList = new ArrayList<BaseConfig>();
		BaseConfig colunSourceName = new BaseConfig();
		colunSourceName.setXmlTag("ListGridField");
		colunSourceName.put("type", "Base");
		colunSourceName.put("name", "source_name");
		colunSourceName.put("id", "colunSourceName");
		colunSourceName.put("field", "source_name");
		colunSourceName.put("title", "数据源");
		colunSourceName.put("moduleid", "");
		colunSourceName.put("bizCode", "");
		colunSourceName.put("dropdown", "");
		colunSourceName.put("dateFormat", "");
		colunSourceName.put("moneyFormat", "");
		colunSourceName.put("width", "");
		colunSourceName.put("columnAlignment", "Align_left");
		colunSourceName.put("enable", "true");
		colunSourceName.put("readOnly", "false");
		colunSourceName.put("visible", "true");
		colunSourceName.put("addUp", "false");
		uncomsourceTblFieldList.add(colunSourceName);
		uncomsourceTbl.put("tableFieldConfigList",uncomsourceTblFieldList);
		return uncomsourceTbl;
	}

	private BaseConfig sub_control_slLayout2() {
		BaseConfig slLayout2 = new BaseConfig();
		slLayout2.setXmlTag("Layout");
		slLayout2.put("id", "slLayout2");
		slLayout2.put("fragmentId", "");
		slLayout2.put("type", "HFlow");
		slLayout2.put("row", "");
		slLayout2.put("column", "");
		slLayout2.put("labelAlign", "left");
		slLayout2.put("componentAlignment", "Top_Left");
		slLayout2.put("margin", "false");
		slLayout2.put("spacing", "false");
		slLayout2.put("columnExpandRatio", "");
		slLayout2.put("width", "");
		slLayout2.put("height", "");
		slLayout2.put("enable", "true");
		slLayout2.put("readOnly", "false");
		slLayout2.put("visible", "true");
		List<BaseConfig> slLayout2List = new ArrayList<BaseConfig>();
		slLayout2.put("slLayout2List",slLayout2List);
		BaseConfig uncomsourceTbl = sub_control_uncomsourceTbl();
		slLayout2List.add(uncomsourceTbl);
		return slLayout2;
	}

	private BaseConfig sub_control_btOk2() {
		BaseConfig btOk2 = new BaseConfig();
		btOk2.setXmlTag("Button");
		btOk2.put("id", "btOk2");
		btOk2.put("fragmentId", "");
		btOk2.put("type", "Base");
		btOk2.put("title", "确定");
		btOk2.put("width", "");
		btOk2.put("height", "");
		btOk2.put("componentAlignment", "");
		btOk2.put("command", "");
		btOk2.put("callbackCommand", "");
		btOk2.put("columnStart", "");
		btOk2.put("columnEnd", "");
		btOk2.put("rowStart", "");
		btOk2.put("rowEnd", "");
		btOk2.put("enable", "true");
		btOk2.put("readOnly", "false");
		btOk2.put("visible", "true");
		btOk2.put("expandRatio", "");
		btOk2.put("shortcut", "");
		return btOk2;
	}

	private BaseConfig sub_control_btReturn2() {
		BaseConfig btReturn2 = new BaseConfig();
		btReturn2.setXmlTag("Button");
		btReturn2.put("id", "btReturn2");
		btReturn2.put("fragmentId", "");
		btReturn2.put("type", "Base");
		btReturn2.put("title", "返回");
		btReturn2.put("width", "");
		btReturn2.put("height", "");
		btReturn2.put("componentAlignment", "");
		btReturn2.put("command", "");
		btReturn2.put("callbackCommand", "");
		btReturn2.put("columnStart", "");
		btReturn2.put("columnEnd", "");
		btReturn2.put("rowStart", "");
		btReturn2.put("rowEnd", "");
		btReturn2.put("enable", "true");
		btReturn2.put("readOnly", "false");
		btReturn2.put("visible", "true");
		btReturn2.put("expandRatio", "");
		btReturn2.put("shortcut", "");
		return btReturn2;
	}

	private BaseConfig sub_control_slbtLayout2() {
		BaseConfig slbtLayout2 = new BaseConfig();
		slbtLayout2.setXmlTag("Layout");
		slbtLayout2.put("id", "slbtLayout2");
		slbtLayout2.put("fragmentId", "");
		slbtLayout2.put("type", "HFlow");
		slbtLayout2.put("row", "");
		slbtLayout2.put("column", "");
		slbtLayout2.put("labelAlign", "left");
		slbtLayout2.put("componentAlignment", "Middle_Center");
		slbtLayout2.put("margin", "true");
		slbtLayout2.put("spacing", "false");
		slbtLayout2.put("columnExpandRatio", "");
		slbtLayout2.put("width", "100%");
		slbtLayout2.put("height", "");
		slbtLayout2.put("enable", "true");
		slbtLayout2.put("readOnly", "false");
		slbtLayout2.put("visible", "true");
		List<BaseConfig> slbtLayout2List = new ArrayList<BaseConfig>();
		slbtLayout2.put("slbtLayout2List",slbtLayout2List);
		BaseConfig btOk2 = sub_control_btOk2();
		slbtLayout2List.add(btOk2);
		BaseConfig btReturn2 = sub_control_btReturn2();
		slbtLayout2List.add(btReturn2);
		return slbtLayout2;
	}

	private BaseConfig sub_control_uncomsourceWindow() {
		BaseConfig uncomsourceWindow = new BaseConfig();
		uncomsourceWindow.setXmlTag("Window");
		uncomsourceWindow.put("id", "uncomsourceWindow");
		uncomsourceWindow.put("fragmentId", "");
		uncomsourceWindow.put("type", "Sub");
		uncomsourceWindow.put("title", "取消确认的数据源");
		uncomsourceWindow.put("closeable", "true");
		uncomsourceWindow.put("draggable", "false");
		uncomsourceWindow.put("resizeable", "false");
		uncomsourceWindow.put("shortcut", "");
		uncomsourceWindow.put("modal", "false");
		uncomsourceWindow.put("autoCenter", "true");
		uncomsourceWindow.put("autoSize", "");
		uncomsourceWindow.put("positionX", "0");
		uncomsourceWindow.put("positionY", "0");
		uncomsourceWindow.put("border", "1");
		uncomsourceWindow.put("width", "");
		uncomsourceWindow.put("height", "");
		uncomsourceWindow.put("enable", "true");
		uncomsourceWindow.put("readOnly", "false");
		uncomsourceWindow.put("visible", "true");
		List<BaseConfig> uncomsourceWindowList = new ArrayList<BaseConfig>();
		uncomsourceWindow.put("uncomsourceWindowList",uncomsourceWindowList);
		BaseConfig slLayout2 = sub_control_slLayout2();
		uncomsourceWindowList.add(slLayout2);
		BaseConfig slbtLayout2 = sub_control_slbtLayout2();
		uncomsourceWindowList.add(slbtLayout2);
		return uncomsourceWindow;
	}

	@Override
	protected void afterInitControls() {
		super.afterInitControls();
		dsQuery = (ViewDataset)this.getDatasets().get("dsQuery");
		dsResult = (ViewDataset)this.getDatasets().get("dsResult");
		dsDepartList = (ViewDataset)this.getDatasets().get("dsDepartList");
		dscomSource = (ViewDataset)this.getDatasets().get("dscomSource");
		dsuncomSource = (ViewDataset)this.getDatasets().get("dsuncomSource");
		queryRuleCmd = (DatasetCommand)this.getCommands().get("queryRuleCmd");
		AnalysisExecCmd = (DatasetCommand)this.getCommands().get("AnalysisExecCmd");
		queryDepartCmd = (DatasetCommand)this.getCommands().get("queryDepartCmd");
		queryDefaultCmd = (DatasetCommand)this.getCommands().get("queryDefaultCmd");
		checkCmd = (DatasetCommand)this.getCommands().get("checkCmd");
		comfirmQryCmd = (DatasetCommand)this.getCommands().get("comfirmQryCmd");
		uncomfirmQryCmd = (DatasetCommand)this.getCommands().get("uncomfirmQryCmd");
		comfirmCmd = (DatasetCommand)this.getCommands().get("comfirmCmd");
		uncomfirmCmd = (DatasetCommand)this.getCommands().get("uncomfirmCmd");
		queryForm = (UDynamicForm)this.getControls().get("queryForm");
		editorWORK_DATE = (UDateItem)((UDynamicForm)this.getControls().get("queryForm")).getField("WORK_DATE");
		editorDEPART_ID = (USelectItem)((UDynamicForm)this.getControls().get("queryForm")).getField("DEPART_ID");
		btnQuery = (UButton)this.getControls().get("btnQuery");
		btnExec = (UButton)this.getControls().get("btnExec");
		btconfirm = (UButton)this.getControls().get("btconfirm");
		btcancel = (UButton)this.getControls().get("btcancel");
		tableResult = (UTable)this.getControls().get("tableResult");
		comsourceWindow = (UWindow)this.getControls().get("comsourceWindow");
		comsourceTbl = (UTable)this.getControls().get("comsourceTbl");
		btOk = (UButton)this.getControls().get("btOk");
		btReturn = (UButton)this.getControls().get("btReturn");
		uncomsourceWindow = (UWindow)this.getControls().get("uncomsourceWindow");
		uncomsourceTbl = (UTable)this.getControls().get("uncomsourceTbl");
		btOk2 = (UButton)this.getControls().get("btOk2");
		btReturn2 = (UButton)this.getControls().get("btReturn2");
		return;
	}
}