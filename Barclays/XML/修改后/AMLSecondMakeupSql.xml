<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper  
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"  
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.aif.rpt.biz.aml.processing.server.AMLSecondMakeupSql">

	<!-- AML第二次补录信息的大额补录查询 -->
	<select id="selectAMLSecondMakeup" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		${pageBegin}
		select
		AML_ANALYSISRESULT.WORK_DATE,
		AML_DATASOURCE.REF_NO,
		AML_DATASOURCE.ORIG_REF_NO,
		AML_DATASOURCE.DEPART_ID,
		AML_DATASOURCE.SEQ_NO,
		AML_DATASOURCE.DEPART_NAME,
		AML_DATASOURCE.DEPART_TYPE,
		AML_DATASOURCE.DEPART_AREACODE,
		AML_DATASOURCE.CLIENT_ID,
		AML_DATASOURCE.PCODE,
		AML_DATASOURCE.CLIENT_NAME,
		AML_DATASOURCE.CLIENT_TYPE,
		AML_DATASOURCE.CLIENT_IC_TYPE,
		AML_DATASOURCE.CLIENT_IC_TYPE_MEMO,
		AML_DATASOURCE.CLIENT_IC_NO,
		AML_DATASOURCE.CLIENT_NATIONALITY,
		AML_DATASOURCE.PHONE,
		AML_DATASOURCE.ADDRESS,
		AML_DATASOURCE.OTHER_CONTACT,
		AML_DATASOURCE.INDUSTRY_TYPE,
		AML_DATASOURCE.REGISTERED_CAPITAL,
		AML_DATASOURCE.REP_NAME,
		AML_DATASOURCE.REP_IC_TYPE,
		AML_DATASOURCE.REP_IC_TYPE_MEMO,
		AML_DATASOURCE.REP_IC_NO,
		AML_DATASOURCE.AGENT_NAME,
		AML_DATASOURCE.AGENT_IC_NO,
		AML_DATASOURCE.AGENT_IC_TYPE,
		AML_DATASOURCE.AGENT_IC_TYPE_MEMO,
		AML_DATASOURCE.AGENT_NATIONALITY,
		AML_DATASOURCE.ACCT_ID,
		AML_DATASOURCE.ACCT_TYPE,
		AML_DATASOURCE.PBOC_NUM_ACCT,
		substring(AML_DATASOURCE.ACCT_OPEN_TIME,1,8) AS
		ACCT_OPEN_TIME,
		substring(AML_DATASOURCE.ACCT_CLOSE_TIME,1,8) AS
		ACCT_CLOSE_TIME,
		AML_DATASOURCE.TRADE_DATE,
		AML_DATASOURCE.TRADE_TIME,
		AML_DATASOURCE.VALUE_DATE,
		AML_DATASOURCE.TRADE_VENUE_COUNTRY,
		AML_DATASOURCE.TRADE_VENUE_REGION,
		AML_DATASOURCE.TRADE_MODE,
		AML_DATASOURCE.DEBIT_CREDIT,
		AML_DATASOURCE.TRADE_COUNTRY,
		AML_DATASOURCE.TRADE_REGION,
		AML_DATASOURCE.TRADE_CODE,
		AML_DATASOURCE.FUND_USAGE,
		AML_DATASOURCE.CURRENCY,
		AML_DATASOURCE.AMT,
		AML_DATASOURCE.DOLLAR_AMT,
		AML_DATASOURCE.CTPY_FI_CODE,
		AML_DATASOURCE.CTPY_FI_PCODE,
		AML_DATASOURCE.CTPY_FI_NAME,
		AML_DATASOURCE.CTPY_FI_TYPE,
		AML_DATASOURCE.CTPY_FI_COUNTRY,
		AML_DATASOURCE.CTPY_FI_REGION_CODE,
		AML_DATASOURCE.CTPY_NAME,
		AML_DATASOURCE.CTPY_TYPE,
		AML_DATASOURCE.CTPY_NATIONALITY,
		AML_DATASOURCE.CTPY_IC_CODE,
		AML_DATASOURCE.CTPY_IC_TYPE,
		AML_DATASOURCE.CTPY_IC_TYPE_MEMO,
		AML_DATASOURCE.CTPY_ACCT_ID,
		AML_DATASOURCE.CTPY_ACCT_TYPE,
		AML_DATASOURCE.TRADE_TYPE,
		AML_DATASOURCE.REPAYMENT_DATE,
		AML_DATASOURCE.LOAN_REPAYMENT_TYPE,
		AML_DATASOURCE.IS_SWAP,
		AML_DATASOURCE.SWAP_CODE,
		AML_DATASOURCE.CLIENT_IC_OTHER_TYPE,
		AML_DATASOURCE.BANK_RELATIONSHIP,
		AML_DATASOURCE.REP_IC_OTHER_TYPE,
		AML_DATASOURCE.AGENT_IC_OTHER_TYPE,
		AML_DATASOURCE.REC_PAY_TYPE,
		AML_DATASOURCE.REC_PAY_NO,
		AML_DATASOURCE.TRADE_UNCOUNTER_TYPE,
		AML_DATASOURCE.TRADE_UNCOUNTER_OTHER_TYPE,
		AML_DATASOURCE.TRADE_UNCOUNTER_NO,
		AML_DATASOURCE.TRADE_BPTC,
		AML_DATASOURCE.RMB_AMT,
		AML_DATASOURCE.REMARK1,
		AML_DATASOURCE.REMARK2,
		AML_ANALYSISRESULT.MAKE_STATUS,
		AML_ANALYSISRESULT.MAKER,
		AML_ANALYSISRESULT.MAKE_TIME,
		AML_ANALYSISRESULT.CHECK_STATUS,
		AML_ANALYSISRESULT.CHECKER,
		AML_ANALYSISRESULT.CHECK_TIME,
		AML_ANALYSISRESULT.CHECK_INFO,
		AML_ANALYSISRESULT.IS_DEL,
		AML_ANALYSISRESULT.DEL_INFO,
		AML_DATASOURCE.STATUS,
		AML_ANALYSISRESULT.BATCH_NO,
		AML_ANALYSISRESULT.RULE_CODE,
		AML_ANALYSISRESULT.RULE_TYPE,
		AML_ANALYSISRESULT.UNIT_NAME,
		AML_ANALYSISRESULT.UNIT_CODE,
		AML_ANALYSISRESULT.RELATION_TYPE,
		AML_ANALYSISRESULT.REPORT_DATE,
		AML_ANALYSISRESULT.SHADINESS_LEVEL,
		AML_ANALYSISRESULT.SHADINESS_DESC,
		AML_ANALYSISRESULT.ACTION_MEASURE,
		AML_ANALYSISRESULT.ORIG_BATCH_NO,
		AML_ANALYSISRESULT.ORIG_WORK_DATE,
		AML_ANALYSISRESULT.ORIG_CLIENT_ID,
		AML_ANALYSISRESULT.ORIG_TRADE_DATE,
		AML_ANALYSISRESULT.ORIG_RULE_CODE,
		AML_ANALYSISRESULT.REPORT_TYPE,
		AML_ANALYSISRESULT.IF_RPT,
		AML_ANALYSISRESULT.RPT_STATUS,
		AML_ANALYSISRESULT.FINAL_RPT_STATUS,
		AML_ANALYSISRESULT.RET_MSE,
		AML_ANALYSISRESULT.REPORTER,
		AML_ANALYSISRESULT.RPT_FILE,
		AML_ANALYSISRESULT.RPT_ZIP,
		AML_ANALYSISRESULT.SERIAL_NUM_1,
		AML_ANALYSISRESULT.SERIAL_NUM_2,
		AML_ANALYSISRESULT.SERIAL_NUM_3,
		TB_ANALYSISRULES.RULE_NOTES,
		TB_ANALYSISRULES.RULE_ANALYSE_METHOD,
		CASE WHEN
		AML_DATASOURCE.TRADE_REGION='000000' or len(TRADE_REGION) = 2 THEN
		AML_DATASOURCE.TRADE_COUNTRY ELSE AML_DATASOURCE.TRADE_REGION END WHITHER,
		AML_DATASOURCE.IS_CROSSBORDER
		from TB_ANALYSISRULES, AML_ANALYSISRESULT, AML_DATASOURCE
		where
		AML_ANALYSISRESULT.REF_NO = AML_DATASOURCE.REF_NO
		and
		AML_ANALYSISRESULT.DEPART_ID = AML_DATASOURCE.DEPART_ID
		and
		AML_ANALYSISRESULT.RULE_CODE= TB_ANALYSISRULES.RULE_CODE
		and
		AML_ANALYSISRESULT.RULE_TYPE = TB_ANALYSISRULES.RULE_TYPE
		and
		AML_ANALYSISRESULT.RULE_TYPE='01'
		and 1=1
		<if test="WORK_DATE!=null  &amp;&amp; !&quot;&quot;.equals(WORK_DATE.trim())">
			and AML_ANALYSISRESULT.WORK_DATE like '%'+#{WORK_DATE}+'%'
		</if>
		<if test="MAKE_STATUS!=null  &amp;&amp; !&quot;&quot;.equals(MAKE_STATUS.trim())">
			and AML_ANALYSISRESULT.MAKE_STATUS like '%'+#{MAKE_STATUS}+'%'
		</if>
		<if test="RPT_STATUS!=null  &amp;&amp; !&quot;&quot;.equals(RPT_STATUS.trim())">
			and AML_ANALYSISRESULT.RPT_STATUS like '%'+#{RPT_STATUS}+'%'
		</if>
		<if test="REPORT_TYPE!=null  &amp;&amp; !&quot;&quot;.equals(REPORT_TYPE.trim())">
			and AML_ANALYSISRESULT.REPORT_TYPE like '%'+#{REPORT_TYPE}+'%'
		</if>
		<if test="REF_NO!=null  &amp;&amp; !&quot;&quot;.equals(REF_NO.trim())">
			and AML_ANALYSISRESULT.REF_NO like '%'+#{REF_NO}+'%'
		</if>
		<if test="RULE_CODE!=null  &amp;&amp; !&quot;&quot;.equals(RULE_CODE.trim())">
			and AML_ANALYSISRESULT.RULE_CODE like '%'+#{RULE_CODE}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
		${pageEnd}
	</select>

	<select id="selectAMLSecondMakeup_totalCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*)
		from TB_ANALYSISRULES, AML_ANALYSISRESULT, AML_DATASOURCE
		where AML_ANALYSISRESULT.REF_NO = AML_DATASOURCE.REF_NO
		and
		AML_ANALYSISRESULT.DEPART_ID = AML_DATASOURCE.DEPART_ID
		and
		AML_ANALYSISRESULT.RULE_CODE= TB_ANALYSISRULES.RULE_CODE
		and AML_ANALYSISRESULT.RULE_TYPE = TB_ANALYSISRULES.RULE_TYPE
		and
		AML_ANALYSISRESULT.RULE_TYPE='01'
		and 1=1
		<if test="WORK_DATE!=null  &amp;&amp; !&quot;&quot;.equals(WORK_DATE.trim())">
			and AML_ANALYSISRESULT.WORK_DATE like '%'+#{WORK_DATE}+'%'
		</if>
		<if test="MAKE_STATUS!=null  &amp;&amp; !&quot;&quot;.equals(MAKE_STATUS.trim())">
			and AML_ANALYSISRESULT.MAKE_STATUS like '%'+#{MAKE_STATUS}+'%'
		</if>
		<if test="RPT_STATUS!=null  &amp;&amp; !&quot;&quot;.equals(RPT_STATUS.trim())">
			and AML_ANALYSISRESULT.RPT_STATUS like '%'+#{RPT_STATUS}+'%'
		</if>
		<if test="REPORT_TYPE!=null  &amp;&amp; !&quot;&quot;.equals(REPORT_TYPE.trim())">
			and AML_ANALYSISRESULT.REPORT_TYPE like '%'+#{REPORT_TYPE}+'%'
		</if>
		<if test="REF_NO!=null  &amp;&amp; !&quot;&quot;.equals(REF_NO.trim())">
			and AML_ANALYSISRESULT.REF_NO like '%'+#{REF_NO}+'%'
		</if>
		<if test="RULE_CODE!=null  &amp;&amp; !&quot;&quot;.equals(RULE_CODE.trim())">
			and AML_ANALYSISRESULT.RULE_CODE like '%'+#{RULE_CODE}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
	</select>

	<!-- AML第二次补录信息的可疑补录查询 -->
	<select id="selectAMLSecondMakeupSuspicious" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		${pageBegin}
		select
		AML_ANALYSISRESULT.WORK_DATE,
		AML_DATASOURCE.REF_NO,
		AML_DATASOURCE.ORIG_REF_NO,
		AML_DATASOURCE.DEPART_ID,
		AML_DATASOURCE.SEQ_NO,
		AML_DATASOURCE.DEPART_NAME,
		AML_DATASOURCE.DEPART_TYPE,
		AML_DATASOURCE.DEPART_AREACODE,
		AML_DATASOURCE.CLIENT_ID,
		AML_DATASOURCE.PCODE,
		AML_DATASOURCE.CLIENT_NAME,
		AML_DATASOURCE.CLIENT_TYPE,
		AML_DATASOURCE.CLIENT_IC_TYPE,
		AML_DATASOURCE.CLIENT_IC_TYPE_MEMO,
		AML_DATASOURCE.CLIENT_IC_NO,
		AML_DATASOURCE.CLIENT_NATIONALITY,
		AML_DATASOURCE.PHONE,
		AML_DATASOURCE.ADDRESS,
		AML_DATASOURCE.OTHER_CONTACT,
		AML_DATASOURCE.INDUSTRY_TYPE,
		AML_DATASOURCE.REGISTERED_CAPITAL,
		AML_DATASOURCE.REP_NAME,
		AML_DATASOURCE.REP_IC_TYPE,
		AML_DATASOURCE.REP_IC_TYPE_MEMO,
		AML_DATASOURCE.REP_IC_NO,
		AML_DATASOURCE.AGENT_NAME,
		AML_DATASOURCE.AGENT_IC_NO,
		AML_DATASOURCE.AGENT_IC_TYPE,
		AML_DATASOURCE.AGENT_IC_TYPE_MEMO,
		AML_DATASOURCE.AGENT_NATIONALITY,
		AML_DATASOURCE.ACCT_ID,
		AML_DATASOURCE.ACCT_TYPE,
	    AML_DATASOURCE.PBOC_NUM_ACCT,
		substring(AML_DATASOURCE.ACCT_OPEN_TIME,1,8) AS
		ACCT_OPEN_TIME,
		substring(AML_DATASOURCE.ACCT_CLOSE_TIME,1,8) AS
		ACCT_CLOSE_TIME,
		AML_DATASOURCE.TRADE_DATE,
		AML_DATASOURCE.TRADE_TIME,
		AML_DATASOURCE.VALUE_DATE,
		AML_DATASOURCE.TRADE_VENUE_COUNTRY,
		AML_DATASOURCE.TRADE_VENUE_REGION,
		AML_DATASOURCE.TRADE_MODE,
		AML_DATASOURCE.DEBIT_CREDIT,
		AML_DATASOURCE.TRADE_COUNTRY,
		AML_DATASOURCE.TRADE_REGION,
		AML_DATASOURCE.TRADE_CODE,
		AML_DATASOURCE.FUND_USAGE,
		AML_DATASOURCE.CURRENCY,
		AML_DATASOURCE.AMT,
		AML_DATASOURCE.DOLLAR_AMT,
		AML_DATASOURCE.CTPY_FI_CODE,
		AML_DATASOURCE.CTPY_FI_PCODE,
		AML_DATASOURCE.CTPY_FI_NAME,
		AML_DATASOURCE.CTPY_FI_TYPE,
		AML_DATASOURCE.CTPY_FI_COUNTRY,
		AML_DATASOURCE.CTPY_FI_REGION_CODE,
		AML_DATASOURCE.CTPY_NAME,
		AML_DATASOURCE.CTPY_TYPE,
		AML_DATASOURCE.CTPY_NATIONALITY,
		AML_DATASOURCE.CTPY_IC_CODE,
		AML_DATASOURCE.CTPY_IC_TYPE,
		AML_DATASOURCE.CTPY_IC_TYPE_MEMO,
		AML_DATASOURCE.CTPY_ACCT_ID,
		AML_DATASOURCE.CTPY_ACCT_TYPE,
		AML_DATASOURCE.TRADE_TYPE,
		AML_DATASOURCE.REPAYMENT_DATE,
		AML_DATASOURCE.LOAN_REPAYMENT_TYPE,
		AML_DATASOURCE.IS_SWAP,
		AML_DATASOURCE.SWAP_CODE,
		AML_DATASOURCE.CLIENT_IC_OTHER_TYPE,
		AML_DATASOURCE.BANK_RELATIONSHIP,
		AML_DATASOURCE.REP_IC_OTHER_TYPE,
		AML_DATASOURCE.AGENT_IC_OTHER_TYPE,
		AML_DATASOURCE.REC_PAY_TYPE,
		AML_DATASOURCE.REC_PAY_NO,
		AML_DATASOURCE.TRADE_UNCOUNTER_TYPE,
		AML_DATASOURCE.TRADE_UNCOUNTER_OTHER_TYPE,
		AML_DATASOURCE.TRADE_UNCOUNTER_NO,
		AML_DATASOURCE.TRADE_BPTC,
		AML_DATASOURCE.RMB_AMT,
		AML_DATASOURCE.REMARK1,
		AML_DATASOURCE.REMARK2,
		AML_ANALYSISRESULT.MAKE_STATUS,
		AML_ANALYSISRESULT.MAKER,
		AML_ANALYSISRESULT.MAKE_TIME,
		AML_ANALYSISRESULT.CHECK_STATUS,
		AML_ANALYSISRESULT.CHECKER,
		AML_ANALYSISRESULT.CHECK_TIME,
		AML_ANALYSISRESULT.CHECK_INFO,
		AML_ANALYSISRESULT.IS_DEL,
		AML_ANALYSISRESULT.DEL_INFO,
		AML_DATASOURCE.STATUS,
		AML_ANALYSISRESULT.BATCH_NO,
		AML_ANALYSISRESULT.RULE_CODE,
		AML_ANALYSISRESULT.RULE_TYPE,
		AML_ANALYSISRESULT.UNIT_NAME,
		AML_ANALYSISRESULT.UNIT_CODE,
		AML_ANALYSISRESULT.REPORT_DATE,
		AML_ANALYSISRESULT.SHADINESS_LEVEL,
		AML_ANALYSISRESULT.SHADINESS_DESC,
		AML_ANALYSISRESULT.ACTION_MEASURE,
		AML_ANALYSISRESULT.ORIG_BATCH_NO,
		AML_ANALYSISRESULT.ORIG_WORK_DATE,
		AML_ANALYSISRESULT.ORIG_CLIENT_ID,
		AML_ANALYSISRESULT.ORIG_TRADE_DATE,
		AML_ANALYSISRESULT.ORIG_RULE_CODE,
		AML_ANALYSISRESULT.REPORT_TYPE,
		AML_ANALYSISRESULT.IF_RPT,
		AML_ANALYSISRESULT.RPT_STATUS,
		AML_ANALYSISRESULT.FINAL_RPT_STATUS,
		AML_ANALYSISRESULT.RET_MSE,
		AML_ANALYSISRESULT.REPORTER,
		AML_ANALYSISRESULT.RPT_FILE,
		AML_ANALYSISRESULT.RPT_ZIP,
		AML_ANALYSISRESULT.SERIAL_NUM_1,
		AML_ANALYSISRESULT.SERIAL_NUM_2,
		AML_ANALYSISRESULT.SERIAL_NUM_3,
		AML_ANALYSISRESULT.IF_DELAY_RPT,
		AML_ANALYSISRESULT.DELAY_DATE,
		AML_ANALYSISRESULT.BS_DETR,
		AML_ANALYSISRESULT.BS_DORP,
		AML_ANALYSISRESULT.BS_ODRP,
		AML_ANALYSISRESULT.BS_TPTR,
		AML_ANALYSISRESULT.BS_OTPR,
		AML_ANALYSISRESULT.BS_STCB,
		AML_ANALYSISRESULT.BS_AOSP,
		AML_ANALYSISRESULT.BS_TOSC,
		AML_ANALYSISRESULT.BS_MIRS,
		TB_ANALYSISRULES.RULE_NOTES,
		TB_ANALYSISRULES.RULE_ANALYSE_METHOD,
		CASE WHEN
		AML_DATASOURCE.TRADE_REGION='000000' or len(TRADE_REGION) = 2 THEN
		AML_DATASOURCE.TRADE_COUNTRY ELSE AML_DATASOURCE.TRADE_REGION END WHITHER,
		AML_DATASOURCE.IS_CROSSBORDER
		from TB_ANALYSISRULES, AML_ANALYSISRESULT, AML_DATASOURCE
		where
		AML_ANALYSISRESULT.REF_NO = AML_DATASOURCE.REF_NO
		and
		AML_ANALYSISRESULT.DEPART_ID = AML_DATASOURCE.DEPART_ID
		and
		AML_ANALYSISRESULT.RULE_CODE= TB_ANALYSISRULES.RULE_CODE
		and
		AML_ANALYSISRESULT.RULE_TYPE = TB_ANALYSISRULES.RULE_TYPE
		and
		AML_ANALYSISRESULT.RULE_TYPE='02'
		and 1=1
		<if test="WORK_DATE!=null  &amp;&amp; !&quot;&quot;.equals(WORK_DATE.trim())">
			and AML_ANALYSISRESULT.WORK_DATE like '%'+#{WORK_DATE}+'%'
		</if>
		<if test="MAKE_STATUS!=null  &amp;&amp; !&quot;&quot;.equals(MAKE_STATUS.trim())">
			and AML_ANALYSISRESULT.MAKE_STATUS like '%'+#{MAKE_STATUS}+'%'
		</if>
		<if test="RPT_STATUS!=null  &amp;&amp; !&quot;&quot;.equals(RPT_STATUS.trim())">
			and AML_ANALYSISRESULT.RPT_STATUS like '%'+#{RPT_STATUS}+'%'
		</if>
		<if test="REPORT_TYPE!=null  &amp;&amp; !&quot;&quot;.equals(REPORT_TYPE.trim())">
			and AML_ANALYSISRESULT.REPORT_TYPE like '%'+#{REPORT_TYPE}+'%'
		</if>
		<if test="REF_NO!=null  &amp;&amp; !&quot;&quot;.equals(REF_NO.trim())">
			and AML_ANALYSISRESULT.REF_NO like '%'+#{REF_NO}+'%'
		</if>
		<if test="RULE_CODE!=null  &amp;&amp; !&quot;&quot;.equals(RULE_CODE.trim())">
			and AML_ANALYSISRESULT.RULE_CODE like '%'+#{RULE_CODE}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
		${pageEnd}
	</select>

	<select id="selectAMLSecondMakeupSuspicious_totalCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*)
		from TB_ANALYSISRULES, AML_ANALYSISRESULT, AML_DATASOURCE
		where
		AML_ANALYSISRESULT.REF_NO = AML_DATASOURCE.REF_NO
		and
		AML_ANALYSISRESULT.DEPART_ID = AML_DATASOURCE.DEPART_ID
		and
		AML_ANALYSISRESULT.RULE_CODE= TB_ANALYSISRULES.RULE_CODE
		and AML_ANALYSISRESULT.RULE_TYPE = TB_ANALYSISRULES.RULE_TYPE
		and
		AML_ANALYSISRESULT.RULE_TYPE='02'
		and 1=1
		<if test="WORK_DATE!=null  &amp;&amp; !&quot;&quot;.equals(WORK_DATE.trim())">
			and AML_ANALYSISRESULT.WORK_DATE like '%'+#{WORK_DATE}+'%'
		</if>
		<if test="MAKE_STATUS!=null  &amp;&amp; !&quot;&quot;.equals(MAKE_STATUS.trim())">
			and AML_ANALYSISRESULT.MAKE_STATUS like '%'+#{MAKE_STATUS}+'%'
		</if>
		<if test="RPT_STATUS!=null  &amp;&amp; !&quot;&quot;.equals(RPT_STATUS.trim())">
			and AML_ANALYSISRESULT.RPT_STATUS like '%'+#{RPT_STATUS}+'%'
		</if>
		<if test="REPORT_TYPE!=null  &amp;&amp; !&quot;&quot;.equals(REPORT_TYPE.trim())">
			and AML_ANALYSISRESULT.REPORT_TYPE like '%'+#{REPORT_TYPE}+'%'
		</if>
		<if test="REF_NO!=null  &amp;&amp; !&quot;&quot;.equals(REF_NO.trim())">
			and AML_ANALYSISRESULT.REF_NO like '%'+#{REF_NO}+'%'
		</if>
		<if test="RULE_CODE!=null  &amp;&amp; !&quot;&quot;.equals(RULE_CODE.trim())">
			and AML_ANALYSISRESULT.RULE_CODE like '%'+#{RULE_CODE}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
	</select>

	<!-- AML第二次补录信息的RefNo大额补录查询 -->
	<select id="selectRefNo01" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select
		AML_ANALYSISRESULT.WORK_DATE,
		AML_DATASOURCE.REF_NO,
		AML_DATASOURCE.ORIG_REF_NO,
		AML_DATASOURCE.DEPART_ID,
		AML_DATASOURCE.SEQ_NO,
		AML_DATASOURCE.DEPART_NAME,
		AML_DATASOURCE.DEPART_TYPE,
		AML_DATASOURCE.DEPART_AREACODE,
		AML_DATASOURCE.CLIENT_ID,
		AML_DATASOURCE.PCODE,
		AML_DATASOURCE.CLIENT_NAME,
		AML_DATASOURCE.CLIENT_TYPE,
		AML_DATASOURCE.CLIENT_IC_TYPE,
		AML_DATASOURCE.CLIENT_IC_TYPE_MEMO,
		AML_DATASOURCE.CLIENT_IC_NO,
		AML_DATASOURCE.CLIENT_NATIONALITY,
		AML_DATASOURCE.PHONE,
		AML_DATASOURCE.ADDRESS,
		AML_DATASOURCE.OTHER_CONTACT,
		AML_DATASOURCE.INDUSTRY_TYPE,
		AML_DATASOURCE.REGISTERED_CAPITAL,
		AML_DATASOURCE.REP_NAME,
		AML_DATASOURCE.REP_IC_TYPE,
		AML_DATASOURCE.REP_IC_TYPE_MEMO,
		AML_DATASOURCE.REP_IC_NO,
		AML_DATASOURCE.AGENT_NAME,
		AML_DATASOURCE.AGENT_IC_NO,
		AML_DATASOURCE.AGENT_IC_TYPE,
		AML_DATASOURCE.AGENT_IC_TYPE_MEMO,
		AML_DATASOURCE.AGENT_NATIONALITY,
		AML_DATASOURCE.ACCT_ID,
		AML_DATASOURCE.ACCT_TYPE,
	    AML_DATASOURCE.PBOC_NUM_ACCT,
		substring(AML_DATASOURCE.ACCT_OPEN_TIME,1,8) AS
		ACCT_OPEN_TIME,
		substring(AML_DATASOURCE.ACCT_CLOSE_TIME,1,8) AS
		ACCT_CLOSE_TIME,
		AML_DATASOURCE.TRADE_DATE,
		AML_DATASOURCE.TRADE_TIME,
		AML_DATASOURCE.VALUE_DATE,
		AML_DATASOURCE.TRADE_VENUE_COUNTRY,
		AML_DATASOURCE.TRADE_VENUE_REGION,
		AML_DATASOURCE.TRADE_MODE,
		AML_DATASOURCE.DEBIT_CREDIT,
		AML_DATASOURCE.TRADE_COUNTRY,
		AML_DATASOURCE.TRADE_REGION,
		AML_DATASOURCE.TRADE_CODE,
		AML_DATASOURCE.FUND_USAGE,
		AML_DATASOURCE.CURRENCY,
		AML_DATASOURCE.AMT,
		AML_DATASOURCE.DOLLAR_AMT,
		AML_DATASOURCE.CTPY_FI_CODE,
		AML_DATASOURCE.CTPY_FI_PCODE,
		AML_DATASOURCE.CTPY_FI_NAME,
		AML_DATASOURCE.CTPY_FI_TYPE,
		AML_DATASOURCE.CTPY_FI_COUNTRY,
		AML_DATASOURCE.CTPY_FI_REGION_CODE,
		AML_DATASOURCE.CTPY_NAME,
		AML_DATASOURCE.CTPY_TYPE,
		AML_DATASOURCE.CTPY_NATIONALITY,
		AML_DATASOURCE.CTPY_IC_CODE,
		AML_DATASOURCE.CTPY_IC_TYPE,
		AML_DATASOURCE.CTPY_IC_TYPE_MEMO,
		AML_DATASOURCE.CTPY_ACCT_ID,
		AML_DATASOURCE.CTPY_ACCT_TYPE,
		AML_DATASOURCE.TRADE_TYPE,
		AML_DATASOURCE.REPAYMENT_DATE,
		AML_DATASOURCE.LOAN_REPAYMENT_TYPE,
		AML_DATASOURCE.IS_SWAP,
		AML_DATASOURCE.SWAP_CODE,
		AML_ANALYSISRESULT.MAKE_STATUS,
		AML_ANALYSISRESULT.MAKER,
		AML_ANALYSISRESULT.MAKE_TIME,
		AML_ANALYSISRESULT.CHECK_STATUS,
		AML_ANALYSISRESULT.CHECKER,
		AML_ANALYSISRESULT.CHECK_TIME,
		AML_ANALYSISRESULT.CHECK_INFO,
		AML_ANALYSISRESULT.IS_DEL,
		AML_ANALYSISRESULT.DEL_INFO,
		AML_DATASOURCE.STATUS,
		AML_ANALYSISRESULT.BATCH_NO,
		AML_ANALYSISRESULT.RULE_CODE,
		AML_ANALYSISRESULT.RULE_TYPE,
		AML_ANALYSISRESULT.UNIT_NAME,
		AML_ANALYSISRESULT.UNIT_CODE,
		AML_ANALYSISRESULT.RELATION_TYPE,
		AML_ANALYSISRESULT.REPORT_DATE,
		AML_ANALYSISRESULT.SHADINESS_LEVEL,
		AML_ANALYSISRESULT.SHADINESS_DESC,
		AML_ANALYSISRESULT.ACTION_MEASURE,
		AML_ANALYSISRESULT.ORIG_BATCH_NO,
		AML_ANALYSISRESULT.ORIG_WORK_DATE,
		AML_ANALYSISRESULT.ORIG_CLIENT_ID,
		AML_ANALYSISRESULT.ORIG_TRADE_DATE,
		AML_ANALYSISRESULT.ORIG_RULE_CODE,
		AML_ANALYSISRESULT.REPORT_TYPE,
		AML_ANALYSISRESULT.IF_RPT,
		AML_ANALYSISRESULT.RPT_STATUS,
		AML_ANALYSISRESULT.FINAL_RPT_STATUS,
		AML_ANALYSISRESULT.RET_MSE,
		AML_ANALYSISRESULT.REPORTER,
		AML_ANALYSISRESULT.RPT_FILE,
		AML_ANALYSISRESULT.RPT_ZIP,
		AML_ANALYSISRESULT.SERIAL_NUM_1,
		AML_ANALYSISRESULT.SERIAL_NUM_2,
		AML_ANALYSISRESULT.SERIAL_NUM_3,
		TB_ANALYSISRULES.RULE_NOTES,
		TB_ANALYSISRULES.RULE_ANALYSE_METHOD,
		CASE WHEN
		AML_DATASOURCE.TRADE_REGION='000000' THEN
		AML_DATASOURCE.TRADE_COUNTRY ELSE
		AML_DATASOURCE.TRADE_REGION END WHITHER,
		AML_DATASOURCE.IS_CROSSBORDER
		from TB_ANALYSISRULES, AML_ANALYSISRESULT, AML_DATASOURCE
		where
		AML_ANALYSISRESULT.REF_NO = AML_DATASOURCE.REF_NO
		and
		AML_ANALYSISRESULT.DEPART_ID =
		AML_DATASOURCE.DEPART_ID
		and
		AML_ANALYSISRESULT.RULE_CODE= TB_ANALYSISRULES.RULE_CODE
		and
		AML_ANALYSISRESULT.RULE_TYPE = TB_ANALYSISRULES.RULE_TYPE
		and
		AML_ANALYSISRESULT.RULE_TYPE='01'
		and
		AML_ANALYSISRESULT.REF_NO =#{REF_NO}
		and AML_ANALYSISRESULT.WORK_DATE =#{WORK_DATE}
	</select>
<!-- add by pw -->
	<!-- AML第二次补录信息的RefNo大额补录查询 -->
	<select id="selectRefNo00" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select
		TB_BRANCH.DEPART_NAME as UNIT_NAME, 
		TB_BRANCH.AML_CODE as UNIT_CODE,
		AML_DATASOURCE.WORK_DATE,
		AML_DATASOURCE.REF_NO,
		AML_DATASOURCE.ORIG_REF_NO,
		AML_DATASOURCE.DEPART_ID,
		AML_DATASOURCE.SEQ_NO,
		AML_DATASOURCE.DEPART_NAME,
		AML_DATASOURCE.DEPART_TYPE,
		AML_DATASOURCE.DEPART_AREACODE,
		AML_DATASOURCE.CLIENT_ID,
		AML_DATASOURCE.PCODE,
		AML_DATASOURCE.CLIENT_NAME,
		AML_DATASOURCE.CLIENT_TYPE,
		AML_DATASOURCE.CLIENT_IC_TYPE,
		AML_DATASOURCE.CLIENT_IC_TYPE_MEMO,
		AML_DATASOURCE.CLIENT_IC_NO,
		AML_DATASOURCE.CLIENT_NATIONALITY,
		AML_DATASOURCE.PHONE,
		AML_DATASOURCE.ADDRESS,
		AML_DATASOURCE.OTHER_CONTACT,
		AML_DATASOURCE.INDUSTRY_TYPE,
		AML_DATASOURCE.REGISTERED_CAPITAL,
		AML_DATASOURCE.REP_NAME,
		AML_DATASOURCE.REP_IC_TYPE,
		AML_DATASOURCE.REP_IC_TYPE_MEMO,
		AML_DATASOURCE.REP_IC_NO,
		AML_DATASOURCE.AGENT_NAME,
		AML_DATASOURCE.AGENT_IC_NO,
		AML_DATASOURCE.AGENT_IC_TYPE,
		AML_DATASOURCE.AGENT_IC_TYPE_MEMO,
		AML_DATASOURCE.AGENT_NATIONALITY,
		AML_DATASOURCE.ACCT_ID,
		AML_DATASOURCE.ACCT_TYPE,
	    AML_DATASOURCE.PBOC_NUM_ACCT,
		substring(AML_DATASOURCE.ACCT_OPEN_TIME,1,8) AS
		ACCT_OPEN_TIME,
		substring(AML_DATASOURCE.ACCT_CLOSE_TIME,1,8) AS
		ACCT_CLOSE_TIME,
		AML_DATASOURCE.TRADE_DATE,
		AML_DATASOURCE.TRADE_TIME,
		AML_DATASOURCE.VALUE_DATE,
		AML_DATASOURCE.TRADE_VENUE_COUNTRY,
		AML_DATASOURCE.TRADE_VENUE_REGION,
		AML_DATASOURCE.TRADE_MODE,
		AML_DATASOURCE.DEBIT_CREDIT,
		AML_DATASOURCE.TRADE_COUNTRY,
		AML_DATASOURCE.TRADE_REGION,
		AML_DATASOURCE.TRADE_CODE,
		AML_DATASOURCE.FUND_USAGE,
		AML_DATASOURCE.CURRENCY,
		AML_DATASOURCE.AMT,
		AML_DATASOURCE.DOLLAR_AMT,
		AML_DATASOURCE.CTPY_FI_CODE,
		AML_DATASOURCE.CTPY_FI_PCODE,
		AML_DATASOURCE.CTPY_FI_NAME,
		AML_DATASOURCE.CTPY_FI_TYPE,
		AML_DATASOURCE.CTPY_FI_COUNTRY,
		AML_DATASOURCE.CTPY_FI_REGION_CODE,
		AML_DATASOURCE.CTPY_NAME,
		AML_DATASOURCE.CTPY_TYPE,
		AML_DATASOURCE.CTPY_NATIONALITY,
		AML_DATASOURCE.CTPY_IC_CODE,
		AML_DATASOURCE.CTPY_IC_TYPE,
		AML_DATASOURCE.CTPY_IC_TYPE_MEMO,
		AML_DATASOURCE.CTPY_ACCT_ID,
		AML_DATASOURCE.CTPY_ACCT_TYPE,
		AML_DATASOURCE.TRADE_TYPE,
		AML_DATASOURCE.REPAYMENT_DATE,
		AML_DATASOURCE.LOAN_REPAYMENT_TYPE,
		AML_DATASOURCE.IS_SWAP,
		AML_DATASOURCE.SWAP_CODE,
		CASE WHEN
		AML_DATASOURCE.TRADE_REGION='000000' THEN
		AML_DATASOURCE.TRADE_COUNTRY ELSE
		AML_DATASOURCE.TRADE_REGION END WHITHER,
		AML_DATASOURCE.IS_CROSSBORDER
		from AML_DATASOURCE,TB_BRANCH
		where
		TB_BRANCH.DEPART_CODE=AML_DATASOURCE.DEPART_ID
		and AML_DATASOURCE.REF_NO =#{REF_NO}
	</select>
	<!-- AML第二次补录信息的RefNo可疑补录查询 -->
	<select id="selectRefNo02" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select
		AML_ANALYSISRESULT.WORK_DATE,
		AML_DATASOURCE.REF_NO,
		AML_DATASOURCE.ORIG_REF_NO,
		AML_DATASOURCE.DEPART_ID,
		AML_DATASOURCE.SEQ_NO,
		AML_DATASOURCE.DEPART_NAME,
		AML_DATASOURCE.DEPART_TYPE,
		AML_DATASOURCE.DEPART_AREACODE,
		AML_DATASOURCE.CLIENT_ID,
		AML_DATASOURCE.PCODE,
		AML_DATASOURCE.CLIENT_NAME,
		AML_DATASOURCE.CLIENT_TYPE,
		AML_DATASOURCE.CLIENT_IC_TYPE,
		AML_DATASOURCE.CLIENT_IC_TYPE_MEMO,
		AML_DATASOURCE.CLIENT_IC_NO,
		AML_DATASOURCE.CLIENT_NATIONALITY,
		AML_DATASOURCE.PHONE,
		AML_DATASOURCE.ADDRESS,
		AML_DATASOURCE.OTHER_CONTACT,
		AML_DATASOURCE.INDUSTRY_TYPE,
		AML_DATASOURCE.REGISTERED_CAPITAL,
		AML_DATASOURCE.REP_NAME,
		AML_DATASOURCE.REP_IC_TYPE,
		AML_DATASOURCE.REP_IC_TYPE_MEMO,
		AML_DATASOURCE.REP_IC_NO,
		AML_DATASOURCE.AGENT_NAME,
		AML_DATASOURCE.AGENT_IC_NO,
		AML_DATASOURCE.AGENT_IC_TYPE,
		AML_DATASOURCE.AGENT_IC_TYPE_MEMO,
		AML_DATASOURCE.AGENT_NATIONALITY,
		AML_DATASOURCE.ACCT_ID,
		AML_DATASOURCE.ACCT_TYPE,
		substring(AML_DATASOURCE.ACCT_OPEN_TIME,1,8) AS
		ACCT_OPEN_TIME,
		substring(AML_DATASOURCE.ACCT_CLOSE_TIME,1,8) AS
		ACCT_CLOSE_TIME,
		AML_DATASOURCE.ACCT_CLOSE_TIME,
		AML_DATASOURCE.TRADE_DATE,
		AML_DATASOURCE.TRADE_TIME,
		AML_DATASOURCE.VALUE_DATE,
		AML_DATASOURCE.TRADE_VENUE_COUNTRY,
		AML_DATASOURCE.TRADE_VENUE_REGION,
		AML_DATASOURCE.TRADE_MODE,
		AML_DATASOURCE.DEBIT_CREDIT,
		AML_DATASOURCE.TRADE_COUNTRY,
		AML_DATASOURCE.TRADE_REGION,
		AML_DATASOURCE.TRADE_CODE,
		AML_DATASOURCE.FUND_USAGE,
		AML_DATASOURCE.CURRENCY,
		AML_DATASOURCE.AMT,
		AML_DATASOURCE.DOLLAR_AMT,
		AML_DATASOURCE.CTPY_FI_CODE,
		AML_DATASOURCE.CTPY_FI_PCODE,
		AML_DATASOURCE.CTPY_FI_NAME,
		AML_DATASOURCE.CTPY_FI_TYPE,
		AML_DATASOURCE.CTPY_FI_COUNTRY,
		AML_DATASOURCE.CTPY_FI_REGION_CODE,
		AML_DATASOURCE.CTPY_NAME,
		AML_DATASOURCE.CTPY_TYPE,
		AML_DATASOURCE.CTPY_NATIONALITY,
		AML_DATASOURCE.CTPY_IC_CODE,
		AML_DATASOURCE.CTPY_IC_TYPE,
		AML_DATASOURCE.CTPY_IC_TYPE_MEMO,
		AML_DATASOURCE.CTPY_ACCT_ID,
		AML_DATASOURCE.CTPY_ACCT_TYPE,
		AML_DATASOURCE.TRADE_TYPE,
		AML_DATASOURCE.REPAYMENT_DATE,
		AML_DATASOURCE.LOAN_REPAYMENT_TYPE,
		AML_DATASOURCE.IS_SWAP,
		AML_DATASOURCE.SWAP_CODE,
		AML_ANALYSISRESULT.MAKE_STATUS,
		AML_ANALYSISRESULT.MAKER,
		AML_ANALYSISRESULT.MAKE_TIME,
		AML_ANALYSISRESULT.CHECK_STATUS,
		AML_ANALYSISRESULT.CHECKER,
		AML_ANALYSISRESULT.CHECK_TIME,
		AML_ANALYSISRESULT.CHECK_INFO,
		AML_ANALYSISRESULT.IS_DEL,
		AML_ANALYSISRESULT.DEL_INFO,
		AML_DATASOURCE.STATUS,
		AML_ANALYSISRESULT.BATCH_NO,
		AML_ANALYSISRESULT.RULE_CODE,
		AML_ANALYSISRESULT.RULE_TYPE,
		AML_ANALYSISRESULT.UNIT_NAME,
		AML_ANALYSISRESULT.UNIT_CODE,
		AML_ANALYSISRESULT.RELATION_TYPE,
		AML_ANALYSISRESULT.REPORT_DATE,
		AML_ANALYSISRESULT.SHADINESS_LEVEL,
		AML_ANALYSISRESULT.SHADINESS_DESC,
		AML_ANALYSISRESULT.ACTION_MEASURE,
		AML_ANALYSISRESULT.ORIG_BATCH_NO,
		AML_ANALYSISRESULT.ORIG_WORK_DATE,
		AML_ANALYSISRESULT.ORIG_CLIENT_ID,
		AML_ANALYSISRESULT.ORIG_TRADE_DATE,
		AML_ANALYSISRESULT.ORIG_RULE_CODE,
		AML_ANALYSISRESULT.REPORT_TYPE,
		AML_ANALYSISRESULT.IF_RPT,
		AML_ANALYSISRESULT.RPT_STATUS,
		AML_ANALYSISRESULT.FINAL_RPT_STATUS,
		AML_ANALYSISRESULT.RET_MSE,
		AML_ANALYSISRESULT.REPORTER,
		AML_ANALYSISRESULT.RPT_FILE,
		AML_ANALYSISRESULT.RPT_ZIP,
		AML_ANALYSISRESULT.SERIAL_NUM_1,
		AML_ANALYSISRESULT.SERIAL_NUM_2,
		AML_ANALYSISRESULT.SERIAL_NUM_3,
		TB_ANALYSISRULES.RULE_NOTES,
		TB_ANALYSISRULES.RULE_ANALYSE_METHOD,
		AML_DATASOURCE.PBOC_NUM_ACCT,
		CASE WHEN
		AML_DATASOURCE.TRADE_REGION='000000' THEN
		AML_DATASOURCE.TRADE_COUNTRY ELSE
		AML_DATASOURCE.TRADE_REGION END WHITHER,
		AML_DATASOURCE.IS_CROSSBORDER
		from TB_ANALYSISRULES, AML_ANALYSISRESULT, AML_DATASOURCE
		where
		AML_ANALYSISRESULT.REF_NO = AML_DATASOURCE.REF_NO
		and
		AML_ANALYSISRESULT.DEPART_ID =
		AML_DATASOURCE.DEPART_ID
		and
		AML_ANALYSISRESULT.RULE_CODE= TB_ANALYSISRULES.RULE_CODE
		and
		AML_ANALYSISRESULT.RULE_TYPE = TB_ANALYSISRULES.RULE_TYPE
		and
		AML_ANALYSISRESULT.RULE_TYPE='02'
		and
		AML_DATASOURCE.REF_NO =#{REF_NO}
		and AML_DATASOURCE.WORK_DATE =#{WORK_DATE}
	</select>
	<!-- add by pw -->
	<!-- AML第二次补录信息的RefNo可疑补录查询 -->
	<select id="selectRefNo03" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select
		AML_DATASOURCE.WORK_DATE,
		AML_DATASOURCE.REF_NO,
		AML_DATASOURCE.ORIG_REF_NO,
		AML_DATASOURCE.DEPART_ID,
		AML_DATASOURCE.SEQ_NO,
		AML_DATASOURCE.DEPART_NAME,
		AML_DATASOURCE.DEPART_TYPE,
		AML_DATASOURCE.DEPART_AREACODE,
		AML_DATASOURCE.CLIENT_ID,
		AML_DATASOURCE.PCODE,
		AML_DATASOURCE.CLIENT_NAME,
		AML_DATASOURCE.CLIENT_TYPE,
		AML_DATASOURCE.CLIENT_IC_TYPE,
		AML_DATASOURCE.CLIENT_IC_TYPE_MEMO,
		AML_DATASOURCE.CLIENT_IC_NO,
		AML_DATASOURCE.CLIENT_NATIONALITY,
		AML_DATASOURCE.PHONE,
		AML_DATASOURCE.ADDRESS,
		AML_DATASOURCE.OTHER_CONTACT,
		AML_DATASOURCE.INDUSTRY_TYPE,
		AML_DATASOURCE.REGISTERED_CAPITAL,
		AML_DATASOURCE.REP_NAME,
		AML_DATASOURCE.REP_IC_TYPE,
		AML_DATASOURCE.REP_IC_TYPE_MEMO,
		AML_DATASOURCE.REP_IC_NO,
		AML_DATASOURCE.AGENT_NAME,
		AML_DATASOURCE.AGENT_IC_NO,
		AML_DATASOURCE.AGENT_IC_TYPE,
		AML_DATASOURCE.AGENT_IC_TYPE_MEMO,
		AML_DATASOURCE.AGENT_NATIONALITY,
		AML_DATASOURCE.ACCT_ID,
		AML_DATASOURCE.ACCT_TYPE,
		substring(AML_DATASOURCE.ACCT_OPEN_TIME,1,8) AS
		ACCT_OPEN_TIME,
		substring(AML_DATASOURCE.ACCT_CLOSE_TIME,1,8) AS
		ACCT_CLOSE_TIME,
		AML_DATASOURCE.ACCT_CLOSE_TIME,
		AML_DATASOURCE.TRADE_DATE,
		AML_DATASOURCE.TRADE_TIME,
		AML_DATASOURCE.VALUE_DATE,
		AML_DATASOURCE.TRADE_VENUE_COUNTRY,
		AML_DATASOURCE.TRADE_VENUE_REGION,
		AML_DATASOURCE.TRADE_MODE,
		AML_DATASOURCE.DEBIT_CREDIT,
		AML_DATASOURCE.TRADE_COUNTRY,
		AML_DATASOURCE.TRADE_REGION,
		AML_DATASOURCE.TRADE_CODE,
		AML_DATASOURCE.FUND_USAGE,
		AML_DATASOURCE.CURRENCY,
		AML_DATASOURCE.AMT,
		AML_DATASOURCE.DOLLAR_AMT,
		AML_DATASOURCE.CTPY_FI_CODE,
		AML_DATASOURCE.CTPY_FI_PCODE,
		AML_DATASOURCE.CTPY_FI_NAME,
		AML_DATASOURCE.CTPY_FI_TYPE,
		AML_DATASOURCE.CTPY_FI_COUNTRY,
		AML_DATASOURCE.CTPY_FI_REGION_CODE,
		AML_DATASOURCE.CTPY_NAME,
		AML_DATASOURCE.CTPY_TYPE,
		AML_DATASOURCE.CTPY_NATIONALITY,
		AML_DATASOURCE.CTPY_IC_CODE,
		AML_DATASOURCE.CTPY_IC_TYPE,
		AML_DATASOURCE.CTPY_IC_TYPE_MEMO,
		AML_DATASOURCE.CTPY_ACCT_ID,
		AML_DATASOURCE.CTPY_ACCT_TYPE,
		AML_DATASOURCE.TRADE_TYPE,
		AML_DATASOURCE.REPAYMENT_DATE,
		AML_DATASOURCE.LOAN_REPAYMENT_TYPE,
		AML_DATASOURCE.IS_SWAP,
		AML_DATASOURCE.SWAP_CODE,
		AML_DATASOURCE.STATUS,
		AML_DATASOURCE.PBOC_NUM_ACCT,
		CASE WHEN
		AML_DATASOURCE.TRADE_REGION='000000' THEN
		AML_DATASOURCE.TRADE_COUNTRY ELSE
		AML_DATASOURCE.TRADE_REGION END WHITHER,
		AML_DATASOURCE.IS_CROSSBORDER
		from  AML_DATASOURCE
		where
		AML_DATASOURCE.REF_NO =#{REF_NO}
	</select>

	<!-- AML第二次补录的大额手工新增 <insert id="addAMLSecondMakeup01" parameterType="java.util.HashMap"> insert into AML_DATASOURCE ( WORK_DATE,REF_NO,DEPART_ID,DEPART_NAME,DEPART_TYPE,DEPART_AREACODE,CLIENT_ID,PCODE,CLIENT_NAME,CLIENT_TYPE,CLIENT_IC_TYPE, 
		CLIENT_IC_TYPE_MEMO,CLIENT_IC_NO,CLIENT_NATIONALITY,PHONE,ADDRESS,OTHER_CONTACT,INDUSTRY_TYPE,REGISTERED_CAPITAL,REP_NAME, REP_IC_TYPE,REP_IC_TYPE_MEMO,REP_IC_NO,AGENT_NAME,AGENT_IC_NO,AGENT_IC_TYPE,AGENT_IC_TYPE_MEMO,AGENT_NATIONALITY,ACCT_ID, 
		ACCT_TYPE,ACCT_OPEN_TIME,ACCT_CLOSE_TIME,TRADE_DATE,TRADE_TIME,VALUE_DATE,TRADE_VENUE_COUNTRY,TRADE_VENUE_REGION,TRADE_MODE, DEBIT_CREDIT,TRADE_COUNTRY,TRADE_REGION,TRADE_CODE,FUND_USAGE,CURRENCY,AMT,DOLLAR_AMT,CTPY_FI_CODE,CTPY_FI_PCODE,CTPY_FI_NAME, 
		CTPY_FI_TYPE,CTPY_FI_COUNTRY,CTPY_FI_REGION_CODE,CTPY_NAME,CTPY_TYPE,CTPY_NATIONALITY,CTPY_IC_CODE,CTPY_IC_TYPE,CTPY_IC_TYPE_MEMO, CTPY_ACCT_ID,CTPY_ACCT_TYPE,TRADE_TYPE,IS_SWAP,SWAP_CODE,MAKE_STATUS,MAKER,MAKE_TIME,IS_DEL,CHECK_STATUS 
		)VALUES ( #{WORK_DATE,jdbcType=VARCHAR},#{REF_NO,jdbcType=VARCHAR},#{DEPART_ID,jdbcType=VARCHAR},#{DEPART_NAME,jdbcType=VARCHAR}, #{DEPART_TYPE,jdbcType=VARCHAR},#{DEPART_AREACODE,jdbcType=VARCHAR},#{CLIENT_ID,jdbcType=VARCHAR},#{PCODE,jdbcType=VARCHAR}, 
		#{CLIENT_NAME,jdbcType=VARCHAR},#{CLIENT_TYPE,jdbcType=VARCHAR},#{CLIENT_IC_TYPE,jdbcType=VARCHAR}, #{CLIENT_IC_TYPE_MEMO,jdbcType=VARCHAR},#{CLIENT_IC_NO,jdbcType=VARCHAR},#{CLIENT_NATIONALITY,jdbcType=VARCHAR}, 
		#{PHONE,jdbcType=VARCHAR},#{ADDRESS,jdbcType=VARCHAR},#{OTHER_CONTACT,jdbcType=VARCHAR},#{INDUSTRY_TYPE,jdbcType=VARCHAR}, #{REGISTERED_CAPITAL,jdbcType=VARCHAR},#{REP_NAME,jdbcType=VARCHAR},#{REP_IC_TYPE,jdbcType=VARCHAR}, 
		#{REP_IC_TYPE_MEMO,jdbcType=VARCHAR},#{REP_IC_NO,jdbcType=VARCHAR},#{AGENT_NAME,jdbcType=VARCHAR}, #{AGENT_IC_NO,jdbcType=VARCHAR},#{AGENT_IC_TYPE,jdbcType=VARCHAR},#{AGENT_IC_TYPE_MEMO,jdbcType=VARCHAR}, 
		#{AGENT_NATIONALITY,jdbcType=VARCHAR},#{ACCT_ID,jdbcType=VARCHAR},#{ACCT_TYPE,jdbcType=VARCHAR}, #{ACCT_OPEN_TIME,jdbcType=VARCHAR},#{ACCT_CLOSE_TIME,jdbcType=VARCHAR},#{TRADE_DATE,jdbcType=VARCHAR}, #{TRADE_TIME,jdbcType=VARCHAR},#{VALUE_DATE,jdbcType=VARCHAR},#{TRADE_VENUE_COUNTRY,jdbcType=VARCHAR}, 
		#{TRADE_VENUE_REGION,jdbcType=VARCHAR},#{TRADE_MODE,jdbcType=VARCHAR},#{DEBIT_CREDIT,jdbcType=VARCHAR}, #{TRADE_COUNTRY,jdbcType=VARCHAR},#{TRADE_REGION,jdbcType=VARCHAR},#{TRADE_CODE,jdbcType=VARCHAR}, 
		#{FUND_USAGE,jdbcType=VARCHAR},#{CURRENCY,jdbcType=VARCHAR},#{AMT},#{DOLLAR_AMT}, #{CTPY_FI_CODE,jdbcType=VARCHAR},#{CTPY_FI_PCODE,jdbcType=VARCHAR},#{CTPY_FI_NAME,jdbcType=VARCHAR}, 
		#{CTPY_FI_TYPE,jdbcType=VARCHAR},#{CTPY_FI_COUNTRY,jdbcType=VARCHAR},#{CTPY_FI_REGION_CODE,jdbcType=VARCHAR}, #{CTPY_NAME,jdbcType=VARCHAR},#{CTPY_TYPE,jdbcType=VARCHAR},#{CTPY_NATIONALITY,jdbcType=VARCHAR}, 
		#{CTPY_IC_CODE,jdbcType=VARCHAR},#{CTPY_IC_TYPE,jdbcType=VARCHAR},#{CTPY_IC_TYPE_MEMO,jdbcType=VARCHAR}, #{CTPY_ACCT_ID,jdbcType=VARCHAR},#{CTPY_ACCT_TYPE,jdbcType=VARCHAR},#{TRADE_TYPE,jdbcType=VARCHAR}, 
		#{IS_SWAP,jdbcType=VARCHAR},#{SWAP_CODE,jdbcType=VARCHAR},#{MAKE_STATUS,jdbcType=VARCHAR}, #{Maker},#{MakeTime},'0','0' ) </insert> -->

	<!-- AML第二次补录的大额手工新增 附加插入 -->
	<insert id="addAMLSecondMakeup011" parameterType="java.util.HashMap">
		insert into AML_ANALYSISRESULT (
		BATCH_NO, MAKE_STATUS, CHECK_STATUS, IS_DEL, REPORT_TYPE, RPT_STATUS, WORK_DATE, REF_NO, DEPART_ID,
		RULE_CODE,UNIT_NAME, UNIT_CODE, RELATION_TYPE,RULE_TYPE,MAKER,MAKE_TIME
		) VALUES (
		#{BATCH_NO,jdbcType=VARCHAR},'2','0',
		'0',
		#{REPORT_TYPE,jdbcType=VARCHAR}, '10',
		#{WORK_DATE,jdbcType=VARCHAR},
		#{REF_NO,jdbcType=VARCHAR},
		#{DEPART_ID,jdbcType=VARCHAR},#{RULE_CODE,jdbcType=VARCHAR},
		#{UNIT_NAME,jdbcType=VARCHAR}, #{UNIT_CODE,jdbcType=VARCHAR},
		#{RELATION_TYPE,jdbcType=VARCHAR}, '01',#{Maker},#{MakeTime}
		)
	</insert>



	<!-- AML第二次补录的可疑手工新增 <insert id="addAMLSecondMakeup02" parameterType="java.util.HashMap"> insert into AML_DATASOURCE ( WORK_DATE,REF_NO,DEPART_ID,DEPART_NAME,DEPART_TYPE,DEPART_AREACODE,CLIENT_ID,PCODE,CLIENT_NAME,CLIENT_TYPE,CLIENT_IC_TYPE, 
		CLIENT_IC_TYPE_MEMO,CLIENT_IC_NO,CLIENT_NATIONALITY,PHONE,ADDRESS,OTHER_CONTACT,INDUSTRY_TYPE,REGISTERED_CAPITAL,REP_NAME, REP_IC_TYPE,REP_IC_TYPE_MEMO,REP_IC_NO,AGENT_NAME,AGENT_IC_NO,AGENT_IC_TYPE,AGENT_IC_TYPE_MEMO,AGENT_NATIONALITY,ACCT_ID, 
		ACCT_TYPE,ACCT_OPEN_TIME,ACCT_CLOSE_TIME,TRADE_DATE,TRADE_TIME,VALUE_DATE,TRADE_VENUE_COUNTRY,TRADE_VENUE_REGION,TRADE_MODE, DEBIT_CREDIT,TRADE_CODE,FUND_USAGE,CURRENCY,AMT,DOLLAR_AMT,CTPY_FI_CODE,CTPY_FI_PCODE,CTPY_FI_NAME, 
		CTPY_FI_TYPE,CTPY_FI_COUNTRY,CTPY_FI_REGION_CODE,CTPY_NAME,CTPY_TYPE,CTPY_NATIONALITY,CTPY_IC_CODE,CTPY_IC_TYPE,CTPY_IC_TYPE_MEMO, CTPY_ACCT_ID,CTPY_ACCT_TYPE,TRADE_TYPE,IS_SWAP,SWAP_CODE,STATUS,MAKE_STATUS,MAKER,MAKE_TIME,IS_DEL,CHECK_STATUS 
		)VALUES ( #{WORK_DATE,jdbcType=VARCHAR},#{REF_NO,jdbcType=VARCHAR},#{DEPART_ID,jdbcType=VARCHAR},#{DEPART_NAME,jdbcType=VARCHAR}, #{DEPART_TYPE,jdbcType=VARCHAR},#{DEPART_AREACODE,jdbcType=VARCHAR},#{CLIENT_ID,jdbcType=VARCHAR},#{PCODE,jdbcType=VARCHAR}, 
		#{CLIENT_NAME,jdbcType=VARCHAR},#{CLIENT_TYPE,jdbcType=VARCHAR},#{CLIENT_IC_TYPE,jdbcType=VARCHAR}, #{CLIENT_IC_TYPE_MEMO,jdbcType=VARCHAR},#{CLIENT_IC_NO,jdbcType=VARCHAR},#{CLIENT_NATIONALITY,jdbcType=VARCHAR}, 
		#{PHONE,jdbcType=VARCHAR},#{ADDRESS,jdbcType=VARCHAR},#{OTHER_CONTACT,jdbcType=VARCHAR},#{INDUSTRY_TYPE,jdbcType=VARCHAR}, #{REGISTERED_CAPITAL,jdbcType=VARCHAR},#{REP_NAME,jdbcType=VARCHAR},#{REP_IC_TYPE,jdbcType=VARCHAR}, 
		#{REP_IC_TYPE_MEMO,jdbcType=VARCHAR},#{REP_IC_NO,jdbcType=VARCHAR},#{AGENT_NAME,jdbcType=VARCHAR}, #{AGENT_IC_NO,jdbcType=VARCHAR},#{AGENT_IC_TYPE,jdbcType=VARCHAR},#{AGENT_IC_TYPE_MEMO,jdbcType=VARCHAR}, 
		#{AGENT_NATIONALITY,jdbcType=VARCHAR},#{ACCT_ID,jdbcType=VARCHAR},#{ACCT_TYPE,jdbcType=VARCHAR}, #{ACCT_OPEN_TIME,jdbcType=VARCHAR},#{ACCT_CLOSE_TIME,jdbcType=VARCHAR},#{TRADE_DATE,jdbcType=VARCHAR}, #{TRADE_TIME,jdbcType=VARCHAR},#{VALUE_DATE,jdbcType=VARCHAR},#{TRADE_VENUE_COUNTRY,jdbcType=VARCHAR}, 
		#{TRADE_VENUE_REGION,jdbcType=VARCHAR},#{TRADE_MODE,jdbcType=VARCHAR},#{DEBIT_CREDIT,jdbcType=VARCHAR},#{TRADE_CODE,jdbcType=VARCHAR}, #{FUND_USAGE,jdbcType=VARCHAR},#{CURRENCY,jdbcType=VARCHAR},#{AMT},#{DOLLAR_AMT}, 
		#{CTPY_FI_CODE,jdbcType=VARCHAR},#{CTPY_FI_PCODE,jdbcType=VARCHAR},#{CTPY_FI_NAME,jdbcType=VARCHAR}, #{CTPY_FI_TYPE,jdbcType=VARCHAR},#{CTPY_FI_COUNTRY,jdbcType=VARCHAR},#{CTPY_FI_REGION_CODE,jdbcType=VARCHAR}, 
		#{CTPY_NAME,jdbcType=VARCHAR},#{CTPY_TYPE,jdbcType=VARCHAR},#{CTPY_NATIONALITY,jdbcType=VARCHAR}, #{CTPY_IC_CODE,jdbcType=VARCHAR},#{CTPY_IC_TYPE,jdbcType=VARCHAR},#{CTPY_IC_TYPE_MEMO,jdbcType=VARCHAR}, 
		#{CTPY_ACCT_ID,jdbcType=VARCHAR},#{CTPY_ACCT_TYPE,jdbcType=VARCHAR},#{TRADE_TYPE,jdbcType=VARCHAR}, #{IS_SWAP,jdbcType=VARCHAR},#{SWAP_CODE,jdbcType=VARCHAR},#{STATUS,jdbcType=VARCHAR},#{MAKE_STATUS,jdbcType=VARCHAR}, 
		#{Maker},#{MakeTime},'0','0' ) </insert> -->

	<!-- AML第二次补录的可疑手工新增 附加插入 -->
	<insert id="addAMLSecondMakeup021" parameterType="java.util.HashMap">
		insert into
		AML_ANALYSISRESULT (
		RULE_CODE,ACTION_MEASURE,SHADINESS_LEVEL,
		BATCH_NO, MAKE_STATUS, CHECK_STATUS, IS_DEL,
		REPORT_TYPE,RPT_STATUS, WORK_DATE,
		REF_NO, DEPART_ID,SHADINESS_DESC, RULE_TYPE,UNIT_NAME,UNIT_CODE,IF_RPT,MAKER,MAKE_TIME,
		BS_DETR,BS_DORP,BS_ODRP,BS_TPTR,BS_OTPR,BS_STCB,BS_AOSP,BS_TOSC,BS_MIRS
		) VALUES (
		#{RULE_CODE,jdbcType=VARCHAR},#{ACTION_MEASURE,jdbcType=VARCHAR},
		#{SHADINESS_LEVEL,jdbcType=VARCHAR},
		#{BATCH_NO,jdbcType=VARCHAR}, '2',
		'0', '0',
		#{REPORT_TYPE,jdbcType=VARCHAR}, '10',
		#{WORK_DATE,jdbcType=VARCHAR}, #{REF_NO,jdbcType=VARCHAR},
		#{DEPART_ID,jdbcType=VARCHAR},#{SHADINESS_DESC,jdbcType=VARCHAR},'02',
		#{DEPART_NAME,jdbcType=VARCHAR},#{UNIT_CODE,jdbcType=VARCHAR},#{IF_RPT,jdbcType=VARCHAR},#{Maker},#{MakeTime},
		#{BS_DETR,jdbcType=VARCHAR},#{BS_DORP,jdbcType=VARCHAR},#{BS_ODRP,jdbcType=VARCHAR},#{BS_TPTR,jdbcType=VARCHAR},
		#{BS_OTPR,jdbcType=VARCHAR},#{BS_STCB,jdbcType=VARCHAR},#{BS_AOSP,jdbcType=VARCHAR},#{BS_TOSC,jdbcType=VARCHAR},
		#{BS_MIRS,jdbcType=VARCHAR},
		)
	</insert>
	
	<!-- AML第二次补录的大额新增删除报文插入 -->
	<insert id="addAMLSecondMakeup013" parameterType="java.util.HashMap">
		insert into AML_ANALYSISRESULT (
		DEL_INFO,BATCH_NO, MAKE_STATUS, CHECK_STATUS, IS_DEL, REPORT_TYPE, RPT_STATUS, WORK_DATE, REF_NO, DEPART_ID,
		RULE_CODE,UNIT_NAME, UNIT_CODE, RELATION_TYPE,RULE_TYPE,MAKER,MAKE_TIME
		) VALUES (
		#{DEL_INFO,jdbcType=VARCHAR},
		#{BATCH_NO,jdbcType=VARCHAR},'2','0',
		'0',
		#{REPORT_TYPE,jdbcType=VARCHAR}, '10',
		#{WORK_DATE,jdbcType=VARCHAR},
		#{REF_NO,jdbcType=VARCHAR},
		#{DEPART_ID,jdbcType=VARCHAR},#{RULE_CODE,jdbcType=VARCHAR},
		#{UNIT_NAME,jdbcType=VARCHAR}, #{UNIT_CODE,jdbcType=VARCHAR},
		#{RELATION_TYPE,jdbcType=VARCHAR}, '01',#{Maker},#{MakeTime}
		)
	</insert>

	<!-- AML大额业务补录修改 -->
	<update id="updateAMLSecondMakeup01" parameterType="java.util.HashMap">
		update AML_DATASOURCE SET
		WORK_DATE=#{WORK_DATE,jdbcType=VARCHAR},REF_NO=#{REF_NO,jdbcType=VARCHAR},DEPART_ID=#{DEPART_ID,jdbcType=VARCHAR},
		DEPART_NAME=#{DEPART_NAME,jdbcType=VARCHAR},DEPART_TYPE=#{DEPART_TYPE,jdbcType=VARCHAR},
		DEPART_AREACODE=#{DEPART_AREACODE,jdbcType=VARCHAR},CLIENT_ID=#{CLIENT_ID,jdbcType=VARCHAR},
		PCODE=#{PCODE,jdbcType=VARCHAR},CLIENT_NAME=#{CLIENT_NAME,jdbcType=VARCHAR},CLIENT_TYPE=#{CLIENT_TYPE,jdbcType=VARCHAR},
		CLIENT_IC_TYPE=#{CLIENT_IC_TYPE,jdbcType=VARCHAR},CLIENT_IC_TYPE_MEMO=#{CLIENT_IC_TYPE_MEMO,jdbcType=VARCHAR},
		CLIENT_IC_NO=#{CLIENT_IC_NO,jdbcType=VARCHAR},CLIENT_NATIONALITY=#{CLIENT_NATIONALITY,jdbcType=VARCHAR},
		PHONE=#{PHONE,jdbcType=VARCHAR},ADDRESS=#{ADDRESS,jdbcType=VARCHAR},OTHER_CONTACT=#{OTHER_CONTACT,jdbcType=VARCHAR},
		INDUSTRY_TYPE=#{INDUSTRY_TYPE,jdbcType=VARCHAR},REGISTERED_CAPITAL=#{REGISTERED_CAPITAL,jdbcType=VARCHAR},
		REP_NAME=#{REP_NAME,jdbcType=VARCHAR},REP_IC_TYPE=#{REP_IC_TYPE,jdbcType=VARCHAR},REP_IC_TYPE_MEMO=#{REP_IC_TYPE_MEMO,jdbcType=VARCHAR},
		REP_IC_NO=#{REP_IC_NO,jdbcType=VARCHAR},AGENT_NAME=#{AGENT_NAME,jdbcType=VARCHAR},AGENT_IC_NO=#{AGENT_IC_NO,jdbcType=VARCHAR},
		AGENT_IC_TYPE=#{AGENT_IC_TYPE,jdbcType=VARCHAR},AGENT_IC_TYPE_MEMO=#{AGENT_IC_TYPE_MEMO,jdbcType=VARCHAR},
		AGENT_NATIONALITY=#{AGENT_NATIONALITY,jdbcType=VARCHAR},ACCT_ID=#{ACCT_ID,jdbcType=VARCHAR},ACCT_TYPE=#{ACCT_TYPE,jdbcType=VARCHAR},
		ACCT_OPEN_TIME=#{ACCT_OPEN_TIME,jdbcType=VARCHAR},ACCT_CLOSE_TIME=#{ACCT_CLOSE_TIME,jdbcType=VARCHAR},
		TRADE_DATE=#{TRADE_DATE,jdbcType=VARCHAR},TRADE_TIME=#{TRADE_TIME,jdbcType=VARCHAR},VALUE_DATE=#{VALUE_DATE,jdbcType=VARCHAR},
		TRADE_VENUE_COUNTRY=#{TRADE_VENUE_COUNTRY,jdbcType=VARCHAR},TRADE_VENUE_REGION=#{TRADE_VENUE_REGION,jdbcType=VARCHAR},
		TRADE_MODE=#{TRADE_MODE,jdbcType=VARCHAR},DEBIT_CREDIT=#{DEBIT_CREDIT,jdbcType=VARCHAR},TRADE_COUNTRY=#{TRADE_COUNTRY,jdbcType=VARCHAR},
		TRADE_REGION=#{TRADE_REGION,jdbcType=VARCHAR},TRADE_CODE=#{TRADE_CODE,jdbcType=VARCHAR},FUND_USAGE=#{FUND_USAGE,jdbcType=VARCHAR},
		CURRENCY=#{CURRENCY,jdbcType=VARCHAR},AMT=#{AMT},DOLLAR_AMT=#{DOLLAR_AMT},
		CTPY_FI_CODE=#{CTPY_FI_CODE,jdbcType=VARCHAR},CTPY_FI_PCODE=#{CTPY_FI_PCODE,jdbcType=VARCHAR},
		CTPY_FI_NAME=#{CTPY_FI_NAME,jdbcType=VARCHAR},CTPY_FI_TYPE=#{CTPY_FI_TYPE,jdbcType=VARCHAR},
		CTPY_FI_COUNTRY=#{CTPY_FI_COUNTRY,jdbcType=VARCHAR},CTPY_FI_REGION_CODE=#{CTPY_FI_REGION_CODE,jdbcType=VARCHAR},
		CTPY_NAME=#{CTPY_NAME,jdbcType=VARCHAR},CTPY_TYPE=#{CTPY_TYPE,jdbcType=VARCHAR},CTPY_NATIONALITY=#{CTPY_NATIONALITY,jdbcType=VARCHAR},
		CTPY_IC_CODE=#{CTPY_IC_CODE,jdbcType=VARCHAR},CTPY_IC_TYPE=#{CTPY_IC_TYPE,jdbcType=VARCHAR},
		CTPY_IC_TYPE_MEMO=#{CTPY_IC_TYPE_MEMO,jdbcType=VARCHAR},CTPY_ACCT_ID=#{CTPY_ACCT_ID,jdbcType=VARCHAR},
		CTPY_ACCT_TYPE=#{CTPY_ACCT_TYPE,jdbcType=VARCHAR},TRADE_TYPE=#{TRADE_TYPE,jdbcType=VARCHAR},
		IS_SWAP=#{IS_SWAP,jdbcType=VARCHAR},SWAP_CODE=#{SWAP_CODE,jdbcType=VARCHAR},PBOC_NUM_ACCT= #{PBOC_NUM_ACCT,jdbcType=VARCHAR},
		IS_CROSSBORDER=#{IS_CROSSBORDER,jdbcType=VARCHAR},CLIENT_IC_OTHER_TYPE=#{CLIENT_IC_OTHER_TYPE,jdbcType=VARCHAR},
		BANK_RELATIONSHIP=#{BANK_RELATIONSHIP,jdbcType=VARCHAR},REP_IC_OTHER_TYPE=#{REP_IC_OTHER_TYPE,jdbcType=VARCHAR},
		AGENT_IC_OTHER_TYPE=#{AGENT_IC_OTHER_TYPE,jdbcType=VARCHAR},REC_PAY_TYPE=#{REC_PAY_TYPE,jdbcType=VARCHAR},
		REC_PAY_NO=#{REC_PAY_NO,jdbcType=VARCHAR},TRADE_UNCOUNTER_TYPE=#{TRADE_UNCOUNTER_TYPE,jdbcType=VARCHAR},
		TRADE_UNCOUNTER_OTHER_TYPE=#{TRADE_UNCOUNTER_OTHER_TYPE,jdbcType=VARCHAR},TRADE_UNCOUNTER_NO=#{TRADE_UNCOUNTER_NO,jdbcType=VARCHAR},
		TRADE_BPTC=#{TRADE_BPTC,jdbcType=VARCHAR},RMB_AMT=#{RMB_AMT,jdbcType=VARCHAR},
		REMARK1=#{REMARK1,jdbcType=VARCHAR},REMARK2=#{REMARK2,jdbcType=VARCHAR}
		WHERE REF_NO = #{RefNo}
	</update>

	<!-- AML大额业务补录修改 附加更新 -->
	<update id="updateAMLSecondMakeup011" parameterType="java.util.HashMap">
		update AML_ANALYSISRESULT SET
		CHECK_STATUS = '0' ,
		MAKE_STATUS = #{MAKE_STATUS,jdbcType=VARCHAR},
		MAKER=#{Maker},MAKE_TIME=#{MakeTime},
		REPORT_TYPE = #{REPORT_TYPE,jdbcType=VARCHAR},
		RPT_STATUS = #{RPT_STATUS,jdbcType=VARCHAR},
		RULE_CODE = #{RULE_CODE,jdbcType=VARCHAR},
		UNIT_NAME = #{UNIT_NAME,jdbcType=VARCHAR},
		UNIT_CODE =	#{UNIT_CODE,jdbcType=VARCHAR},
		RELATION_TYPE = #{RELATION_TYPE,jdbcType=VARCHAR}
		WHERE
		WORK_DATE = #{WORK_DATE} AND
		RULE_CODE=#{ruleCode01} AND
		REF_NO = #{REF_NO} AND
		DEPART_ID = #{DEPART_ID}
	</update>



	<!-- AML可疑业务补录修改 -->
	<update id="updateAMLSecondMakeup02" parameterType="java.util.HashMap">
		update AML_DATASOURCE SET
		WORK_DATE=#{WORK_DATE,jdbcType=VARCHAR},REF_NO=#{REF_NO,jdbcType=VARCHAR},DEPART_ID=#{DEPART_ID,jdbcType=VARCHAR},
		DEPART_NAME=#{DEPART_NAME,jdbcType=VARCHAR},DEPART_TYPE=#{DEPART_TYPE,jdbcType=VARCHAR},
		DEPART_AREACODE=#{DEPART_AREACODE,jdbcType=VARCHAR},CLIENT_ID=#{CLIENT_ID,jdbcType=VARCHAR},
		PCODE=#{PCODE,jdbcType=VARCHAR},CLIENT_NAME=#{CLIENT_NAME,jdbcType=VARCHAR},CLIENT_TYPE=#{CLIENT_TYPE,jdbcType=VARCHAR},
		CLIENT_IC_TYPE=#{CLIENT_IC_TYPE,jdbcType=VARCHAR},CLIENT_IC_TYPE_MEMO=#{CLIENT_IC_TYPE_MEMO,jdbcType=VARCHAR},
		CLIENT_IC_NO=#{CLIENT_IC_NO,jdbcType=VARCHAR},CLIENT_NATIONALITY=#{CLIENT_NATIONALITY,jdbcType=VARCHAR},
		PHONE=#{PHONE,jdbcType=VARCHAR},ADDRESS=#{ADDRESS,jdbcType=VARCHAR},OTHER_CONTACT=#{OTHER_CONTACT,jdbcType=VARCHAR},
		INDUSTRY_TYPE=#{INDUSTRY_TYPE,jdbcType=VARCHAR},REGISTERED_CAPITAL=#{REGISTERED_CAPITAL,jdbcType=VARCHAR},
		REP_NAME=#{REP_NAME,jdbcType=VARCHAR},REP_IC_TYPE=#{REP_IC_TYPE,jdbcType=VARCHAR},REP_IC_TYPE_MEMO=#{REP_IC_TYPE_MEMO,jdbcType=VARCHAR},
		REP_IC_NO=#{REP_IC_NO,jdbcType=VARCHAR},AGENT_NAME=#{AGENT_NAME,jdbcType=VARCHAR},AGENT_IC_NO=#{AGENT_IC_NO,jdbcType=VARCHAR},
		AGENT_IC_TYPE=#{AGENT_IC_TYPE,jdbcType=VARCHAR},AGENT_IC_TYPE_MEMO=#{AGENT_IC_TYPE_MEMO,jdbcType=VARCHAR},
		AGENT_NATIONALITY=#{AGENT_NATIONALITY,jdbcType=VARCHAR},ACCT_ID=#{ACCT_ID,jdbcType=VARCHAR},ACCT_TYPE=#{ACCT_TYPE,jdbcType=VARCHAR},
		ACCT_OPEN_TIME=#{ACCT_OPEN_TIME,jdbcType=VARCHAR},ACCT_CLOSE_TIME=#{ACCT_CLOSE_TIME,jdbcType=VARCHAR},
		TRADE_DATE=#{TRADE_DATE,jdbcType=VARCHAR},TRADE_TIME=#{TRADE_TIME,jdbcType=VARCHAR},VALUE_DATE=#{VALUE_DATE,jdbcType=VARCHAR},
		TRADE_VENUE_COUNTRY=#{TRADE_VENUE_COUNTRY,jdbcType=VARCHAR},TRADE_VENUE_REGION=#{TRADE_VENUE_REGION,jdbcType=VARCHAR},
		TRADE_MODE=#{TRADE_MODE,jdbcType=VARCHAR},DEBIT_CREDIT=#{DEBIT_CREDIT,jdbcType=VARCHAR},TRADE_CODE=#{TRADE_CODE,jdbcType=VARCHAR},FUND_USAGE=#{FUND_USAGE,jdbcType=VARCHAR},
		CURRENCY=#{CURRENCY,jdbcType=VARCHAR},AMT=#{AMT},DOLLAR_AMT=#{DOLLAR_AMT},
		CTPY_FI_CODE=#{CTPY_FI_CODE,jdbcType=VARCHAR},CTPY_FI_PCODE=#{CTPY_FI_PCODE,jdbcType=VARCHAR},
		CTPY_FI_NAME=#{CTPY_FI_NAME,jdbcType=VARCHAR},CTPY_FI_TYPE=#{CTPY_FI_TYPE,jdbcType=VARCHAR},
		CTPY_FI_COUNTRY=#{CTPY_FI_COUNTRY,jdbcType=VARCHAR},CTPY_FI_REGION_CODE=#{CTPY_FI_REGION_CODE,jdbcType=VARCHAR},
		CTPY_NAME=#{CTPY_NAME,jdbcType=VARCHAR},CTPY_TYPE=#{CTPY_TYPE,jdbcType=VARCHAR},CTPY_NATIONALITY=#{CTPY_NATIONALITY,jdbcType=VARCHAR},
		CTPY_IC_CODE=#{CTPY_IC_CODE,jdbcType=VARCHAR},CTPY_IC_TYPE=#{CTPY_IC_TYPE,jdbcType=VARCHAR},
		CTPY_IC_TYPE_MEMO=#{CTPY_IC_TYPE_MEMO,jdbcType=VARCHAR},CTPY_ACCT_ID=#{CTPY_ACCT_ID,jdbcType=VARCHAR},
		CTPY_ACCT_TYPE=#{CTPY_ACCT_TYPE,jdbcType=VARCHAR},TRADE_TYPE=#{TRADE_TYPE,jdbcType=VARCHAR},
		IS_SWAP=#{IS_SWAP,jdbcType=VARCHAR},SWAP_CODE=#{SWAP_CODE,jdbcType=VARCHAR},STATUS =
		#{STATUS,jdbcType=VARCHAR},PBOC_NUM_ACCT= #{PBOC_NUM_ACCT,jdbcType=VARCHAR},CLIENT_IC_OTHER_TYPE=#{CLIENT_IC_OTHER_TYPE,jdbcType=VARCHAR},
		BANK_RELATIONSHIP=#{BANK_RELATIONSHIP,jdbcType=VARCHAR},REP_IC_OTHER_TYPE=#{REP_IC_OTHER_TYPE,jdbcType=VARCHAR},
		AGENT_IC_OTHER_TYPE=#{AGENT_IC_OTHER_TYPE,jdbcType=VARCHAR},REC_PAY_TYPE=#{REC_PAY_TYPE,jdbcType=VARCHAR},
		REC_PAY_NO=#{REC_PAY_NO,jdbcType=VARCHAR},TRADE_UNCOUNTER_TYPE=#{TRADE_UNCOUNTER_TYPE,jdbcType=VARCHAR},
		TRADE_UNCOUNTER_OTHER_TYPE=#{TRADE_UNCOUNTER_OTHER_TYPE,jdbcType=VARCHAR},TRADE_UNCOUNTER_NO=#{TRADE_UNCOUNTER_NO,jdbcType=VARCHAR},
		TRADE_BPTC=#{TRADE_BPTC,jdbcType=VARCHAR},RMB_AMT=#{RMB_AMT,jdbcType=VARCHAR},
		REMARK1=#{REMARK1,jdbcType=VARCHAR},REMARK2=#{REMARK2,jdbcType=VARCHAR},
		IS_CROSSBORDER=#{IS_CROSSBORDER,jdbcType=VARCHAR}
		WHERE REF_NO = #{RefNo}
	</update>

	<!-- AML可疑业务补录修改 -->
	<update id="updateAMLSecondMakeup021" parameterType="java.util.HashMap">
		update AML_ANALYSISRESULT SET
		CHECK_STATUS = '0' ,
		MAKE_STATUS = #{MAKE_STATUS,jdbcType=VARCHAR},
		MAKER=#{Maker},MAKE_TIME=#{MakeTime},
		REPORT_TYPE = #{REPORT_TYPE,jdbcType=VARCHAR},
		RPT_STATUS = #{RPT_STATUS,jdbcType=VARCHAR},
		RULE_CODE = #{RULE_CODE,jdbcType=VARCHAR},
		SHADINESS_LEVEL = #{SHADINESS_LEVEL,jdbcType=VARCHAR},
		ACTION_MEASURE = #{ACTION_MEASURE,jdbcType=VARCHAR},
		SHADINESS_DESC = #{SHADINESS_DESC,jdbcType=VARCHAR},
		IF_RPT= #{IF_RPT,jdbcType=VARCHAR},
		BS_DETR=#{BS_DETR,jdbcType=VARCHAR},
		BS_DORP=#{BS_DORP,jdbcType=VARCHAR},
		BS_ODRP=#{BS_ODRP,jdbcType=VARCHAR},
		BS_TPTR=#{BS_TPTR,jdbcType=VARCHAR},
		BS_OTPR=#{BS_OTPR,jdbcType=VARCHAR},
		BS_STCB=#{BS_STCB,jdbcType=VARCHAR},
		BS_AOSP=#{BS_AOSP,jdbcType=VARCHAR},
		BS_TOSC=#{BS_TOSC,jdbcType=VARCHAR},
		BS_MIRS=#{BS_MIRS,jdbcType=VARCHAR}
		WHERE
		WORK_DATE =	#{WORK_DATE} AND
		REF_NO = #{REF_NO} AND
		RULE_CODE = #{ruleCode02} AND
		DEPART_ID = #{DEPART_ID} AND
		BATCH_NO = #{BATCH_NO}
	</update>

	<!-- AML可疑业务是否上报关联更新 -->
	<update id="updateIfRptList" parameterType="java.util.HashMap">
		update AML_ANALYSISRESULT SET
		IF_RPT = #{IF_RPT,jdbcType=VARCHAR}
		WHERE BATCH_NO = #{BATCH_NO} and WORK_DATE = #{WORK_DATE}
	</update>


	<!-- 修改AML删除 -->
	<update id="deleteAMLList2" parameterType="java.util.HashMap">
		update AML_ANALYSISRESULT set
		IS_DEL = '1', DEL_INFO = #{DEL_INFO,jdbcType=VARCHAR}, MAKE_STATUS = '1',
		MAKE_TIME = #{delTime}, MAKER = #{delUser}
		where
		WORK_DATE = #{WorkDate} and 
		REF_NO = #{RefNo} and	
		RULE_CODE = #{ruleCode} and
		DEPART_ID = #{departId} and
		BATCH_NO = #{batchNo}
	</update>

	<!-- 修改AML取消删除 -->
	<update id="undeleteAMLList2" parameterType="java.util.HashMap">
		update AML_ANALYSISRESULT set
		IS_DEL = '0', DEL_INFO = NULL, MAKE_STATUS = '1', MAKE_TIME = #{delTime},
		MAKER = #{delUser}
		where 
		WORK_DATE = #{WorkDate} and 
		REF_NO = #{RefNo} and	
		RULE_CODE = #{ruleCode} and
		DEPART_ID = #{departId} and
		BATCH_NO = #{batchNo}
	</update>

	<!-- 新增AML删除 -->
	<update id="deleteAMLList21" parameterType="java.util.HashMap">
		update AML_ANALYSISRESULT set
		IS_DEL = '1', DEL_INFO = #{DEL_INFO,jdbcType=VARCHAR}, MAKE_STATUS = '2',
		MAKE_TIME = #{delTime}, MAKER = #{delUser}
		where
		WORK_DATE = #{WorkDate} and 
		REF_NO = #{RefNo} and	
		RULE_CODE = #{ruleCode} and
		DEPART_ID = #{departId} and
		BATCH_NO = #{batchNo}
	</update>

	<!-- 新增AML取消删除 -->
	<update id="undeleteAMLList21" parameterType="java.util.HashMap">
		update AML_ANALYSISRESULT set
		IS_DEL = '0', DEL_INFO = NULL, MAKE_STATUS = '2', MAKE_TIME = #{delTime},
		MAKER = #{delUser}
		where 
		WORK_DATE = #{WorkDate} and 
		REF_NO = #{RefNo} and	
		RULE_CODE = #{ruleCode} and
		DEPART_ID = #{departId} and
		BATCH_NO = #{batchNo}
	</update>


	<!-- AML可疑延迟上报 -->
	<update id="delayAMLList2" parameterType="java.util.HashMap">
		update AML_ANALYSISRESULT set
		IF_DELAY_RPT = '1',
		DELAY_DATE = #{delayDate}
		where
		WORK_DATE = #{WorkDate} and 
		RULE_CODE = #{ruleCode} and
		BATCH_NO = #{batchNo}
	</update>
	

	<!-- 规则代码查询 -->
	<select id="selectRulecode" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		${pageBegin}
		SELECT RULE_CODE,RULE_NOTES FROM TB_ANALYSISRULES where 1=1 and RULE_TYPE = #{RuleType}
		<if test="RULE_CODE!=null  &amp;&amp; !&quot;&quot;.equals(RULE_CODE.trim())">
			and RULE_CODE like '%'+#{RULE_CODE}+'%'
		</if>
		<if test="RULE_NOTES!=null  &amp;&amp; !&quot;&quot;.equals(RULE_NOTES.trim())">
			and RULE_NOTES like '%'+#{RULE_NOTES}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
		${pageEnd}
	</select>

	<select id="selectRulecode_totalCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		SELECT count(*) FROM TB_ANALYSISRULES where 1=1 and RULE_TYPE = #{RuleType}
		<if test="RULE_CODE!=null  &amp;&amp; !&quot;&quot;.equals(RULE_CODE.trim())">
			and RULE_CODE like '%'+#{RULE_CODE}+'%'
		</if>
		<if test="RULE_NOTES!=null  &amp;&amp; !&quot;&quot;.equals(RULE_NOTES.trim())">
			and RULE_NOTES like '%'+#{RULE_NOTES}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
	</select>

	<!-- AML国家地区代码的分页查询 -->
	<select id="selectNationregion2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		${pageBegin}
		select NATIONREGION_CODE, NATIONREGION_NAME, NATIONREGION_NUMBER
		from BI_NATIONREGION
		where 1=1 and len(NATIONREGION_CODE) in (#{queryLenth},2)
		<if test="NATIONREGION_CODE!=null  &amp;&amp; !&quot;&quot;.equals(NATIONREGION_CODE.trim())">
			and NATIONREGION_CODE like '%'+#{NATIONREGION_CODE}+'%'
		</if>
		<if test="NATIONREGION_NAME!=null  &amp;&amp; !&quot;&quot;.equals(NATIONREGION_NAME.trim())">
			and NATIONREGION_NAME like '%'+#{NATIONREGION_NAME}+'%'
		</if>
		<if test="NATIONREGION_NUMBER!=null  &amp;&amp; !&quot;&quot;.equals(NATIONREGION_NUMBER.trim())">
			and NATIONREGION_NUMBER like '%'+#{NATIONREGION_NUMBER}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
		${pageEnd}
	</select>

	<select id="selectNationregion2_totalCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*) from BI_NATIONREGION
		where 1=1 and len(NATIONREGION_CODE) in (#{queryLenth},2)
		<if test="NATIONREGION_CODE!=null  &amp;&amp; !&quot;&quot;.equals(NATIONREGION_CODE.trim())">
			and NATIONREGION_CODE like '%'+#{NATIONREGION_CODE}+'%'
		</if>
		<if test="NATIONREGION_NAME!=null  &amp;&amp; !&quot;&quot;.equals(NATIONREGION_NAME.trim())">
			and NATIONREGION_NAME like '%'+#{NATIONREGION_NAME}+'%'
		</if>
		<if test="NATIONREGION_NUMBER!=null  &amp;&amp; !&quot;&quot;.equals(NATIONREGION_NUMBER.trim())">
			and NATIONREGION_NUMBER like '%'+#{NATIONREGION_NUMBER}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
	</select>

	<!-- AML涉外交易代码查询 -->
	<select id="selectMeta2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		${pageBegin}
		select META_VAL as META_VALUE,META_NAME from TB_DICT
		where 1=1 and GROUP_CODE = '2103'
		<if test="META_VALUE!=null  &amp;&amp; !&quot;&quot;.equals(META_VALUE.trim())">
			and META_VAL like '%'+#{META_VALUE}+'%'
		</if>
		<if test="META_NAME!=null  &amp;&amp; !&quot;&quot;.equals(META_NAME.trim())">
			and META_NAME like '%'+#{META_NAME}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
		${pageEnd}
	</select>

	<select id="selectMeta2_totalCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*) from TB_DICT where 1=1 and GROUP_CODE = '2103'
		<if test="META_VALUE!=null  &amp;&amp; !&quot;&quot;.equals(META_VALUE.trim())">
			and META_VAL like '%'+#{META_VALUE}+'%'
		</if>
		<if test="META_NAME!=null  &amp;&amp; !&quot;&quot;.equals(META_NAME.trim())">
			and META_NAME like '%'+#{META_NAME}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
	</select>

	<!-- 客户信息查询 -->
	<select id="selectClientList2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		${pageBegin}
		select
		CLIENT_ID,PCODE,DEPART_ID,CLIENT_TYPE,IC_TYPE,IC_TYPE_MEMO,IC_NO,NAME,
		ENGLISH_NAME,NATIONALITY,PHONE,ADDRESS,OTHER_CONTACT,INDUSTRY_TYPE,
		REGISTERED_CAPITAL,REP_NAME,REP_IC_TYPE,REP_IC_TYPE_MEMO,REP_IC_NO
		from BI_CUSTOMER
		where 1=1
		<if test="CLIENT_ID!=null  &amp;&amp; !&quot;&quot;.equals(CLIENT_ID.trim())">
			and CLIENT_ID like '%'+#{CLIENT_ID}+'%'
		</if>
		<if test="NAME!=null  &amp;&amp; !&quot;&quot;.equals(NAME.trim())">
			and NAME like '%'+#{NAME}+'%'
		</if>
		<if test="ENGLISH_NAME!=null  &amp;&amp; !&quot;&quot;.equals(ENGLISH_NAME.trim())">
			and ENGLISH_NAME like '%'+#{ENGLISH_NAME}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
		${pageEnd}
	</select>

	<select id="selectClientList2_totalCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*) from BI_CUSTOMER where 1=1
		<if test="CLIENT_ID!=null  &amp;&amp; !&quot;&quot;.equals(CLIENT_ID.trim())">
			and CLIENT_ID like '%'+#{CLIENT_ID}+'%'
		</if>
		<if test="NAME!=null  &amp;&amp; !&quot;&quot;.equals(NAME.trim())">
			and NAME like '%'+#{NAME}+'%'
		</if>
		<if test="ENGLISH_NAME!=null  &amp;&amp; !&quot;&quot;.equals(ENGLISH_NAME.trim())">
			and ENGLISH_NAME like '%'+#{ENGLISH_NAME}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
	</select>

	<!-- 账户信息查询 -->
	<select id="selectAcctList2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		${pageBegin}
		select A.ACCT_ID ,A.ACCT_CUR ,A.CLIENT_ID,C.NAME AS CLIENT_NAME,A.ACCT_TYPE
		,A.OPEN_DATE AS OPEN_TIME,A.CLOSE_DATE AS CLOSE_TIME,A.PBOC_NUM_ACCT
		from BI_ACCOUNT A left join BI_CUSTOMER C on A.CLIENT_ID = C.CLIENT_ID
	     where 1=1 and A.CLIENT_ID = #{CLIENT_ID}
		<if test="ACCT_ID!=null  &amp;&amp; !&quot;&quot;.equals(ACCT_ID.trim())">
			and A.ACCT_ID like '%'+#{ACCT_ID}+'%'
		</if>
		<if test="ACCT_CUR!=null  &amp;&amp; !&quot;&quot;.equals(ACCT_CUR.trim())">
			and A.ACCT_CUR like '%'+#{ACCT_CUR}+'%'
		</if>
		<if test="PBOC_NUM_ACCT!=null  &amp;&amp; !&quot;&quot;.equals(PBOC_NUM_ACCT.trim())">
			and A.PBOC_NUM_ACCT like '%'+#{PBOC_NUM_ACCT}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
		${pageEnd}
	</select>


	<select id="selectAcctList2_totalCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*) from BI_ACCOUNT A left join BI_CUSTOMER C on
		A.CLIENT_ID = C.CLIENT_ID where 1=1 and A.CLIENT_ID = #{CLIENT_ID}
		<if test="ACCT_ID!=null  &amp;&amp; !&quot;&quot;.equals(ACCT_ID.trim())">
			and A.ACCT_ID like '%'+#{ACCT_ID}+'%'
		</if>
		<if test="ACCT_CUR!=null  &amp;&amp; !&quot;&quot;.equals(ACCT_CUR.trim())">
			and A.ACCT_CUR like '%'+#{ACCT_CUR}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
	</select>

	<!-- 对方金融机构信息查询 -->
	<select id="selectOrganizationList2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		${pageBegin}
		select CTPY_FI_CODE, CTPY_FI_NAME, CTPY_FI_TYPE,
		CTPY_FI_COUNTRY,
		CTPY_FI_REGION_CODE, CTPY_FI_PCODE
		from BI_OTHERORGANIZATION
		where 1=1
		<if test="CTPY_FI_CODE!=null  &amp;&amp; !&quot;&quot;.equals(CTPY_FI_CODE.trim())">
			and CTPY_FI_CODE like '%'+#{CTPY_FI_CODE}+'%'
		</if>
		<if test="CTPY_FI_NAME!=null  &amp;&amp; !&quot;&quot;.equals(CTPY_FI_NAME.trim())">
			and CTPY_FI_NAME like '%'+#{CTPY_FI_NAME}+'%'
		</if>
		<if test="CTPY_FI_COUNTRY!=null  &amp;&amp; !&quot;&quot;.equals(CTPY_FI_COUNTRY.trim())">
			and CTPY_FI_COUNTRY like
			'%'+#{CTPY_FI_COUNTRY}+'%'
		</if>
		<if test="CTPY_FI_REGION_CODE!=null  &amp;&amp; !&quot;&quot;.equals(CTPY_FI_REGION_CODE.trim())">
			and CTPY_FI_REGION_CODE like
			'%'+#{CTPY_FI_REGION_CODE}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
		${pageEnd}
	</select>


	<select id="selectOrganizationList2_totalCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*) from BI_OTHERORGANIZATION where 1=1
		<if test="CTPY_FI_CODE!=null  &amp;&amp; !&quot;&quot;.equals(CTPY_FI_CODE.trim())">
			and CTPY_FI_CODE like '%'+#{CTPY_FI_CODE}+'%'
		</if>
		<if test="CTPY_FI_NAME!=null  &amp;&amp; !&quot;&quot;.equals(CTPY_FI_NAME.trim())">
			and CTPY_FI_NAME like '%'+#{CTPY_FI_NAME}+'%'
		</if>
		<if test="CTPY_FI_COUNTRY!=null  &amp;&amp; !&quot;&quot;.equals(CTPY_FI_COUNTRY.trim())">
			and CTPY_FI_COUNTRY like
			'%'+#{CTPY_FI_COUNTRY}+'%'
		</if>
		<if test="CTPY_FI_REGION_CODE!=null  &amp;&amp; !&quot;&quot;.equals(CTPY_FI_REGION_CODE.trim())">
			and CTPY_FI_REGION_CODE like
			'%'+#{CTPY_FI_REGION_CODE}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
	</select>

	<!-- 交易对手信息查询 -->
	<select id="selectCounterpartyList2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		${pageBegin}
		select
		CTPY_NAME,CTPY_TYPE,CTPY_NATIONALITY,CTPY_ACCT_ID,
		CTPY_ACCT_TYPE,CTPY_IC_TYPE,CTPY_IC_TYPE_MEMO,CTPY_IC_CODE
		FROM BI_OTHERACCOUNT
		where 1=1
		<if test="CTPY_ACCT_ID!=null  &amp;&amp; !&quot;&quot;.equals(CTPY_ACCT_ID.trim())">
			and CTPY_ACCT_ID like
			'%'+#{CTPY_ACCT_ID}+'%'
		</if>
		<if test="CTPY_NAME!=null  &amp;&amp; !&quot;&quot;.equals(CTPY_NAME.trim())">
			and CTPY_NAME like '%'+#{CTPY_NAME}+'%'
		</if>
		<if test="CTPY_IC_CODE!=null  &amp;&amp; !&quot;&quot;.equals(CTPY_IC_CODE.trim())">
			and CTPY_IC_CODE like '%'+#{CTPY_IC_CODE}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
		${pageEnd}
	</select>


	<select id="selectCounterpartyList2_totalCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*) from BI_OTHERACCOUNT where 1=1
		<if test="CTPY_ACCT_ID!=null  &amp;&amp; !&quot;&quot;.equals(CTPY_ACCT_ID.trim())">
			and CTPY_ACCT_ID like
			'%'+#{CTPY_ACCT_ID}+'%'
		</if>
		<if test="CTPY_NAME!=null  &amp;&amp; !&quot;&quot;.equals(CTPY_NAME.trim())">
			and CTPY_NAME like '%'+#{CTPY_NAME}+'%'
		</if>
		<if test="CTPY_IC_CODE!=null  &amp;&amp; !&quot;&quot;.equals(CTPY_IC_CODE.trim())">
			and CTPY_IC_CODE like '%'+#{CTPY_IC_CODE}+'%'
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
	</select>

	<!-- 网点代码查询 -->
	<select id="showDepartList2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select DEPART_ID,DEPART_TYPE,DEPART_NAME,REPORT_AREA AS DEPART_AREACODE from
		TB_BRANCH
		where ENABLE_FLAG=1 AND DEPART_ID
		= #{DEPART_ID}
	</select>

	<!-- 二次补录大额新增/补报记录检查 -->
	<select id="addAMLSecondMakeupTotal" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*) from AML_ANALYSISRESULT
		where 1=1
		<if test="REF_NO!=null  &amp;&amp; !&quot;&quot;.equals(REF_NO.trim())">
			and REF_NO = #{REF_NO}
		</if>
		<if test="WORK_DATE!=null  &amp;&amp; !&quot;&quot;.equals(WORK_DATE.trim())">
			and WORK_DATE = #{WORK_DATE}
		</if>
		<if test="RULE_CODE!=null  &amp;&amp; !&quot;&quot;.equals(RULE_CODE.trim())">
			AND RULE_CODE = #{RULE_CODE}
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
		and RULE_TYPE = '01' and IS_DEL &lt;&gt; '1'
	</select>

	<!-- 二次补录可疑新增/补报记录检查 -->
	<select id="addAMLSecondMakeupTotal1" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*) from AML_ANALYSISRESULT
		where 1=1
		<if test="REF_NO!=null  &amp;&amp; !&quot;&quot;.equals(REF_NO.trim())">
			and REF_NO = #{REF_NO}
		</if>
		<if test="WORK_DATE!=null  &amp;&amp; !&quot;&quot;.equals(WORK_DATE.trim())">
			and WORK_DATE = #{WORK_DATE}
		</if>
		<if test="RULE_CODE!=null  &amp;&amp; !&quot;&quot;.equals(RULE_CODE.trim())">
			AND RULE_CODE = #{RULE_CODE}
		</if>
		<if test="bizSql!=null">
			and ${bizSql}
		</if>
		and RULE_TYPE = '02' and IS_DEL &lt;&gt; '1'
	</select>

	<!-- 大额交易流水检查 -->
	<select id="checkAMLSecondMakeupRefNo01" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*) from AML_ANALYSISRESULT
		where 1=1 REF_NO = #{REF_NO}
		and RULE_TYPE = '01' and IS_DEL &lt;&gt; '1'
	</select>

	<!-- 可疑交易流水检查 -->
	<select id="checkAMLSecondMakeupRefNo02" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*) from AML_ANALYSISRESULT
		where 1=1 REF_NO = #{REF_NO}
		and RULE_TYPE = '02' and IS_DEL &lt;&gt; '1'
	</select>

	<!-- 查询报告机构代码 -->
	<select id="addAMLSecondMakeupUnitCode" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select AML_CODE AS UNIT_CODE from TB_BRANCH where DEPART_CODE = #{DEPART_ID}
	</select>

	<!-- AML第二次次补录的手工新增 业务流水保存 -->
	<insert id="saveAMLSecondMakeupRefNo" parameterType="java.util.HashMap">
		insert into ID_REfNO_MAPPING (
		WORK_DATE, OLD_REF_NO ,ORIG_REF_NO, NEW_REF_NO , MODULE
		)VALUES(
		#{WORK_DATE,jdbcType=VARCHAR},#{ORIG_REF_NO,jdbcType=VARCHAR},#{ORIG_REF_NO,jdbcType=VARCHAR},#{REF_NO,jdbcType=VARCHAR},'1'
		)
	</insert>

	<!-- 对方金融机构信息检查 -->
	<select id="checkAMLSecondMakeupOrganization" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*) from BI_OTHERORGANIZATION where
		CTPY_FI_CODE=#{CTPY_FI_CODE}
	</select>

	<!-- 交易对手检查 -->
	<select id="checkAMLSecondMakeupAccont" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*) from BI_OTHERACCOUNT where
		CTPY_ACCT_ID=#{CTPY_ACCT_ID}
	</select>

	<!-- 对方金融机构信息保存 -->
	<insert id="saveAMLSecondMakeupOrganization" parameterType="java.util.HashMap">
		insert into BI_OTHERORGANIZATION (
		CTPY_FI_CODE,CTPY_FI_PCODE,CTPY_FI_NAME,CTPY_FI_TYPE,
		CTPY_FI_COUNTRY,CTPY_FI_REGION_CODE
		)values(
		#{CTPY_FI_CODE},#{CTPY_FI_PCODE},#{CTPY_FI_NAME},
		#{CTPY_FI_TYPE},#{CTPY_FI_COUNTRY},#{CTPY_FI_REGION_CODE}
		)
	</insert>
	
  <!-- 对方金融机构信息更新-->
  <update id="updateAMLSecondMakeupOrganization" parameterType="java.util.HashMap">
   update BI_OTHERORGANIZATION SET
   CTPY_FI_PCODE = #{CTPY_FI_PCODE},CTPY_FI_NAME = #{CTPY_FI_NAME},CTPY_FI_TYPE = #{CTPY_FI_TYPE},
   CTPY_FI_COUNTRY = #{CTPY_FI_COUNTRY}, CTPY_FI_REGION_CODE = #{CTPY_FI_REGION_CODE}
   WHERE CTPY_FI_CODE = #{CTPY_FI_CODE}
   </update>

	<!-- 对手交易信息保存 -->
	<insert id="saveAMLSecondMakeupAccont" parameterType="java.util.HashMap">
		insert into BI_OTHERACCOUNT (
		CTPY_ACCT_ID,CTPY_ACCT_TYPE,CTPY_IC_TYPE,CTPY_IC_CODE,
		CTPY_NATIONALITY,CTPY_TYPE,CTPY_NAME
		)values(
		#{CTPY_ACCT_ID},#{CTPY_ACCT_TYPE},#{CTPY_IC_TYPE},
		#{CTPY_IC_CODE},#{CTPY_NATIONALITY},#{CTPY_TYPE},#{CTPY_NAME}
		)
	</insert>
	
  <!-- 对手交易信息更新-->
  <update id="updateAMLSecondMakeupAccont" parameterType="java.util.HashMap">
   update BI_OTHERACCOUNT SET
   CTPY_ACCT_TYPE = #{CTPY_ACCT_TYPE},CTPY_IC_TYPE = #{CTPY_IC_TYPE},
   CTPY_IC_CODE = #{CTPY_IC_CODE}, CTPY_NATIONALITY = #{CTPY_NATIONALITY}, CTPY_TYPE = #{CTPY_TYPE}, CTPY_NAME = #{CTPY_NAME}
   WHERE CTPY_ACCT_ID = #{CTPY_ACCT_ID}
   </update>
	

	<!-- 可疑业务批次号检查查 -->
	<select id="checkBatchNo" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*) from AML_ANALYSISRESULT
		where ORIG_BATCH_NO = #{ORIG_BATCH_NO} and ORIG_WORK_DATE= #{WORK_DATE}
		and WORK_DATE = #{PERSENT_WORK_DATE}
	</select>

	<!-- 可疑业务批次号查询 -->
	<select id="queryBatchNo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select
		CASE WHEN
		Max(BATCH_NO) is NULL THEN
		'0' ELSE Max(BATCH_NO) END BATCH_NO
		from AML_ANALYSISRESULT where RULE_TYPE='02' and WORK_DATE = #{PERSENT_WORK_DATE}
	</select>
</mapper>